android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    float TOGGLE_DRAWABLE_OFFSET -> TOGGLE_DRAWABLE_OFFSET
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    android.graphics.drawable.Drawable mThemeImage -> mThemeImage
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    void syncState() -> syncState
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.app.Activity access$300(android.support.v4.app.ActionBarDrawerToggle) -> access$300
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    boolean mHasMirroring -> mHasMirroring
    android.graphics.Rect mTmpRect -> mTmpRect
    float mPosition -> mPosition
    float mOffset -> mOffset
    android.support.v4.app.ActionBarDrawerToggle this$0 -> this$0
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    void setOffset(float) -> setOffset
    void draw(android.graphics.Canvas) -> draw
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    android.support.v4.util.SimpleArrayMap children -> children
    java.util.ArrayList fragments -> fragments
    android.support.v4.util.SimpleArrayMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void ensureHierarchy(android.content.Context) -> ensureHierarchy
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> access$000
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.util.ArrayList mActions -> mActions
    android.app.Notification mNotification -> mNotification
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    android.app.Notification$Builder b -> b
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.app.Notification build() -> build
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.app.Watson -> android.support.v4.app.Watson:
    java.lang.String TAG -> TAG
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
android.support.v4.app.Watson$OnCreateOptionsMenuListener -> android.support.v4.app.Watson$OnCreateOptionsMenuListener:
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
android.support.v4.app.Watson$OnOptionsItemSelectedListener -> android.support.v4.app.Watson$OnOptionsItemSelectedListener:
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
android.support.v4.app.Watson$OnPrepareOptionsMenuListener -> android.support.v4.app.Watson$OnPrepareOptionsMenuListener:
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
android.support.v4.content.ContextCompat -> android.support.v4.content.a:
    java.lang.String DIR_ANDROID -> DIR_ANDROID
    java.lang.String DIR_DATA -> DIR_DATA
    java.lang.String DIR_OBB -> DIR_OBB
    java.lang.String DIR_FILES -> DIR_FILES
    java.lang.String DIR_CACHE -> DIR_CACHE
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> a
    java.io.File DEVICE_ROOT -> b
    java.util.HashMap sCache -> c
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> d
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> a
    java.io.File buildPath(java.io.File,java.lang.String[]) -> a
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.b:
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.c:
    java.lang.String mAuthority -> a
    java.util.HashMap mRoots -> b
    void addRoot(java.lang.String,java.io.File) -> a
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.IntentCompat -> android.support.v4.content.d:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> a
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.e:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.f:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.g:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.h:
android.support.v4.content.Loader -> android.support.v4.content.i:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void stopLoading() -> b
    void abandon() -> c
    void reset() -> d
    java.lang.String toString() -> toString
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.j:
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    android.util.SparseArray mActiveWakeLocks -> a
    int mNextId -> b
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.a.a.a:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> a
    void setAutoMirrored$4eb43225(android.graphics.drawable.Drawable) -> a
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> b
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.a.a.b:
    void setAutoMirrored$4eb43225(android.graphics.drawable.Drawable) -> a
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> b
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.a.a.c:
    void setAutoMirrored$4eb43225(android.graphics.drawable.Drawable) -> a
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> b
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.a.a.d:
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.a.a.e:
    void setAutoMirrored$4eb43225(android.graphics.drawable.Drawable) -> a
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> b
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.util.ArrayMap -> android.support.v4.c.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.c.a$1:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.c.b:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.c:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.d:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.MapCollections -> android.support.v4.c.e:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.c.f:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.c.g:
    android.support.v4.util.MapCollections this$0 -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.c.h:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.c.i:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.c.j:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.c.k:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> d
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> e
    java.lang.Object valueAt(int) -> b
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> c
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.l:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> c
    java.lang.Object get(int) -> a
    void remove(int) -> b
    void removeAt(int) -> c
    void gc() -> d
    void put(int,java.lang.Object) -> a
    int size() -> a
    int keyAt(int) -> d
    java.lang.Object valueAt(int) -> e
    int indexOfKey(int) -> f
    void clear() -> b
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.b$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.c:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.d$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.f:
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.f$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.g:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.h:
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.h$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.i:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.j:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.k:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.l:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.m:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.n:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers$79c6ddc0(android.view.KeyEvent) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> b
    void startTracking(android.view.KeyEvent) -> c
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.o:
    int metaStateFilterDirectionalModifiers$2e71581f(int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers$255f299(int) -> b
    boolean metaStateHasNoModifiers(int) -> c
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.p:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.q:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers$255f299(int) -> b
    boolean metaStateHasNoModifiers(int) -> c
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.r:
    boolean metaStateHasModifiers$255f299(int) -> b
    boolean metaStateHasNoModifiers(int) -> c
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.s:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.t:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.u:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.v:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.w:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    int mIndicatorColor -> e
    int mIndicatorHeight -> f
    int mMinPaddingBottom -> g
    int mMinStripHeight -> h
    int mTabPadding -> i
    android.graphics.Paint mTabPaint -> j
    android.graphics.Rect mTempRect -> k
    int mTabAlpha -> l
    boolean mDrawFullUnderline -> m
    boolean mDrawFullUnderlineSet -> n
    int mFullUnderlineHeight -> o
    boolean mIgnoreTap -> p
    float mInitialMotionX -> q
    float mInitialMotionY -> r
    int mTouchSlop -> s
    void setPadding(int,int,int,int) -> setPadding
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    int getMinHeight() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> e
    float mLastKnownPositionOffset -> f
    int mScaledTextSpacing -> g
    int mGravity -> h
    boolean mUpdatingText -> i
    boolean mUpdatingPositions -> j
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> k
    java.lang.ref.WeakReference mWatchingAdapter -> l
    int[] ATTRS -> m
    int[] TEXT_ATTRS -> n
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> o
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float,boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> a
    float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.x:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled$486775f1(int,float) -> a
    void onPageSelected$13462e() -> a
    void onPageScrollStateChanged(int) -> a
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.y:
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.z:
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.aa:
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.ab:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.ac:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.ad:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ae:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.af:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility$5359dc9a(android.view.View) -> d
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> e
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> f
    android.view.ViewParent getParentForAccessibility(android.view.View) -> g
    boolean isOpaque(android.view.View) -> h
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ag:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility$5359dc9a(android.view.View) -> d
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> e
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> f
    android.view.ViewParent getParentForAccessibility(android.view.View) -> g
    boolean isOpaque(android.view.View) -> h
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.ah:
    boolean isOpaque(android.view.View) -> h
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ai:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.aj:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> e
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ak:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.al:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility$5359dc9a(android.view.View) -> d
    android.view.ViewParent getParentForAccessibility(android.view.View) -> g
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.am:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> f
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.an:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ao:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility$5359dc9a(android.view.View) -> d
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> e
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> f
    android.view.ViewParent getParentForAccessibility(android.view.View) -> g
    boolean isOpaque(android.view.View) -> h
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ap:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    void setMotionEventSplittingEnabled$4d3af60(android.view.ViewGroup) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.aq:
    void setMotionEventSplittingEnabled$4d3af60(android.view.ViewGroup) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ar:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.as:
    void setMotionEventSplittingEnabled$4d3af60(android.view.ViewGroup) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.at:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.au:
    void setMotionEventSplittingEnabled$4d3af60(android.view.ViewGroup) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mLastMotionX -> E
    float mLastMotionY -> F
    float mInitialMotionX -> G
    float mInitialMotionY -> H
    int mActivePointerId -> I
    android.view.VelocityTracker mVelocityTracker -> J
    int mMinimumVelocity -> K
    int mMaximumVelocity -> L
    int mFlingDistance -> M
    int mCloseEnough -> N
    boolean mFakeDragging -> O
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> P
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> Q
    boolean mFirstLayout -> R
    boolean mNeedCalculatePageOffsets -> S
    boolean mCalledSuper -> T
    int mDecorChildCount -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> W
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> Z
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> aa
    int mDrawingOrder -> ab
    java.util.ArrayList mDrawingOrderedChildren -> ac
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ad
    java.lang.Runnable mEndScrollRunnable -> ae
    int mScrollState -> af
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> b
    android.support.v4.view.PagerAdapter getAdapter() -> a
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> a
    int getClientWidth() -> d
    void setCurrentItem(int) -> a
    void setCurrentItem$2563266(int) -> c
    int getCurrentItem() -> b
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void populate() -> e
    void populate(int) -> d
    void sortChildDrawingOrder() -> f
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> e
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> f
    void onPageScrolled$486775f1(int,float) -> a
    void completeScroll(boolean) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent$1385ff() -> g
    boolean performDrag(float) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> b
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean arrowScroll(int) -> g
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> j
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> c
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.av:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.aw:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ax:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ay:
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.az:
    void onPageScrolled$486775f1(int,float) -> a
    void onPageSelected$13462e() -> a
    void onPageScrollStateChanged(int) -> a
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ba:
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.bb:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    java.lang.Object getInfo() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setSource(android.view.View) -> a
    void addChild(android.view.View) -> b
    int getActions() -> b
    void addAction(int) -> a
    void setMovementGranularities(int) -> b
    int getMovementGranularities() -> c
    void setParent(android.view.View) -> c
    void getBoundsInParent(android.graphics.Rect) -> a
    void setBoundsInParent(android.graphics.Rect) -> b
    void getBoundsInScreen(android.graphics.Rect) -> c
    void setBoundsInScreen(android.graphics.Rect) -> d
    boolean isFocusable() -> d
    void setFocusable(boolean) -> a
    boolean isFocused() -> e
    void setFocused(boolean) -> b
    boolean isVisibleToUser() -> f
    void setVisibleToUser(boolean) -> c
    boolean isAccessibilityFocused() -> g
    void setAccessibilityFocused(boolean) -> d
    boolean isSelected() -> h
    void setSelected(boolean) -> e
    boolean isClickable() -> i
    void setClickable(boolean) -> f
    boolean isLongClickable() -> j
    void setLongClickable(boolean) -> g
    boolean isEnabled() -> k
    void setEnabled(boolean) -> h
    java.lang.CharSequence getPackageName() -> l
    void setPackageName(java.lang.CharSequence) -> a
    java.lang.CharSequence getClassName() -> m
    void setClassName(java.lang.CharSequence) -> b
    java.lang.CharSequence getContentDescription() -> n
    void setContentDescription(java.lang.CharSequence) -> c
    void recycle() -> o
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setSelected(java.lang.Object,boolean) -> f
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isFocusable(java.lang.Object) -> k
    void setFocusable(java.lang.Object,boolean) -> c
    boolean isFocused(java.lang.Object) -> l
    void setFocused(java.lang.Object,boolean) -> d
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> g
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> h
    boolean isSelected(java.lang.Object) -> p
    void setSelected(java.lang.Object,boolean) -> f
    boolean isClickable(java.lang.Object) -> i
    void setClickable(java.lang.Object,boolean) -> a
    boolean isLongClickable(java.lang.Object) -> m
    void setLongClickable(java.lang.Object,boolean) -> e
    boolean isEnabled(java.lang.Object) -> j
    void setEnabled(java.lang.Object,boolean) -> b
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> f
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> g
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> h
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.a.e:
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.a.f:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.g:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isVisibleToUser(java.lang.Object) -> s
    boolean isAccessibilityFocused(java.lang.Object) -> t
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setVisibleToUser(java.lang.Object,boolean) -> g
    void setAccessibilityFocused(java.lang.Object,boolean) -> h
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setSelected(java.lang.Object,boolean) -> f
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.h:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo$f3a5639() -> b
    boolean performAction$5985f823() -> c
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> d
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.i:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.j:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.j$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction$5985f823() -> a
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> b
    java.lang.Object createAccessibilityNodeInfo$54cf32c4() -> c
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.a.k:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.a.k$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> b
    boolean performAction$5985f823() -> a
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> b
    java.lang.Object createAccessibilityNodeInfo$54cf32c4() -> c
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.l:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.m:
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.m$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.n:
    java.lang.Object createAccessibilityNodeInfo$54cf32c4() -> c
    boolean performAction$5985f823() -> a
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.a.o:
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.a.o$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.a.p:
    java.lang.Object createAccessibilityNodeInfo$54cf32c4() -> c
    boolean performAction$5985f823() -> a
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> b
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    java.lang.Runnable mDelayedHide -> a
    java.lang.Runnable mDelayedShow -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> a
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.a:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.b:
    android.support.v4.widget.CursorAdapter this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.c:
    android.support.v4.widget.CursorAdapter this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.d:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> a
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.e:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState$5cdeb3e3(int,android.view.View) -> a
    void setDrawerViewOffset(android.view.View,float) -> a
    float getDrawerViewOffset(android.view.View) -> b
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> c
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> g
    void openDrawer$13462e() -> b
    void closeDrawer(android.view.View) -> d
    void closeDrawer$13462e() -> c
    boolean isDrawerOpen$134632() -> d
    boolean isDrawerVisible(android.view.View) -> h
    boolean isDrawerVisible$134632() -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.View findVisibleDrawer() -> h
    void cancelChildViewTouch() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> g
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.f:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.g:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.h:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.i:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void setDragger(android.support.v4.widget.ViewDragHelper) -> a
    void removeCallbacks() -> a
    boolean tryCaptureView$5359dc96(android.view.View) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged$5b6f797d(android.view.View,int) -> a
    void onViewCaptured$5359dc9a(android.view.View) -> b
    void closeOtherDrawer() -> c
    void onViewReleased$17e2ac03(android.view.View,float) -> a
    void onEdgeTouched$255f295() -> b
    void onEdgeDragStarted(int,int) -> a
    int getViewHorizontalDragRange(android.view.View) -> c
    int clampViewPositionHorizontal$17e143b0(android.view.View,int) -> b
    int clampViewPositionVertical$17e143b0(android.view.View) -> d
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> a
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.i$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.j:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.k:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.l:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.m:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.n:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.o:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.p:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.q:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.r:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.s:
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void dispatchOnPanelOpened$3c7ec8c3() -> a
    void dispatchOnPanelClosed$3c7ec8c3() -> b
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane$5359dc96$134632() -> d
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> c
    boolean smoothSlideTo$254957c(float) -> a
    void computeScroll() -> computeScroll
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> b
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> a
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> b
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> c
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> d
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> a
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> a
    int access$700(android.support.v4.widget.SlidingPaneLayout) -> e
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> f
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.t:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.u:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.v:
    android.support.v4.widget.SlidingPaneLayout this$0 -> a
    boolean tryCaptureView$5359dc96(android.view.View) -> a
    void onViewDragStateChanged(int) -> a
    void onViewCaptured$5359dc9a(android.view.View) -> b
    void onViewPositionChanged$5b6f797d(android.view.View,int) -> a
    void onViewReleased$17e2ac03(android.view.View,float) -> a
    int getViewHorizontalDragRange(android.view.View) -> c
    int clampViewPositionHorizontal$17e143b0(android.view.View,int) -> b
    void onEdgeDragStarted(int,int) -> a
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.w:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.x:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.y:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.z:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.aa:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.ab:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ac:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> a
    void setMinVelocity(float) -> a
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    boolean continueSettling$138603() -> g
    void dispatchViewReleased$2548a35(float) -> b
    void clearMotionHistory(int) -> c
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop$17e2abff(android.view.View,float) -> a
    boolean checkTouchSlop$134632() -> h
    void releaseViewForPointerUp() -> i
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> b
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ac$1:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ac$2:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ad:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged$5b6f797d(android.view.View,int) -> a
    void onViewCaptured$5359dc9a(android.view.View) -> b
    void onViewReleased$17e2ac03(android.view.View,float) -> a
    void onEdgeTouched$255f295() -> b
    void onEdgeDragStarted(int,int) -> a
    int getViewHorizontalDragRange(android.view.View) -> c
    boolean tryCaptureView$5359dc96(android.view.View) -> a
    int clampViewPositionHorizontal$17e143b0(android.view.View,int) -> b
    int clampViewPositionVertical$17e143b0(android.view.View) -> d
android.util.Base64 -> android.a.a:
    boolean $assertionsDisabled -> a
    java.lang.String encodeToString$79bb807(byte[]) -> a
android.util.Base64$Coder -> android.a.b:
    byte[] output -> a
    int op -> b
android.util.Base64$Encoder -> android.a.c:
    byte[] ENCODE -> h
    byte[] ENCODE_WEBSAFE -> i
    byte[] tail -> j
    int tailLen -> c
    int count -> k
    boolean do_padding -> d
    boolean do_newline -> e
    boolean do_cr -> f
    byte[] alphabet -> l
    boolean $assertionsDisabled -> g
    boolean process$7dcd25fc$1cf967a0(byte[],int) -> a
com.OsMoDroid.APIComResult -> com.OsMoDroid.a:
    org.json.JSONObject Jo -> a
    java.lang.String Command -> b
    org.json.JSONArray ja -> c
    java.lang.String rawresponse -> d
    java.lang.String url -> e
    java.lang.String post -> f
    int notificationid -> g
    com.OsMoDroid.ColoredGPX load -> h
com.OsMoDroid.APIcomParams -> com.OsMoDroid.b:
    java.lang.String action -> a
    java.lang.String post -> b
    java.lang.String command -> c
    java.io.File uploadfile -> d
    android.support.v4.app.NotificationCompat$Builder notificationBuilder -> e
    int notification -> f
    com.OsMoDroid.ColoredGPX load -> g
com.OsMoDroid.BootComplitedReceiver -> com.OsMoDroid.BootComplitedReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.OsMoDroid.Channel -> com.OsMoDroid.c:
    java.util.ArrayList gpxList -> a
    java.lang.String name -> b
    int u -> c
    java.lang.String created -> d
    java.lang.String ch -> e
    java.lang.String url -> f
    java.util.List deviceList -> g
    java.util.List messagesstringList -> h
    java.lang.Boolean connected -> i
    java.lang.Boolean send -> j
    com.OsMoDroid.LocalService localService -> k
    com.OsMoDroid.ResultsListener gpxdownloadListener -> l
    java.util.ArrayList pointList -> m
    void addtrack(com.OsMoDroid.ColoredGPX) -> a
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    void getPointList(org.json.JSONArray) -> a
com.OsMoDroid.Channel$1 -> com.OsMoDroid.c$1:
    com.OsMoDroid.Channel this$0 -> a
    void onResultsSucceeded(com.OsMoDroid.APIComResult) -> a
com.OsMoDroid.Channel$Point -> com.OsMoDroid.d:
    int u -> a
    float lat -> b
    float lon -> c
    java.lang.String name -> d
    java.lang.String description -> e
    java.lang.String color -> f
    com.OsMoDroid.Channel this$0 -> g
com.OsMoDroid.ChannelDevicesFragment -> com.OsMoDroid.ChannelDevicesFragment:
    android.widget.ListView lv1 -> a
    android.widget.ListView lv2 -> b
    android.widget.Button sendButton -> c
    android.widget.EditText input -> d
    java.text.SimpleDateFormat sdf1 -> e
    com.OsMoDroid.GPSLocalServiceClient globalActivity -> f
    int channelpos -> g
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void onDestroy() -> onDestroy
    void onCreate(android.os.Bundle) -> onCreate
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onResume() -> onResume
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResultsSucceeded(com.OsMoDroid.APIComResult) -> a
com.OsMoDroid.ChannelDevicesFragment$1 -> com.OsMoDroid.ChannelDevicesFragment$1:
    com.OsMoDroid.ChannelDevicesFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.OsMoDroid.ChannelDevicesFragment$2 -> com.OsMoDroid.ChannelDevicesFragment$2:
    com.OsMoDroid.ChannelDevicesFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.OsMoDroid.ChannelsAdapter -> com.OsMoDroid.e:
    com.OsMoDroid.LocalService localservice -> a
    android.content.Context context -> b
    android.view.View$OnClickListener myCheckChangList -> c
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.OsMoDroid.ChannelsAdapter$1 -> com.OsMoDroid.e$1:
    com.OsMoDroid.ChannelsAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.OsMoDroid.ChannelsDevicesAdapter -> com.OsMoDroid.f:
    android.widget.TextView channelDeviceName -> a
    android.widget.TextView channelDeviceWhere -> b
    android.widget.TextView channelDeviceSpeed -> c
    android.widget.TextView channelDeviceDistance -> d
    android.location.Location channelDeviceLocation -> e
    android.content.Context context -> f
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.OsMoDroid.ChannelsFragment -> com.OsMoDroid.ChannelsFragment:
    com.OsMoDroid.GPSLocalServiceClient globalActivity -> b
    android.widget.ListView lv1 -> c
    java.lang.String canalid -> a
    java.lang.String u -> d
    java.text.SimpleDateFormat sdf1 -> e
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onResume() -> onResume
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void onCreate(android.os.Bundle) -> onCreate
    void onAttach(android.app.Activity) -> onAttach
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResultsSucceeded(com.OsMoDroid.APIComResult) -> a
    com.OsMoDroid.GPSLocalServiceClient access$0(com.OsMoDroid.ChannelsFragment) -> a
com.OsMoDroid.ChannelsFragment$1 -> com.OsMoDroid.ChannelsFragment$1:
    com.OsMoDroid.ChannelsFragment this$0 -> a
    android.widget.EditText val$input -> b
    android.widget.AdapterView$AdapterContextMenuInfo val$acmi -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.OsMoDroid.ChannelsFragment$2 -> com.OsMoDroid.ChannelsFragment$2:
    com.OsMoDroid.ChannelsFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.OsMoDroid.ChannelsFragment$3 -> com.OsMoDroid.ChannelsFragment$3:
    com.OsMoDroid.ChannelsFragment this$0 -> a
    android.widget.EditText val$input1 -> b
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.OsMoDroid.ChannelsFragment$4 -> com.OsMoDroid.ChannelsFragment$4:
    com.OsMoDroid.ChannelsFragment this$0 -> a
    android.widget.EditText val$input -> b
    android.widget.EditText val$input1 -> c
    android.widget.EditText val$input2 -> d
    android.widget.CheckBox val$chb1 -> e
    void onClick(android.content.DialogInterface,int) -> onClick
com.OsMoDroid.ChannelsFragment$5 -> com.OsMoDroid.ChannelsFragment$5:
    com.OsMoDroid.ChannelsFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.OsMoDroid.ChannelsFragment$6 -> com.OsMoDroid.ChannelsFragment$6:
    com.OsMoDroid.ChannelsFragment this$0 -> a
    android.widget.EditText val$input -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.OsMoDroid.ChannelsFragment$7 -> com.OsMoDroid.ChannelsFragment$7:
    com.OsMoDroid.ChannelsFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.OsMoDroid.ChannelsFragment$8 -> com.OsMoDroid.ChannelsFragment$8:
    com.OsMoDroid.ChannelsFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.OsMoDroid.ChannelsFragment$9 -> com.OsMoDroid.ChannelsFragment$9:
    com.OsMoDroid.ChannelsFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.OsMoDroid.ColoredGPX -> com.OsMoDroid.g:
    java.io.File gpxfile -> a
    int color -> b
    boolean equals(java.lang.Object) -> equals
com.OsMoDroid.Device -> com.OsMoDroid.h:
    int u -> a
    java.lang.String name -> b
    java.lang.String app -> c
    java.lang.String last -> d
    java.lang.String url -> e
    java.lang.String where -> f
    float lat -> g
    float lon -> h
    java.lang.String online -> i
    java.lang.String state -> j
    java.lang.String uid -> k
    java.lang.String speed -> l
    java.lang.String color -> m
    java.lang.String toString() -> toString
com.OsMoDroid.DeviceAdapter -> com.OsMoDroid.i:
    android.widget.TextView deviceName -> a
    android.widget.TextView deviceWhere -> b
    android.widget.TextView deviceLast -> c
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.OsMoDroid.DeviceChatAdapter -> com.OsMoDroid.j:
    android.widget.TextView txtFromAddr -> a
    android.widget.TextView txtFromName -> b
    android.widget.TextView txtText -> c
    android.widget.TextView txtTime -> d
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.OsMoDroid.DeviceChatFragment -> com.OsMoDroid.DeviceChatFragment:
    android.widget.ListView lv2 -> a
    android.widget.Button sendButton -> b
    android.widget.EditText input -> c
    int deviceU -> d
    java.text.SimpleDateFormat sdf1 -> e
    com.OsMoDroid.GPSLocalServiceClient globalActivity -> f
    com.OsMoDroid.Device getDeviceByU(int) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onResume() -> onResume
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResultsSucceeded(com.OsMoDroid.APIComResult) -> a
    com.OsMoDroid.GPSLocalServiceClient access$0(com.OsMoDroid.DeviceChatFragment) -> a
com.OsMoDroid.DeviceChatFragment$1 -> com.OsMoDroid.DeviceChatFragment$1:
    com.OsMoDroid.DeviceChatFragment this$0 -> a
    void onChanged() -> onChanged
com.OsMoDroid.DeviceChatFragment$2 -> com.OsMoDroid.DeviceChatFragment$2:
    com.OsMoDroid.DeviceChatFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.OsMoDroid.DevicesFragment -> com.OsMoDroid.DevicesFragment:
    com.OsMoDroid.GPSLocalServiceClient globalActivity -> a
    android.widget.ListView lv1 -> b
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onResume() -> onResume
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void onCreate(android.os.Bundle) -> onCreate
    void onAttach(android.app.Activity) -> onAttach
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void getDevices(com.OsMoDroid.ResultsListener,android.content.Context) -> a
    void onResultsSucceeded(com.OsMoDroid.APIComResult) -> a
    com.OsMoDroid.GPSLocalServiceClient access$0(com.OsMoDroid.DevicesFragment) -> a
com.OsMoDroid.DevicesFragment$1 -> com.OsMoDroid.DevicesFragment$1:
    com.OsMoDroid.DevicesFragment this$0 -> a
    android.widget.EditText val$input -> b
    android.widget.AdapterView$AdapterContextMenuInfo val$acmi -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.OsMoDroid.DevicesFragment$2 -> com.OsMoDroid.DevicesFragment$2:
    com.OsMoDroid.DevicesFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.OsMoDroid.DevicesFragment$3 -> com.OsMoDroid.DevicesFragment$3:
    com.OsMoDroid.DevicesFragment this$0 -> a
    android.widget.EditText val$inputhash -> b
    android.widget.EditText val$inputN -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.OsMoDroid.DevicesFragment$4 -> com.OsMoDroid.DevicesFragment$4:
    com.OsMoDroid.DevicesFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.OsMoDroid.DevicesFragment$5 -> com.OsMoDroid.DevicesFragment$5:
    com.OsMoDroid.DevicesFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.OsMoDroid.ExceptionHandler -> com.OsMoDroid.k:
    java.text.DateFormat formatter -> a
    java.text.DateFormat fileFormatter -> b
    java.lang.String versionName -> c
    int versionCode -> d
    java.lang.String stacktraceDir -> e
    java.lang.Thread$UncaughtExceptionHandler previousHandler -> f
    com.OsMoDroid.ExceptionHandler inContext(android.content.Context) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void processThrowable(java.lang.Throwable,java.lang.StringBuilder) -> a
com.OsMoDroid.GPSLocalServiceClient -> com.OsMoDroid.GPSLocalServiceClient:
    android.content.Intent NeedIntent -> a
    boolean messageShowed -> b
    java.lang.String key -> c
    java.lang.String login -> d
    int speed -> M
    int speedbearing_gpx -> e
    int bearing_gpx -> f
    long notifyperiod -> N
    int hdop_gpx -> g
    int period_gpx -> h
    int distance_gpx -> i
    boolean sendsound -> O
    boolean playsound -> P
    boolean started -> j
    boolean vibrate -> Q
    boolean usecourse -> R
    int vibratetime -> S
    com.OsMoDroid.LocalService mService -> k
    boolean mBound -> l
    int speedbearing -> m
    int bearing -> n
    boolean gpx -> T
    boolean live -> o
    int hdop -> p
    int period -> q
    int distance -> r
    java.lang.String pass -> U
    java.lang.String hash -> V
    int n -> W
    java.lang.String submiturl -> X
    java.lang.String viewurl -> s
    java.lang.String pdaviewurl -> Y
    java.lang.String device -> Z
    java.lang.String devicename -> aa
    java.lang.String position -> t
    java.lang.String sendresult -> u
    android.content.BroadcastReceiver receiver -> v
    int sendcounter -> w
    int buffercounter -> x
    boolean usebuffer -> ab
    boolean usewake -> ac
    java.io.File fileName -> y
    android.os.PowerManager pm -> z
    android.os.PowerManager$WakeLock wakeLock -> A
    java.lang.String version -> B
    android.content.SharedPreferences settings -> C
    com.actionbarsherlock.app.ActionBar$Tab mainTab -> D
    com.actionbarsherlock.app.ActionBar$Tab devicesTab -> E
    com.actionbarsherlock.app.ActionBar$Tab channelsTab -> F
    com.actionbarsherlock.app.ActionBar$Tab simLinksTab -> G
    com.actionbarsherlock.app.ActionBar$Tab trackListTab -> H
    com.actionbarsherlock.app.ActionBar$Tab mesListTab -> I
    com.actionbarsherlock.app.ActionBar$Tab statTab -> J
    com.actionbarsherlock.app.ActionBar actionBar -> K
    java.util.HashMap backStacks -> ad
    android.content.ServiceConnection conn -> L
    boolean SavedInstanceState -> ae
    int[] $SWITCH_TABLE$com$OsMoDroid$GPSLocalServiceClient$TabType -> af
    void onBackPressed() -> onBackPressed
    void showFragment(java.util.Stack,android.support.v4.app.FragmentTransaction) -> a
    void addFragment(com.actionbarsherlock.app.SherlockFragment) -> a
    void onNewIntent(android.content.Intent) -> onNewIntent
    void openTabByIntent(android.content.Intent) -> a
    void addFragment(com.actionbarsherlock.app.SherlockFragment,java.util.Stack,android.support.v4.app.FragmentTransaction) -> a
    java.lang.String unescape(java.lang.String) -> a
    void onPause() -> onPause
    void onStop() -> onStop
    void onCreate(android.os.Bundle) -> onCreate
    void addTabs() -> h
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void auth() -> a
    boolean checkStarted() -> b
    void ReadPref() -> c
    void startlocalservice() -> d
    void bindService() -> i
    void stop(java.lang.Boolean) -> a
    void updateMainUI() -> e
    void onDestroy() -> onDestroy
    java.lang.String getPage(java.lang.String,boolean,java.lang.String) -> a
    java.lang.String inputStreamToString(java.io.InputStream) -> a
    java.lang.String getDeviceName() -> f
    java.lang.String capitalize(java.lang.String) -> b
    void requestHash() -> g
    void onResultsSucceeded(com.OsMoDroid.APIComResult) -> a
    boolean saveSharedPreferencesToFile(java.io.File) -> a
    boolean loadSharedPreferencesFromFile(java.io.File) -> b
    void onTabSelected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabSelected
    void onTabUnselected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabUnselected
    void onTabReselected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabReselected
    void access$0(com.OsMoDroid.GPSLocalServiceClient) -> a
    java.lang.String access$1(com.OsMoDroid.GPSLocalServiceClient) -> b
    int access$2(com.OsMoDroid.GPSLocalServiceClient) -> c
    java.lang.String access$3(com.OsMoDroid.GPSLocalServiceClient) -> d
    java.lang.String access$4(com.OsMoDroid.GPSLocalServiceClient) -> e
    void access$5(com.OsMoDroid.GPSLocalServiceClient) -> f
    void access$6(com.OsMoDroid.GPSLocalServiceClient,java.lang.String) -> a
    void access$7(com.OsMoDroid.GPSLocalServiceClient,int) -> a
    void access$8(com.OsMoDroid.GPSLocalServiceClient,java.lang.String) -> b
    void access$9(com.OsMoDroid.GPSLocalServiceClient,java.lang.String) -> c
    void access$10(com.OsMoDroid.GPSLocalServiceClient,java.lang.String) -> d
    void access$11(com.OsMoDroid.GPSLocalServiceClient,java.lang.String) -> e
    void access$12(com.OsMoDroid.GPSLocalServiceClient,java.lang.String) -> f
    java.lang.String access$13(com.OsMoDroid.GPSLocalServiceClient) -> g
    int[] $SWITCH_TABLE$com$OsMoDroid$GPSLocalServiceClient$TabType() -> j
com.OsMoDroid.GPSLocalServiceClient$1 -> com.OsMoDroid.GPSLocalServiceClient$1:
    com.OsMoDroid.GPSLocalServiceClient this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.OsMoDroid.GPSLocalServiceClient$2 -> com.OsMoDroid.GPSLocalServiceClient$2:
    com.OsMoDroid.GPSLocalServiceClient this$0 -> a
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
com.OsMoDroid.GPSLocalServiceClient$3 -> com.OsMoDroid.GPSLocalServiceClient$3:
    com.OsMoDroid.GPSLocalServiceClient this$0 -> a
    android.widget.EditText val$input -> b
    android.widget.EditText val$inputlogin -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.OsMoDroid.GPSLocalServiceClient$4 -> com.OsMoDroid.GPSLocalServiceClient$4:
    com.OsMoDroid.GPSLocalServiceClient this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.OsMoDroid.GPSLocalServiceClient$RequestAuthTask -> com.OsMoDroid.l:
    java.lang.String authtext -> d
    java.lang.String adevice -> a
    java.lang.Boolean Err -> e
    android.app.ProgressDialog dialog -> b
    com.OsMoDroid.GPSLocalServiceClient this$0 -> c
    void onPreExecute() -> onPreExecute
    java.lang.Void doInBackground$10299ca() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.OsMoDroid.GPSLocalServiceClient$RequestCommandTask -> com.OsMoDroid.m:
    java.lang.String Commandtext -> c
    java.lang.String adevice -> d
    java.lang.String akey -> e
    java.lang.String aviewurl -> f
    java.lang.String adevicename -> g
    android.app.ProgressDialog dialog -> a
    com.OsMoDroid.GPSLocalServiceClient this$0 -> b
    void onPreExecute() -> onPreExecute
    java.lang.String doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.OsMoDroid.GPSLocalServiceClient$TabType -> com.OsMoDroid.n:
    com.OsMoDroid.GPSLocalServiceClient$TabType MAIN -> a
    com.OsMoDroid.GPSLocalServiceClient$TabType DEVICES -> b
    com.OsMoDroid.GPSLocalServiceClient$TabType CHANNELS -> c
    com.OsMoDroid.GPSLocalServiceClient$TabType LINKS -> d
    com.OsMoDroid.GPSLocalServiceClient$TabType NOTIFS -> e
    com.OsMoDroid.GPSLocalServiceClient$TabType TRACKS -> f
    com.OsMoDroid.GPSLocalServiceClient$TabType STAT -> g
    com.OsMoDroid.GPSLocalServiceClient$TabType[] ENUM$VALUES -> h
    com.OsMoDroid.GPSLocalServiceClient$TabType[] values() -> values
    com.OsMoDroid.GPSLocalServiceClient$TabType valueOf(java.lang.String) -> valueOf
com.OsMoDroid.IM -> com.OsMoDroid.o:
    boolean running -> a
    boolean autoReconnect -> b
    java.lang.Integer timeout -> c
    java.lang.String mykey -> d
    java.lang.String lcursor -> e
    int pingTimeout -> f
    java.io.BufferedReader in -> u
    android.content.Context parent -> g
    java.util.ArrayList myLongPollChList -> h
    de.tavendo.autobahn.Wamp$ConnectionHandler c -> i
    de.tavendo.autobahn.WampOptions o -> j
    int mestype -> k
    com.OsMoDroid.LocalService localService -> l
    java.io.ObjectOutputStream output -> m
    java.text.SimpleDateFormat sdf1 -> v
    de.tavendo.autobahn.WampConnection mConnection -> w
    java.lang.String wsuri -> n
    boolean connOpened -> o
    android.content.BroadcastReceiver reconnectReceiver -> p
    android.content.BroadcastReceiver keepAliveReceiver -> q
    android.app.AlarmManager manager -> r
    android.app.PendingIntent reconnectPIntent -> s
    android.app.PendingIntent keepAlivePIntent -> t
    android.content.BroadcastReceiver bcr -> x
    void setkeepAliveAlarm() -> a
    void disablekeepAliveAlarm() -> b
    void setReconnectAlarm() -> c
    void addchannels(java.util.ArrayList) -> a
    void removechannels(java.util.ArrayList) -> b
    java.lang.String getMessageType(java.lang.String) -> a
    void addtoDeviceChat(java.lang.String) -> b
    void close() -> d
    void start() -> e
    void parseEx(java.lang.String,java.lang.String) -> a
    void stop() -> f
    void resubscribe() -> g
    de.tavendo.autobahn.WampConnection access$0(com.OsMoDroid.IM) -> a
com.OsMoDroid.IM$1 -> com.OsMoDroid.o$1:
    com.OsMoDroid.IM this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.OsMoDroid.IM$10 -> com.OsMoDroid.o$2:
    com.OsMoDroid.IM this$0 -> a
    void run() -> run
com.OsMoDroid.IM$11 -> com.OsMoDroid.o$3:
    com.OsMoDroid.IM this$0 -> a
    void run() -> run
com.OsMoDroid.IM$12 -> com.OsMoDroid.o$4:
    com.OsMoDroid.IM this$0 -> a
    void run() -> run
com.OsMoDroid.IM$13 -> com.OsMoDroid.o$5:
    com.OsMoDroid.IM this$0 -> a
    void run() -> run
com.OsMoDroid.IM$14 -> com.OsMoDroid.o$6:
    com.OsMoDroid.IM this$0 -> a
    void run() -> run
com.OsMoDroid.IM$15 -> com.OsMoDroid.o$7:
    com.OsMoDroid.IM this$0 -> a
    com.OsMoDroid.Channel val$channel -> b
    void run() -> run
com.OsMoDroid.IM$16 -> com.OsMoDroid.o$8:
    com.OsMoDroid.IM this$0 -> a
    void onEvent(java.lang.String,java.lang.Object) -> a
com.OsMoDroid.IM$2 -> com.OsMoDroid.o$9:
    com.OsMoDroid.IM this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.OsMoDroid.IM$3 -> com.OsMoDroid.o$10:
    com.OsMoDroid.IM this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.OsMoDroid.IM$4 -> com.OsMoDroid.o$11:
    com.OsMoDroid.IM this$0 -> a
    com.OsMoDroid.LocalService val$localService -> b
    void onOpen() -> a
    void onClose(int,java.lang.String) -> a
com.OsMoDroid.IM$5 -> com.OsMoDroid.o$12:
    com.OsMoDroid.IM this$0 -> a
    void run() -> run
com.OsMoDroid.IM$6 -> com.OsMoDroid.o$13:
    com.OsMoDroid.IM this$0 -> a
    java.util.ArrayList val$tempdeviceList -> b
    void run() -> run
com.OsMoDroid.IM$7 -> com.OsMoDroid.o$14:
    com.OsMoDroid.IM this$0 -> a
    void run() -> run
com.OsMoDroid.IM$8 -> com.OsMoDroid.o$15:
    com.OsMoDroid.IM this$0 -> a
    void run() -> run
com.OsMoDroid.IM$9 -> com.OsMoDroid.o$16:
    com.OsMoDroid.IM this$0 -> a
    void run() -> run
com.OsMoDroid.IRemoteOsMoDroidListener -> com.OsMoDroid.p:
    void channelUpdated() -> a
    void channelsListUpdated() -> b
    void routeTo(float,float) -> a
com.OsMoDroid.IRemoteOsMoDroidListener$Stub -> com.OsMoDroid.q:
    com.OsMoDroid.IRemoteOsMoDroidListener asInterface(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.OsMoDroid.IRemoteOsMoDroidListener$Stub$Proxy -> com.OsMoDroid.r:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    void channelUpdated() -> a
    void channelsListUpdated() -> b
    void routeTo(float,float) -> a
com.OsMoDroid.IRemoteOsMoDroidService -> com.OsMoDroid.s:
    void registerListener(com.OsMoDroid.IRemoteOsMoDroidListener) -> a
    void unregisterListener(com.OsMoDroid.IRemoteOsMoDroidListener) -> b
    void Deactivate() -> a
    void Activate() -> b
    boolean isActive() -> c
    int getNumberOfLayers() -> d
    int getLayerId(int) -> a
    java.lang.String getLayerName(int) -> b
    java.lang.String getLayerDescription(int) -> c
    int getNumberOfObjects(int) -> d
    int getObjectId(int,int) -> a
    float getObjectLat(int,int) -> b
    float getObjectLon(int,int) -> c
    java.lang.String getObjectSpeed(int,int) -> d
    java.lang.String getObjectName(int,int) -> e
    java.lang.String getObjectDescription(int,int) -> f
    java.lang.String getObjectColor(int,int) -> g
    int getNumberOfGpx(int) -> e
    java.lang.String getGpxFile(int,int) -> h
    int getGpxColor(int,int) -> i
    int getNumberOfPoints(int) -> f
    int getPointId(int,int) -> j
    float getPointLat(int,int) -> k
    float getPointLon(int,int) -> l
    java.lang.String getPointName(int,int) -> m
    java.lang.String getPointDescription(int,int) -> n
    java.lang.String getPointColor(int,int) -> o
    void refreshChannels() -> e
com.OsMoDroid.IRemoteOsMoDroidService$Stub -> com.OsMoDroid.t:
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.OsMoDroid.LocalService -> com.OsMoDroid.LocalService:
    boolean binded -> a
    android.hardware.SensorManager mSensorManager -> as
    android.hardware.Sensor mAccelerometer -> at
    double calibration -> b
    float currentAcceleration -> c
    java.lang.Boolean sessionstarted -> d
    java.lang.Boolean globalsend -> e
    java.lang.Boolean signalisationOn -> f
    int notifyid -> g
    int gpson -> h
    int gpsoff -> i
    int ineton -> j
    int inetoff -> k
    int sendpalyer -> l
    int startsound -> m
    int stopsound -> n
    int alarmsound -> o
    int signalonoff -> p
    android.media.SoundPool soundPool -> au
    com.OsMoDroid.netutil$MyAsyncTask starttask -> av
    android.content.Intent in -> aw
    boolean mayak -> q
    boolean glonas -> ax
    boolean playsound -> ay
    boolean sendsound -> az
    boolean vibrate -> aA
    boolean usecourse -> aB
    int vibratetime -> aC
    double brng -> aD
    double brng_gpx -> aE
    double prevbrng -> aF
    double prevbrng_gpx -> aG
    float speedbearing -> aH
    float bearing -> aI
    int speed -> aJ
    boolean beepedon -> aK
    boolean beepedoff -> aL
    boolean gpsbeepedon -> aM
    boolean gpsbeepedoff -> aN
    float maxspeed -> r
    float avgspeed -> s
    float currentspeed -> t
    long timeperiod -> u
    float workdistance -> v
    long workmilli -> aO
    boolean firstsend -> aP
    boolean sended -> aQ
    boolean gpx -> aR
    boolean live -> aS
    int hdop -> aT
    boolean fileheaderok -> aU
    java.io.File fileName -> aV
    int period -> aW
    int distance -> aX
    java.lang.String hash -> aY
    int n -> aZ
    java.lang.String position -> ba
    java.lang.String sendresult -> bb
    android.location.LocationManager myManager -> w
    android.location.Location prevlocation -> bc
    android.location.Location currentLocation -> x
    android.location.Location prevlocation_gpx -> bd
    android.location.Location prevlocation_spd -> be
    java.lang.String URLadr -> bf
    android.os.Vibrator vibrator -> bg
    android.os.PowerManager pm -> bh
    android.os.PowerManager$WakeLock wakeLock -> bi
    android.os.PowerManager$WakeLock LocwakeLock -> bj
    android.os.PowerManager$WakeLock SendwakeLock -> bk
    com.OsMoDroid.LocalService$SendCoor send -> bl
    int speedbearing_gpx -> bm
    int bearing_gpx -> bn
    long lastgpslocationtime -> bo
    int hdop_gpx -> bp
    int period_gpx -> bq
    int distance_gpx -> br
    int speed_gpx -> bs
    int sendcounter -> y
    int writecounter -> z
    int buffercounter -> bt
    android.content.BroadcastReceiver receiver -> A
    android.content.BroadcastReceiver checkreceiver -> B
    android.content.BroadcastReceiver onlinePauseforStartReciever -> C
    android.content.BroadcastReceiver batteryReciever -> D
    android.os.IBinder mBinder -> bu
    java.lang.String gpxbuffer -> bv
    java.lang.String satellite -> bw
    java.lang.String accuracy -> bx
    boolean usebuffer -> by
    boolean usewake -> bz
    android.app.NotificationManager mNotificationManager -> E
    java.lang.String lastsendforbuffer -> bA
    long lastgpsontime -> bB
    long lastgpsofftime -> bC
    long notifyperiod -> bD
    android.app.AlarmManager am -> bE
    java.lang.StringBuilder stringBuilder -> F
    android.app.PendingIntent pi -> G
    java.lang.Object[] mStartForegroundArgs -> bF
    java.lang.Object[] mStopForegroundArgs -> bG
    java.lang.String lastsay -> bH
    java.lang.Boolean state -> H
    int gpsperiod -> I
    int gpsdistance -> J
    long prevnetworklocationtime -> K
    java.lang.StringBuilder buffersb -> L
    java.lang.StringBuilder lastbuffersb -> M
    java.lang.StringBuilder sendedsb -> N
    int lcounter -> bI
    int scounter -> bJ
    java.text.DecimalFormat df6 -> bK
    java.text.DecimalFormat df1 -> O
    java.text.DecimalFormat df2 -> P
    java.text.DecimalFormat df0 -> Q
    java.text.SimpleDateFormat sdf1 -> bL
    java.text.SimpleDateFormat sdf2 -> bM
    java.text.SimpleDateFormat sdf3 -> bN
    java.text.DecimalFormatSymbols dot -> bO
    boolean firstgpsbeepedon -> R
    com.OsMoDroid.IM myIM -> S
    android.speech.tts.TextToSpeech tts -> T
    int _langTTSavailable -> bP
    java.net.Socket s -> U
    android.content.SharedPreferences settings -> V
    int batteryprocent -> W
    int plugged -> X
    int temperature -> Y
    int voltage -> Z
    java.util.List channelList -> aa
    java.util.List deviceList -> ab
    com.OsMoDroid.Channel currentChannel -> ac
    java.util.List currentchanneldeviceList -> ad
    java.util.ArrayList messagelist -> ae
    java.util.List chatmessagelist -> af
    com.OsMoDroid.Device currentDevice -> ag
    com.OsMoDroid.DeviceAdapter deviceAdapter -> ah
    com.OsMoDroid.ChannelsAdapter channelsAdapter -> ai
    com.OsMoDroid.ChannelsDevicesAdapter channelsDevicesAdapter -> aj
    android.widget.ArrayAdapter channelsmessagesAdapter -> ak
    com.OsMoDroid.DeviceChatAdapter chatmessagesAdapter -> al
    android.content.Context serContext -> am
    boolean uploadto -> an
    android.os.Handler alertHandler -> ao
    android.os.RemoteCallbackList remoteListenerCallBackList -> ap
    com.OsMoDroid.IRemoteOsMoDroidService$Stub rBinder -> bQ
    android.content.SharedPreferences$Editor editor -> aq
    java.lang.Float sensivity -> bR
    int alarmStreamId -> bS
    int count -> bT
    int countFix -> bU
    android.app.Notification notification -> bV
    android.app.PendingIntent osmodroidLaunchIntent -> bW
    java.lang.String strVersionName -> bX
    java.lang.String androidver -> bY
    java.io.ObjectInputStream input -> bZ
    boolean connect -> ar
    boolean onUnbind(android.content.Intent) -> onUnbind
    java.lang.String formatInterval(long) -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void informRemoteClientChannelUpdate() -> a
    void informRemoteClientChannelsListUpdate() -> b
    void informRemoteClientRouteTo(float,float) -> a
    void refresh() -> c
    void startcomand() -> d
    java.lang.String getversion() -> l
    void sendPosition() -> e
    void invokeMethod(java.lang.reflect.Method,java.lang.Object[]) -> a
    void onCreate() -> onCreate
    void Pong(android.content.Context) -> a
    void batteryinfo(android.content.Context) -> b
    java.lang.String capitalize(java.lang.String) -> a
    void systeminfo(android.content.Context) -> c
    void vibrate$1a54e731(long) -> b
    void satelliteinfo(android.content.Context) -> d
    void getpreferences(android.content.Context) -> e
    void wifion(android.content.Context) -> f
    void wifioff(android.content.Context) -> g
    void wifiinfo(android.content.Context) -> h
    void onDestroy() -> onDestroy
    void ReadPref() -> m
    void onStart(android.content.Intent,int) -> onStart
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void applyPreference() -> f
    void startServiceWork() -> g
    void manageGPSFixAlarm() -> n
    void ttsManage() -> o
    void requestLocationUpdates() -> h
    void openGPX() -> p
    void stopServiceWork(java.lang.Boolean) -> a
    void closeGPX() -> q
    void setstarted(boolean) -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    java.lang.String inputStreamToString(java.io.InputStream) -> a
    java.lang.String unescape(java.lang.String) -> b
    java.lang.String decodesendresult(java.lang.String) -> c
    void writegpx(android.location.Location) -> a
    void sendlocation(android.location.Location) -> b
    void onGpsStatusChanged(int) -> onGpsStatusChanged
    void onInit(int) -> onInit
    boolean isOnline() -> i
    void warnwronghash() -> r
    void notifywarnactivity(java.lang.String,boolean) -> a
    void connectChannels() -> s
    void disconnectChannels() -> t
    void onResultsSucceeded(com.OsMoDroid.APIComResult) -> a
    void deviceListFromJSONArray(org.json.JSONArray) -> a
    void channelListFromJSONArray(org.json.JSONArray) -> b
    void playAlarmOn(java.lang.Boolean) -> b
    void playAlarmOff(java.lang.Boolean) -> c
    void enableSignalisation(java.lang.Boolean) -> d
    void disableSignalisation(java.lang.Boolean) -> e
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void saveObject(java.lang.Object,java.lang.String) -> a
    java.lang.Object loadObject(java.lang.String,java.lang.Class) -> a
    void access$0(com.OsMoDroid.LocalService,java.lang.String) -> a
    void access$1(com.OsMoDroid.LocalService,boolean) -> a
    java.text.SimpleDateFormat access$2() -> j
    java.lang.String access$3(com.OsMoDroid.LocalService,java.lang.String) -> b
    boolean access$4(com.OsMoDroid.LocalService) -> a
    boolean access$5(com.OsMoDroid.LocalService) -> b
    android.media.SoundPool access$6() -> k
    java.lang.String access$7(com.OsMoDroid.LocalService) -> c
    android.app.Notification access$8(com.OsMoDroid.LocalService) -> d
    android.app.PendingIntent access$9(com.OsMoDroid.LocalService) -> e
    java.lang.String access$10(com.OsMoDroid.LocalService,java.lang.String,java.lang.String) -> a
    void access$11$32c62201(com.OsMoDroid.LocalService) -> f
    long access$12(com.OsMoDroid.LocalService) -> g
    long access$13(com.OsMoDroid.LocalService) -> h
    boolean access$14(com.OsMoDroid.LocalService) -> i
    boolean access$15(com.OsMoDroid.LocalService) -> j
    android.os.Vibrator access$16(com.OsMoDroid.LocalService) -> k
    int access$17(com.OsMoDroid.LocalService) -> l
    boolean access$18(com.OsMoDroid.LocalService) -> m
    void access$19(com.OsMoDroid.LocalService,boolean) -> b
    long access$20(com.OsMoDroid.LocalService) -> n
    boolean access$21(com.OsMoDroid.LocalService) -> o
    void access$22(com.OsMoDroid.LocalService,boolean) -> c
    void access$23(com.OsMoDroid.LocalService,long) -> a
    void access$24(com.OsMoDroid.LocalService,long) -> b
com.OsMoDroid.LocalService$1 -> com.OsMoDroid.LocalService$1:
    com.OsMoDroid.LocalService this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.OsMoDroid.LocalService$2 -> com.OsMoDroid.LocalService$2:
    com.OsMoDroid.LocalService this$0 -> a
    void Deactivate() -> a
    boolean isActive() -> c
    void Activate() -> b
    int getNumberOfLayers() -> d
    int getLayerId(int) -> a
    java.lang.String getLayerName(int) -> b
    java.lang.String getLayerDescription(int) -> c
    int getNumberOfObjects(int) -> d
    int getObjectId(int,int) -> a
    float getObjectLat(int,int) -> b
    float getObjectLon(int,int) -> c
    java.lang.String getObjectName(int,int) -> e
    java.lang.String getObjectDescription(int,int) -> f
    void registerListener(com.OsMoDroid.IRemoteOsMoDroidListener) -> a
    void unregisterListener(com.OsMoDroid.IRemoteOsMoDroidListener) -> b
    java.lang.String getObjectSpeed(int,int) -> d
    java.lang.String getObjectColor(int,int) -> g
    void refreshChannels() -> e
    int getNumberOfGpx(int) -> e
    java.lang.String getGpxFile(int,int) -> h
    int getGpxColor(int,int) -> i
    int getNumberOfPoints(int) -> f
    int getPointId(int,int) -> j
    float getPointLat(int,int) -> k
    float getPointLon(int,int) -> l
    java.lang.String getPointName(int,int) -> m
    java.lang.String getPointDescription(int,int) -> n
    java.lang.String getPointColor(int,int) -> o
    com.OsMoDroid.LocalService access$0(com.OsMoDroid.LocalService$2) -> a
com.OsMoDroid.LocalService$2$1 -> com.OsMoDroid.LocalService$2$1:
    com.OsMoDroid.LocalService$2 this$1 -> a
    void run() -> run
com.OsMoDroid.LocalService$2$2 -> com.OsMoDroid.LocalService$2$2:
    com.OsMoDroid.LocalService$2 this$1 -> a
    void run() -> run
com.OsMoDroid.LocalService$3 -> com.OsMoDroid.LocalService$3:
    com.OsMoDroid.LocalService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.OsMoDroid.LocalService$4 -> com.OsMoDroid.LocalService$4:
    com.OsMoDroid.LocalService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.OsMoDroid.LocalService$5 -> com.OsMoDroid.LocalService$5:
    com.OsMoDroid.LocalService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.OsMoDroid.LocalService$6 -> com.OsMoDroid.LocalService$6:
    com.OsMoDroid.LocalService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.OsMoDroid.LocalService$LocalBinder -> com.OsMoDroid.u:
    com.OsMoDroid.LocalService this$0 -> a
    com.OsMoDroid.LocalService getService() -> a
com.OsMoDroid.LocalService$SendCoor -> com.OsMoDroid.v:
    java.lang.String tmp -> b
    com.OsMoDroid.LocalService this$0 -> a
    java.lang.String doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.OsMoDroid.MainFragment -> com.OsMoDroid.MainFragment:
    android.content.BroadcastReceiver receiver -> a
    com.OsMoDroid.GPSLocalServiceClient globalActivity -> b
    void onDestroy() -> onDestroy
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onAttach(android.app.Activity) -> onAttach
    void onResultsSucceeded(com.OsMoDroid.APIComResult) -> a
    com.OsMoDroid.GPSLocalServiceClient access$0(com.OsMoDroid.MainFragment) -> a
    void access$1(com.OsMoDroid.MainFragment,android.view.View) -> a
com.OsMoDroid.MainFragment$1 -> com.OsMoDroid.MainFragment$1:
    com.OsMoDroid.MainFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.OsMoDroid.MainFragment$2 -> com.OsMoDroid.MainFragment$2:
    com.OsMoDroid.MainFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.OsMoDroid.MainFragment$3 -> com.OsMoDroid.MainFragment$3:
    com.OsMoDroid.MainFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.OsMoDroid.MainFragment$4 -> com.OsMoDroid.MainFragment$4:
    com.OsMoDroid.MainFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.OsMoDroid.MainFragment$5 -> com.OsMoDroid.MainFragment$5:
    com.OsMoDroid.MainFragment this$0 -> a
    android.widget.ToggleButton val$alarmToggle -> b
    void onClick(android.view.View) -> onClick
com.OsMoDroid.MainFragment$6 -> com.OsMoDroid.MainFragment$6:
    com.OsMoDroid.MainFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.OsMoDroid.MainFragment$7 -> com.OsMoDroid.MainFragment$7:
    java.lang.Boolean stopsession -> a
    com.OsMoDroid.MainFragment this$0 -> b
    android.view.View val$view -> c
    void onClick(android.view.View) -> onClick
    com.OsMoDroid.MainFragment access$0(com.OsMoDroid.MainFragment$7) -> a
com.OsMoDroid.MainFragment$7$1 -> com.OsMoDroid.MainFragment$7$1:
    com.OsMoDroid.MainFragment$7 this$1 -> a
    android.view.View val$view -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.OsMoDroid.MainFragment$7$1$1 -> com.OsMoDroid.MainFragment$7$1$1:
    com.OsMoDroid.MainFragment$7$1 this$2 -> a
    android.view.View val$view -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.OsMoDroid.MainFragment$7$1$2 -> com.OsMoDroid.MainFragment$7$1$2:
    com.OsMoDroid.MainFragment$7$1 this$2 -> a
    android.view.View val$view -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.OsMoDroid.MainFragment$7$2 -> com.OsMoDroid.MainFragment$7$2:
    com.OsMoDroid.MainFragment$7 this$1 -> a
    android.view.View val$view -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.OsMoDroid.MainFragment$7$2$1 -> com.OsMoDroid.MainFragment$7$2$1:
    com.OsMoDroid.MainFragment$7$2 this$2 -> a
    android.view.View val$view -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.OsMoDroid.MainFragment$7$2$2 -> com.OsMoDroid.MainFragment$7$2$2:
    com.OsMoDroid.MainFragment$7$2 this$2 -> a
    android.view.View val$view -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.OsMoDroid.MainFragment$7$3 -> com.OsMoDroid.MainFragment$7$3:
    com.OsMoDroid.MainFragment$7 this$1 -> a
    android.view.View val$view -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.OsMoDroid.MainFragment$7$4 -> com.OsMoDroid.MainFragment$7$4:
    com.OsMoDroid.MainFragment$7 this$1 -> a
    android.view.View val$view -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.OsMoDroid.MainFragment$8 -> com.OsMoDroid.MainFragment$8:
    com.OsMoDroid.MainFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.OsMoDroid.MainFragment$9 -> com.OsMoDroid.MainFragment$9:
    com.OsMoDroid.MainFragment this$0 -> a
    android.view.View val$view -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    com.OsMoDroid.MainFragment access$0(com.OsMoDroid.MainFragment$9) -> a
com.OsMoDroid.MainFragment$9$1 -> com.OsMoDroid.MainFragment$9$1:
    com.OsMoDroid.MainFragment$9 this$1 -> a
    android.widget.ToggleButton val$globalsendToggle -> b
    android.content.Intent val$intent -> c
    void onClick(android.view.View) -> onClick
com.OsMoDroid.MainFragment$9$2 -> com.OsMoDroid.MainFragment$9$2:
    com.OsMoDroid.MainFragment$9 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.OsMoDroid.MyMessage -> com.OsMoDroid.w:
    int u -> a
    java.lang.String from -> b
    java.lang.String from_app -> c
    java.lang.String for_user -> d
    java.lang.String for_app -> e
    java.lang.String trig -> f
    java.lang.String trig_app -> g
    java.lang.String text -> h
    java.lang.String time -> i
    java.lang.String readed -> j
    java.lang.String from_name -> k
    java.lang.String from_addr -> l
    java.lang.String to -> m
    int compareTo(java.lang.Object) -> compareTo
com.OsMoDroid.NotifFragment -> com.OsMoDroid.NotifFragment:
    android.widget.ArrayAdapter adapter -> b
    java.util.ArrayList list -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onAttach(android.app.Activity) -> onAttach
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.OsMoDroid.OsMoDroid -> com.OsMoDroid.OsMoDroid:
    java.lang.String FILENAME -> a
    boolean mesactivityVisible -> b
    boolean gpslocalserviceclientVisible -> c
    int notifyid -> g
    int uploadnotifyid -> d
    android.content.SharedPreferences settings -> e
    android.content.Context context -> f
    int notifyidApp() -> a
    void onCreate() -> onCreate
    int uploadnotifyid() -> b
com.OsMoDroid.PrefActivity -> com.OsMoDroid.PrefActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
com.OsMoDroid.ResultsListener -> com.OsMoDroid.x:
    void onResultsSucceeded(com.OsMoDroid.APIComResult) -> a
com.OsMoDroid.SerializableHolder -> com.OsMoDroid.y:
    java.io.Serializable content -> a
    java.io.Serializable get() -> a
com.OsMoDroid.SimLinksFragment -> com.OsMoDroid.SimLinksFragment:
    com.OsMoDroid.GPSLocalServiceClient globalActivity -> c
    android.widget.ArrayAdapter adapter -> d
    java.util.ArrayList list -> a
    java.util.ArrayList listids -> b
    java.text.SimpleDateFormat sdf1 -> e
    void reflinks() -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onAttach(android.app.Activity) -> onAttach
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void onResultsSucceeded(com.OsMoDroid.APIComResult) -> a
com.OsMoDroid.SimLinksFragment$1 -> com.OsMoDroid.SimLinksFragment$1:
    com.OsMoDroid.SimLinksFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.OsMoDroid.StatFragment -> com.OsMoDroid.StatFragment:
    com.OsMoDroid.GPSLocalServiceClient globalActivity -> a
    android.content.BroadcastReceiver receiver -> b
    void onDestroy() -> onDestroy
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.OsMoDroid.StatFragment$1 -> com.OsMoDroid.StatFragment$1:
    com.OsMoDroid.StatFragment this$0 -> a
    android.view.View val$view -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.OsMoDroid.TracFileListFragment -> com.OsMoDroid.TracFileListFragment:
    com.OsMoDroid.TrackFileAdapter trackFileAdapter -> c
    java.util.ArrayList trackFileList -> d
    java.io.File path -> e
    int count -> a
    int progress -> b
    android.app.ProgressDialog progressDialog -> f
    com.OsMoDroid.TracFileListFragment$ReadTrackList readTask -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void getFileList() -> a
    void onResultsSucceeded(com.OsMoDroid.APIComResult) -> a
    android.app.ProgressDialog access$0(com.OsMoDroid.TracFileListFragment) -> a
    java.util.ArrayList access$1(com.OsMoDroid.TracFileListFragment) -> b
    com.OsMoDroid.TrackFileAdapter access$2(com.OsMoDroid.TracFileListFragment) -> c
    void access$3(com.OsMoDroid.TracFileListFragment,java.io.File) -> a
    java.io.File access$4(com.OsMoDroid.TracFileListFragment) -> d
com.OsMoDroid.TracFileListFragment$1 -> com.OsMoDroid.TracFileListFragment$1:
    com.OsMoDroid.TracFileListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.OsMoDroid.TracFileListFragment$ReadTrackList -> com.OsMoDroid.z:
    java.util.ArrayList tempTrackFileList -> b
    com.OsMoDroid.TracFileListFragment this$0 -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.OsMoDroid.TracFileListFragment$ReadTrackList$1 -> com.OsMoDroid.z$1:
    com.OsMoDroid.TracFileListFragment$ReadTrackList this$1 -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.OsMoDroid.TrackFile -> com.OsMoDroid.aa:
    java.text.SimpleDateFormat sdf1 -> d
    java.lang.String fileName -> a
    java.lang.String fileDate -> b
    java.lang.String fileSize -> c
    int compareTo(java.lang.Object) -> compareTo
com.OsMoDroid.TrackFileAdapter -> com.OsMoDroid.ab:
    android.widget.TextView fileName -> a
    android.widget.TextView fileDate -> b
    android.widget.TextView fileSize -> c
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.OsMoDroid.WarnActivity -> com.OsMoDroid.WarnActivity:
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
com.OsMoDroid.WarnActivity$1 -> com.OsMoDroid.WarnActivity$1:
    com.OsMoDroid.WarnActivity this$0 -> a
    android.content.SharedPreferences val$settings -> b
    void onClick(android.view.View) -> onClick
com.OsMoDroid.WarnActivity$2 -> com.OsMoDroid.WarnActivity$2:
    com.OsMoDroid.WarnActivity this$0 -> a
    android.content.SharedPreferences val$settings -> b
    void onClick(android.view.View) -> onClick
com.OsMoDroid.aboutActivity -> com.OsMoDroid.aboutActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
com.OsMoDroid.netutil -> com.OsMoDroid.ac:
    void newapicommand(com.OsMoDroid.ResultsListener,java.lang.String) -> a
    java.lang.String inputStreamToFile(java.io.InputStream,java.io.File) -> a
    void newapicommand(com.OsMoDroid.ResultsListener,android.content.Context,java.lang.String,java.lang.String) -> a
    void newapicommand(com.OsMoDroid.ResultsListener,java.lang.String,java.lang.String) -> a
    void newapicommand(com.OsMoDroid.ResultsListener,android.content.Context,java.lang.String) -> a
    void newapicommand(com.OsMoDroid.ResultsListener,java.lang.String,java.io.File,android.support.v4.app.NotificationCompat$Builder,int) -> a
    java.lang.String inputStreamToString(java.io.InputStream) -> a
com.OsMoDroid.netutil$MyAsyncTask -> com.OsMoDroid.ad:
    android.content.Context mContext -> e
    com.OsMoDroid.ResultsListener listener -> a
    java.net.HttpURLConnection con -> b
    java.io.InputStream in -> c
    android.app.ProgressDialog dialog -> d
    void onPreExecute() -> onPreExecute
    void Close() -> a
    java.lang.String getPage(java.lang.String,java.lang.String,java.io.File,android.support.v4.app.NotificationCompat$Builder,int,com.OsMoDroid.ColoredGPX) -> a
    com.OsMoDroid.APIComResult doInBackground(com.OsMoDroid.APIcomParams[]) -> a
    void onCancelled() -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.actionbarsherlock.ActionBarSherlock -> com.actionbarsherlock.ActionBarSherlock:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    java.lang.Class[] CONSTRUCTOR_ARGS -> CONSTRUCTOR_ARGS
    java.util.HashMap IMPLEMENTATIONS -> IMPLEMENTATIONS
    int FLAG_DELEGATE -> FLAG_DELEGATE
    android.app.Activity mActivity -> mActivity
    boolean mIsDelegate -> mIsDelegate
    com.actionbarsherlock.view.MenuInflater mMenuInflater -> mMenuInflater
    void registerImplementation(java.lang.Class) -> registerImplementation
    boolean unregisterImplementation(java.lang.Class) -> unregisterImplementation
    com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity) -> wrap
    com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int) -> wrap
    com.actionbarsherlock.app.ActionBar getActionBar() -> getActionBar
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchPostResume() -> dispatchPostResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchInvalidateOptionsMenu() -> dispatchInvalidateOptionsMenu
    boolean dispatchOpenOptionsMenu() -> dispatchOpenOptionsMenu
    boolean dispatchCloseOptionsMenu() -> dispatchCloseOptionsMenu
    void dispatchPostCreate(android.os.Bundle) -> dispatchPostCreate
    void dispatchTitleChanged(java.lang.CharSequence,int) -> dispatchTitleChanged
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchMenuOpened(int,android.view.Menu) -> dispatchMenuOpened
    void dispatchPanelClosed(int,android.view.Menu) -> dispatchPanelClosed
    void dispatchDestroy() -> dispatchDestroy
    void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    boolean callbackCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> callbackCreateOptionsMenu
    boolean callbackPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> callbackPrepareOptionsMenu
    boolean callbackOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> callbackOptionsItemSelected
    boolean hasFeature(int) -> hasFeature
    boolean requestFeature(int) -> requestFeature
    void setUiOptions(int) -> setUiOptions
    void setUiOptions(int,int) -> setUiOptions
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setProgressBarVisibility(boolean) -> setProgressBarVisibility
    void setProgressBarIndeterminateVisibility(boolean) -> setProgressBarIndeterminateVisibility
    void setProgressBarIndeterminate(boolean) -> setProgressBarIndeterminate
    void setProgress(int) -> setProgress
    void setSecondaryProgress(int) -> setSecondaryProgress
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    android.content.Context getThemedContext() -> getThemedContext
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void ensureActionBar() -> ensureActionBar
com.actionbarsherlock.ActionBarSherlock$Implementation -> com.actionbarsherlock.ActionBarSherlock$Implementation:
    int DEFAULT_API -> DEFAULT_API
    int DEFAULT_DPI -> DEFAULT_DPI
    int api() -> api
    int dpi() -> dpi
com.actionbarsherlock.ActionBarSherlock$OnActionModeFinishedListener -> com.actionbarsherlock.ActionBarSherlock$OnActionModeFinishedListener:
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
com.actionbarsherlock.ActionBarSherlock$OnActionModeStartedListener -> com.actionbarsherlock.ActionBarSherlock$OnActionModeStartedListener:
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
com.actionbarsherlock.ActionBarSherlock$OnCreateOptionsMenuListener -> com.actionbarsherlock.ActionBarSherlock$OnCreateOptionsMenuListener:
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
com.actionbarsherlock.ActionBarSherlock$OnCreatePanelMenuListener -> com.actionbarsherlock.ActionBarSherlock$OnCreatePanelMenuListener:
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
com.actionbarsherlock.ActionBarSherlock$OnMenuItemSelectedListener -> com.actionbarsherlock.ActionBarSherlock$OnMenuItemSelectedListener:
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
com.actionbarsherlock.ActionBarSherlock$OnOptionsItemSelectedListener -> com.actionbarsherlock.ActionBarSherlock$OnOptionsItemSelectedListener:
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
com.actionbarsherlock.ActionBarSherlock$OnPrepareOptionsMenuListener -> com.actionbarsherlock.ActionBarSherlock$OnPrepareOptionsMenuListener:
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
com.actionbarsherlock.ActionBarSherlock$OnPreparePanelListener -> com.actionbarsherlock.ActionBarSherlock$OnPreparePanelListener:
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
com.actionbarsherlock.R -> com.actionbarsherlock.R:
com.actionbarsherlock.R$attr -> com.actionbarsherlock.R$attr:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionSpinnerItemStyle -> actionSpinnerItemStyle
    int activatedBackgroundIndicator -> activatedBackgroundIndicator
    int activityChooserViewStyle -> activityChooserViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int buttonStyleSmall -> buttonStyleSmall
    int customNavigationLayout -> customNavigationLayout
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerVertical -> dividerVertical
    int dropDownHintAppearance -> dropDownHintAppearance
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int headerBackground -> headerBackground
    int height -> height
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int horizontalDivider -> horizontalDivider
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int itemBackground -> itemBackground
    int itemIconDisabledAlpha -> itemIconDisabledAlpha
    int itemPadding -> itemPadding
    int itemTextAppearance -> itemTextAppearance
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int navigationMode -> navigationMode
    int popupMenuStyle -> popupMenuStyle
    int preserveIconSpacing -> preserveIconSpacing
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int queryHint -> queryHint
    int searchAutoCompleteTextView -> searchAutoCompleteTextView
    int searchDropdownBackground -> searchDropdownBackground
    int searchResultListItemHeight -> searchResultListItemHeight
    int searchViewCloseIcon -> searchViewCloseIcon
    int searchViewEditQuery -> searchViewEditQuery
    int searchViewEditQueryBackground -> searchViewEditQueryBackground
    int searchViewGoIcon -> searchViewGoIcon
    int searchViewSearchIcon -> searchViewSearchIcon
    int searchViewTextField -> searchViewTextField
    int searchViewTextFieldRight -> searchViewTextFieldRight
    int searchViewVoiceIcon -> searchViewVoiceIcon
    int selectableItemBackground -> selectableItemBackground
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerItemStyle -> spinnerItemStyle
    int subtitle -> subtitle
    int subtitleTextStyle -> subtitleTextStyle
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmall -> textAppearanceSmall
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorPrimary -> textColorPrimary
    int textColorPrimaryDisableOnly -> textColorPrimaryDisableOnly
    int textColorPrimaryInverse -> textColorPrimaryInverse
    int textColorSearchUrl -> textColorSearchUrl
    int title -> title
    int titleTextStyle -> titleTextStyle
    int verticalDivider -> verticalDivider
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowAnimationStyle -> windowAnimationStyle
    int windowContentOverlay -> windowContentOverlay
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
    int windowSplitActionBar -> windowSplitActionBar
com.actionbarsherlock.R$bool -> com.actionbarsherlock.R$bool:
    int abs__action_bar_embed_tabs -> abs__action_bar_embed_tabs
    int abs__action_bar_expanded_action_views_exclusive -> abs__action_bar_expanded_action_views_exclusive
    int abs__config_actionMenuItemAllCaps -> abs__config_actionMenuItemAllCaps
    int abs__config_allowActionMenuItemTextWithIcon -> abs__config_allowActionMenuItemTextWithIcon
    int abs__config_showMenuShortcutsWhenKeyboardPresent -> abs__config_showMenuShortcutsWhenKeyboardPresent
    int abs__split_action_bar_is_narrow -> abs__split_action_bar_is_narrow
com.actionbarsherlock.R$color -> com.actionbarsherlock.R$color:
    int abs__background_holo_dark -> abs__background_holo_dark
    int abs__background_holo_light -> abs__background_holo_light
    int abs__bright_foreground_disabled_holo_dark -> abs__bright_foreground_disabled_holo_dark
    int abs__bright_foreground_disabled_holo_light -> abs__bright_foreground_disabled_holo_light
    int abs__bright_foreground_holo_dark -> abs__bright_foreground_holo_dark
    int abs__bright_foreground_holo_light -> abs__bright_foreground_holo_light
    int abs__primary_text_disable_only_holo_dark -> abs__primary_text_disable_only_holo_dark
    int abs__primary_text_disable_only_holo_light -> abs__primary_text_disable_only_holo_light
    int abs__primary_text_holo_dark -> abs__primary_text_holo_dark
    int abs__primary_text_holo_light -> abs__primary_text_holo_light
com.actionbarsherlock.R$dimen -> com.actionbarsherlock.R$dimen:
    int abs__action_bar_default_height -> abs__action_bar_default_height
    int abs__action_bar_icon_vertical_padding -> abs__action_bar_icon_vertical_padding
    int abs__action_bar_subtitle_bottom_margin -> abs__action_bar_subtitle_bottom_margin
    int abs__action_bar_subtitle_text_size -> abs__action_bar_subtitle_text_size
    int abs__action_bar_subtitle_top_margin -> abs__action_bar_subtitle_top_margin
    int abs__action_bar_title_text_size -> abs__action_bar_title_text_size
    int abs__action_button_min_width -> abs__action_button_min_width
    int abs__config_prefDialogWidth -> abs__config_prefDialogWidth
    int abs__dialog_min_width_major -> abs__dialog_min_width_major
    int abs__dialog_min_width_minor -> abs__dialog_min_width_minor
    int abs__dropdownitem_icon_width -> abs__dropdownitem_icon_width
    int abs__dropdownitem_text_padding_left -> abs__dropdownitem_text_padding_left
    int abs__dropdownitem_text_padding_right -> abs__dropdownitem_text_padding_right
    int abs__search_view_preferred_width -> abs__search_view_preferred_width
    int abs__search_view_text_min_width -> abs__search_view_text_min_width
com.actionbarsherlock.R$drawable -> com.actionbarsherlock.R$drawable:
    int abs__ab_bottom_solid_dark_holo -> abs__ab_bottom_solid_dark_holo
    int abs__ab_bottom_solid_inverse_holo -> abs__ab_bottom_solid_inverse_holo
    int abs__ab_bottom_solid_light_holo -> abs__ab_bottom_solid_light_holo
    int abs__ab_bottom_transparent_dark_holo -> abs__ab_bottom_transparent_dark_holo
    int abs__ab_bottom_transparent_light_holo -> abs__ab_bottom_transparent_light_holo
    int abs__ab_share_pack_holo_dark -> abs__ab_share_pack_holo_dark
    int abs__ab_share_pack_holo_light -> abs__ab_share_pack_holo_light
    int abs__ab_solid_dark_holo -> abs__ab_solid_dark_holo
    int abs__ab_solid_light_holo -> abs__ab_solid_light_holo
    int abs__ab_solid_shadow_holo -> abs__ab_solid_shadow_holo
    int abs__ab_stacked_solid_dark_holo -> abs__ab_stacked_solid_dark_holo
    int abs__ab_stacked_solid_light_holo -> abs__ab_stacked_solid_light_holo
    int abs__ab_stacked_transparent_dark_holo -> abs__ab_stacked_transparent_dark_holo
    int abs__ab_stacked_transparent_light_holo -> abs__ab_stacked_transparent_light_holo
    int abs__ab_transparent_dark_holo -> abs__ab_transparent_dark_holo
    int abs__ab_transparent_light_holo -> abs__ab_transparent_light_holo
    int abs__activated_background_holo_dark -> abs__activated_background_holo_dark
    int abs__activated_background_holo_light -> abs__activated_background_holo_light
    int abs__btn_cab_done_default_holo_dark -> abs__btn_cab_done_default_holo_dark
    int abs__btn_cab_done_default_holo_light -> abs__btn_cab_done_default_holo_light
    int abs__btn_cab_done_focused_holo_dark -> abs__btn_cab_done_focused_holo_dark
    int abs__btn_cab_done_focused_holo_light -> abs__btn_cab_done_focused_holo_light
    int abs__btn_cab_done_holo_dark -> abs__btn_cab_done_holo_dark
    int abs__btn_cab_done_holo_light -> abs__btn_cab_done_holo_light
    int abs__btn_cab_done_pressed_holo_dark -> abs__btn_cab_done_pressed_holo_dark
    int abs__btn_cab_done_pressed_holo_light -> abs__btn_cab_done_pressed_holo_light
    int abs__cab_background_bottom_holo_dark -> abs__cab_background_bottom_holo_dark
    int abs__cab_background_bottom_holo_light -> abs__cab_background_bottom_holo_light
    int abs__cab_background_top_holo_dark -> abs__cab_background_top_holo_dark
    int abs__cab_background_top_holo_light -> abs__cab_background_top_holo_light
    int abs__ic_ab_back_holo_dark -> abs__ic_ab_back_holo_dark
    int abs__ic_ab_back_holo_light -> abs__ic_ab_back_holo_light
    int abs__ic_cab_done_holo_dark -> abs__ic_cab_done_holo_dark
    int abs__ic_cab_done_holo_light -> abs__ic_cab_done_holo_light
    int abs__ic_clear -> abs__ic_clear
    int abs__ic_clear_disabled -> abs__ic_clear_disabled
    int abs__ic_clear_holo_light -> abs__ic_clear_holo_light
    int abs__ic_clear_normal -> abs__ic_clear_normal
    int abs__ic_clear_search_api_disabled_holo_light -> abs__ic_clear_search_api_disabled_holo_light
    int abs__ic_clear_search_api_holo_light -> abs__ic_clear_search_api_holo_light
    int abs__ic_commit_search_api_holo_dark -> abs__ic_commit_search_api_holo_dark
    int abs__ic_commit_search_api_holo_light -> abs__ic_commit_search_api_holo_light
    int abs__ic_go -> abs__ic_go
    int abs__ic_go_search_api_holo_light -> abs__ic_go_search_api_holo_light
    int abs__ic_menu_moreoverflow_holo_dark -> abs__ic_menu_moreoverflow_holo_dark
    int abs__ic_menu_moreoverflow_holo_light -> abs__ic_menu_moreoverflow_holo_light
    int abs__ic_menu_moreoverflow_normal_holo_dark -> abs__ic_menu_moreoverflow_normal_holo_dark
    int abs__ic_menu_moreoverflow_normal_holo_light -> abs__ic_menu_moreoverflow_normal_holo_light
    int abs__ic_menu_share_holo_dark -> abs__ic_menu_share_holo_dark
    int abs__ic_menu_share_holo_light -> abs__ic_menu_share_holo_light
    int abs__ic_search -> abs__ic_search
    int abs__ic_search_api_holo_light -> abs__ic_search_api_holo_light
    int abs__ic_voice_search -> abs__ic_voice_search
    int abs__ic_voice_search_api_holo_light -> abs__ic_voice_search_api_holo_light
    int abs__item_background_holo_dark -> abs__item_background_holo_dark
    int abs__item_background_holo_light -> abs__item_background_holo_light
    int abs__list_activated_holo -> abs__list_activated_holo
    int abs__list_divider_holo_dark -> abs__list_divider_holo_dark
    int abs__list_divider_holo_light -> abs__list_divider_holo_light
    int abs__list_focused_holo -> abs__list_focused_holo
    int abs__list_longpressed_holo -> abs__list_longpressed_holo
    int abs__list_pressed_holo_dark -> abs__list_pressed_holo_dark
    int abs__list_pressed_holo_light -> abs__list_pressed_holo_light
    int abs__list_selector_background_transition_holo_dark -> abs__list_selector_background_transition_holo_dark
    int abs__list_selector_background_transition_holo_light -> abs__list_selector_background_transition_holo_light
    int abs__list_selector_disabled_holo_dark -> abs__list_selector_disabled_holo_dark
    int abs__list_selector_disabled_holo_light -> abs__list_selector_disabled_holo_light
    int abs__list_selector_holo_dark -> abs__list_selector_holo_dark
    int abs__list_selector_holo_light -> abs__list_selector_holo_light
    int abs__menu_dropdown_panel_holo_dark -> abs__menu_dropdown_panel_holo_dark
    int abs__menu_dropdown_panel_holo_light -> abs__menu_dropdown_panel_holo_light
    int abs__progress_bg_holo_dark -> abs__progress_bg_holo_dark
    int abs__progress_bg_holo_light -> abs__progress_bg_holo_light
    int abs__progress_horizontal_holo_dark -> abs__progress_horizontal_holo_dark
    int abs__progress_horizontal_holo_light -> abs__progress_horizontal_holo_light
    int abs__progress_medium_holo -> abs__progress_medium_holo
    int abs__progress_primary_holo_dark -> abs__progress_primary_holo_dark
    int abs__progress_primary_holo_light -> abs__progress_primary_holo_light
    int abs__progress_secondary_holo_dark -> abs__progress_secondary_holo_dark
    int abs__progress_secondary_holo_light -> abs__progress_secondary_holo_light
    int abs__search_dropdown_dark -> abs__search_dropdown_dark
    int abs__search_dropdown_light -> abs__search_dropdown_light
    int abs__spinner_48_inner_holo -> abs__spinner_48_inner_holo
    int abs__spinner_48_outer_holo -> abs__spinner_48_outer_holo
    int abs__spinner_ab_default_holo_dark -> abs__spinner_ab_default_holo_dark
    int abs__spinner_ab_default_holo_light -> abs__spinner_ab_default_holo_light
    int abs__spinner_ab_disabled_holo_dark -> abs__spinner_ab_disabled_holo_dark
    int abs__spinner_ab_disabled_holo_light -> abs__spinner_ab_disabled_holo_light
    int abs__spinner_ab_focused_holo_dark -> abs__spinner_ab_focused_holo_dark
    int abs__spinner_ab_focused_holo_light -> abs__spinner_ab_focused_holo_light
    int abs__spinner_ab_holo_dark -> abs__spinner_ab_holo_dark
    int abs__spinner_ab_holo_light -> abs__spinner_ab_holo_light
    int abs__spinner_ab_pressed_holo_dark -> abs__spinner_ab_pressed_holo_dark
    int abs__spinner_ab_pressed_holo_light -> abs__spinner_ab_pressed_holo_light
    int abs__tab_indicator_ab_holo -> abs__tab_indicator_ab_holo
    int abs__tab_selected_focused_holo -> abs__tab_selected_focused_holo
    int abs__tab_selected_holo -> abs__tab_selected_holo
    int abs__tab_selected_pressed_holo -> abs__tab_selected_pressed_holo
    int abs__tab_unselected_pressed_holo -> abs__tab_unselected_pressed_holo
    int abs__textfield_search_default_holo_dark -> abs__textfield_search_default_holo_dark
    int abs__textfield_search_default_holo_light -> abs__textfield_search_default_holo_light
    int abs__textfield_search_right_default_holo_dark -> abs__textfield_search_right_default_holo_dark
    int abs__textfield_search_right_default_holo_light -> abs__textfield_search_right_default_holo_light
    int abs__textfield_search_right_selected_holo_dark -> abs__textfield_search_right_selected_holo_dark
    int abs__textfield_search_right_selected_holo_light -> abs__textfield_search_right_selected_holo_light
    int abs__textfield_search_selected_holo_dark -> abs__textfield_search_selected_holo_dark
    int abs__textfield_search_selected_holo_light -> abs__textfield_search_selected_holo_light
    int abs__textfield_searchview_holo_dark -> abs__textfield_searchview_holo_dark
    int abs__textfield_searchview_holo_light -> abs__textfield_searchview_holo_light
    int abs__textfield_searchview_right_holo_dark -> abs__textfield_searchview_right_holo_dark
    int abs__textfield_searchview_right_holo_light -> abs__textfield_searchview_right_holo_light
    int abs__toast_frame -> abs__toast_frame
com.actionbarsherlock.R$id -> com.actionbarsherlock.R$id:
    int abs__action_bar -> abs__action_bar
    int abs__action_bar_container -> abs__action_bar_container
    int abs__action_bar_subtitle -> abs__action_bar_subtitle
    int abs__action_bar_title -> abs__action_bar_title
    int abs__action_context_bar -> abs__action_context_bar
    int abs__action_menu_divider -> abs__action_menu_divider
    int abs__action_menu_presenter -> abs__action_menu_presenter
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_bar_stub -> abs__action_mode_bar_stub
    int abs__action_mode_close_button -> abs__action_mode_close_button
    int abs__activity_chooser_view_content -> abs__activity_chooser_view_content
    int abs__checkbox -> abs__checkbox
    int abs__content -> abs__content
    int abs__default_activity_button -> abs__default_activity_button
    int abs__expand_activities_button -> abs__expand_activities_button
    int abs__home -> abs__home
    int abs__icon -> abs__icon
    int abs__image -> abs__image
    int abs__imageButton -> abs__imageButton
    int abs__list_item -> abs__list_item
    int abs__progress_circular -> abs__progress_circular
    int abs__progress_horizontal -> abs__progress_horizontal
    int abs__radio -> abs__radio
    int abs__search_badge -> abs__search_badge
    int abs__search_bar -> abs__search_bar
    int abs__search_button -> abs__search_button
    int abs__search_close_btn -> abs__search_close_btn
    int abs__search_edit_frame -> abs__search_edit_frame
    int abs__search_go_btn -> abs__search_go_btn
    int abs__search_mag_icon -> abs__search_mag_icon
    int abs__search_plate -> abs__search_plate
    int abs__search_src_text -> abs__search_src_text
    int abs__search_voice_btn -> abs__search_voice_btn
    int abs__shortcut -> abs__shortcut
    int abs__split_action_bar -> abs__split_action_bar
    int abs__submit_area -> abs__submit_area
    int abs__textButton -> abs__textButton
    int abs__title -> abs__title
    int abs__up -> abs__up
    int disableHome -> disableHome
    int edit_query -> edit_query
    int homeAsUp -> homeAsUp
    int listMode -> listMode
    int normal -> normal
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int tabMode -> tabMode
    int useLogo -> useLogo
    int wrap_content -> wrap_content
com.actionbarsherlock.R$integer -> com.actionbarsherlock.R$integer:
    int abs__max_action_buttons -> abs__max_action_buttons
com.actionbarsherlock.R$layout -> com.actionbarsherlock.R$layout:
    int abs__action_bar_home -> abs__action_bar_home
    int abs__action_bar_tab -> abs__action_bar_tab
    int abs__action_bar_tab_bar_view -> abs__action_bar_tab_bar_view
    int abs__action_bar_title_item -> abs__action_bar_title_item
    int abs__action_menu_item_layout -> abs__action_menu_item_layout
    int abs__action_menu_layout -> abs__action_menu_layout
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_close_item -> abs__action_mode_close_item
    int abs__activity_chooser_view -> abs__activity_chooser_view
    int abs__activity_chooser_view_list_item -> abs__activity_chooser_view_list_item
    int abs__list_menu_item_checkbox -> abs__list_menu_item_checkbox
    int abs__list_menu_item_icon -> abs__list_menu_item_icon
    int abs__list_menu_item_radio -> abs__list_menu_item_radio
    int abs__popup_menu_item_layout -> abs__popup_menu_item_layout
    int abs__screen_action_bar -> abs__screen_action_bar
    int abs__screen_action_bar_overlay -> abs__screen_action_bar_overlay
    int abs__screen_simple -> abs__screen_simple
    int abs__screen_simple_overlay_action_mode -> abs__screen_simple_overlay_action_mode
    int abs__search_dropdown_item_icons_2line -> abs__search_dropdown_item_icons_2line
    int abs__search_view -> abs__search_view
    int abs__simple_dropdown_hint -> abs__simple_dropdown_hint
    int sherlock_spinner_dropdown_item -> sherlock_spinner_dropdown_item
    int sherlock_spinner_item -> sherlock_spinner_item
com.actionbarsherlock.R$string -> com.actionbarsherlock.R$string:
    int abs__action_bar_home_description -> abs__action_bar_home_description
    int abs__action_bar_up_description -> abs__action_bar_up_description
    int abs__action_menu_overflow_description -> abs__action_menu_overflow_description
    int abs__action_mode_done -> abs__action_mode_done
    int abs__activity_chooser_view_see_all -> abs__activity_chooser_view_see_all
    int abs__activitychooserview_choose_application -> abs__activitychooserview_choose_application
    int abs__searchview_description_clear -> abs__searchview_description_clear
    int abs__searchview_description_query -> abs__searchview_description_query
    int abs__searchview_description_search -> abs__searchview_description_search
    int abs__searchview_description_submit -> abs__searchview_description_submit
    int abs__searchview_description_voice -> abs__searchview_description_voice
    int abs__shareactionprovider_share_with -> abs__shareactionprovider_share_with
    int abs__shareactionprovider_share_with_application -> abs__shareactionprovider_share_with_application
com.actionbarsherlock.R$style -> com.actionbarsherlock.R$style:
    int Sherlock___TextAppearance_Small -> Sherlock___TextAppearance_Small
    int Sherlock___Theme -> Sherlock___Theme
    int Sherlock___Theme_DarkActionBar -> Sherlock___Theme_DarkActionBar
    int Sherlock___Theme_Light -> Sherlock___Theme_Light
    int Sherlock___Widget_ActionBar -> Sherlock___Widget_ActionBar
    int Sherlock___Widget_ActionMode -> Sherlock___Widget_ActionMode
    int Sherlock___Widget_ActivityChooserView -> Sherlock___Widget_ActivityChooserView
    int Sherlock___Widget_Holo_DropDownItem -> Sherlock___Widget_Holo_DropDownItem
    int Sherlock___Widget_Holo_ListView -> Sherlock___Widget_Holo_ListView
    int Sherlock___Widget_Holo_Spinner -> Sherlock___Widget_Holo_Spinner
    int Sherlock___Widget_SearchAutoCompleteTextView -> Sherlock___Widget_SearchAutoCompleteTextView
    int TextAppearance_Sherlock -> TextAppearance_Sherlock
    int TextAppearance_Sherlock_Light_SearchResult -> TextAppearance_Sherlock_Light_SearchResult
    int TextAppearance_Sherlock_Light_SearchResult_Subtitle -> TextAppearance_Sherlock_Light_SearchResult_Subtitle
    int TextAppearance_Sherlock_Light_SearchResult_Title -> TextAppearance_Sherlock_Light_SearchResult_Title
    int TextAppearance_Sherlock_Light_Small -> TextAppearance_Sherlock_Light_Small
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Large
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Small
    int TextAppearance_Sherlock_SearchResult -> TextAppearance_Sherlock_SearchResult
    int TextAppearance_Sherlock_SearchResult_Subtitle -> TextAppearance_Sherlock_SearchResult_Subtitle
    int TextAppearance_Sherlock_SearchResult_Title -> TextAppearance_Sherlock_SearchResult_Title
    int TextAppearance_Sherlock_Small -> TextAppearance_Sherlock_Small
    int TextAppearance_Sherlock_Widget_ActionBar_Menu -> TextAppearance_Sherlock_Widget_ActionBar_Menu
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_Sherlock_Widget_ActionBar_Title -> TextAppearance_Sherlock_Widget_ActionBar_Title
    int TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_Sherlock_Widget_ActionMode_Title -> TextAppearance_Sherlock_Widget_ActionMode_Title
    int TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse
    int TextAppearance_Sherlock_Widget_DropDownHint -> TextAppearance_Sherlock_Widget_DropDownHint
    int TextAppearance_Sherlock_Widget_DropDownItem -> TextAppearance_Sherlock_Widget_DropDownItem
    int TextAppearance_Sherlock_Widget_PopupMenu -> TextAppearance_Sherlock_Widget_PopupMenu
    int TextAppearance_Sherlock_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Widget_PopupMenu_Large
    int TextAppearance_Sherlock_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Widget_PopupMenu_Small
    int TextAppearance_Sherlock_Widget_TextView_SpinnerItem -> TextAppearance_Sherlock_Widget_TextView_SpinnerItem
    int Theme_Sherlock -> Theme_Sherlock
    int Theme_Sherlock_Light -> Theme_Sherlock_Light
    int Theme_Sherlock_Light_DarkActionBar -> Theme_Sherlock_Light_DarkActionBar
    int Theme_Sherlock_Light_NoActionBar -> Theme_Sherlock_Light_NoActionBar
    int Theme_Sherlock_NoActionBar -> Theme_Sherlock_NoActionBar
    int Widget -> Widget
    int Widget_Sherlock_ActionBar -> Widget_Sherlock_ActionBar
    int Widget_Sherlock_ActionBar_Solid -> Widget_Sherlock_ActionBar_Solid
    int Widget_Sherlock_ActionBar_TabBar -> Widget_Sherlock_ActionBar_TabBar
    int Widget_Sherlock_ActionBar_TabText -> Widget_Sherlock_ActionBar_TabText
    int Widget_Sherlock_ActionBar_TabView -> Widget_Sherlock_ActionBar_TabView
    int Widget_Sherlock_ActionButton -> Widget_Sherlock_ActionButton
    int Widget_Sherlock_ActionButton_CloseMode -> Widget_Sherlock_ActionButton_CloseMode
    int Widget_Sherlock_ActionButton_Overflow -> Widget_Sherlock_ActionButton_Overflow
    int Widget_Sherlock_ActionMode -> Widget_Sherlock_ActionMode
    int Widget_Sherlock_ActivityChooserView -> Widget_Sherlock_ActivityChooserView
    int Widget_Sherlock_Button_Small -> Widget_Sherlock_Button_Small
    int Widget_Sherlock_DropDownItem_Spinner -> Widget_Sherlock_DropDownItem_Spinner
    int Widget_Sherlock_Light_ActionBar -> Widget_Sherlock_Light_ActionBar
    int Widget_Sherlock_Light_ActionBar_Solid -> Widget_Sherlock_Light_ActionBar_Solid
    int Widget_Sherlock_Light_ActionBar_Solid_Inverse -> Widget_Sherlock_Light_ActionBar_Solid_Inverse
    int Widget_Sherlock_Light_ActionBar_TabBar -> Widget_Sherlock_Light_ActionBar_TabBar
    int Widget_Sherlock_Light_ActionBar_TabBar_Inverse -> Widget_Sherlock_Light_ActionBar_TabBar_Inverse
    int Widget_Sherlock_Light_ActionBar_TabText -> Widget_Sherlock_Light_ActionBar_TabText
    int Widget_Sherlock_Light_ActionBar_TabText_Inverse -> Widget_Sherlock_Light_ActionBar_TabText_Inverse
    int Widget_Sherlock_Light_ActionBar_TabView -> Widget_Sherlock_Light_ActionBar_TabView
    int Widget_Sherlock_Light_ActionBar_TabView_Inverse -> Widget_Sherlock_Light_ActionBar_TabView_Inverse
    int Widget_Sherlock_Light_ActionButton -> Widget_Sherlock_Light_ActionButton
    int Widget_Sherlock_Light_ActionButton_CloseMode -> Widget_Sherlock_Light_ActionButton_CloseMode
    int Widget_Sherlock_Light_ActionButton_Overflow -> Widget_Sherlock_Light_ActionButton_Overflow
    int Widget_Sherlock_Light_ActionMode -> Widget_Sherlock_Light_ActionMode
    int Widget_Sherlock_Light_ActionMode_Inverse -> Widget_Sherlock_Light_ActionMode_Inverse
    int Widget_Sherlock_Light_ActivityChooserView -> Widget_Sherlock_Light_ActivityChooserView
    int Widget_Sherlock_Light_Button_Small -> Widget_Sherlock_Light_Button_Small
    int Widget_Sherlock_Light_DropDownItem_Spinner -> Widget_Sherlock_Light_DropDownItem_Spinner
    int Widget_Sherlock_Light_ListPopupWindow -> Widget_Sherlock_Light_ListPopupWindow
    int Widget_Sherlock_Light_ListView_DropDown -> Widget_Sherlock_Light_ListView_DropDown
    int Widget_Sherlock_Light_PopupMenu -> Widget_Sherlock_Light_PopupMenu
    int Widget_Sherlock_Light_PopupWindow_ActionMode -> Widget_Sherlock_Light_PopupWindow_ActionMode
    int Widget_Sherlock_Light_ProgressBar -> Widget_Sherlock_Light_ProgressBar
    int Widget_Sherlock_Light_ProgressBar_Horizontal -> Widget_Sherlock_Light_ProgressBar_Horizontal
    int Widget_Sherlock_Light_SearchAutoCompleteTextView -> Widget_Sherlock_Light_SearchAutoCompleteTextView
    int Widget_Sherlock_Light_Spinner_DropDown_ActionBar -> Widget_Sherlock_Light_Spinner_DropDown_ActionBar
    int Widget_Sherlock_ListPopupWindow -> Widget_Sherlock_ListPopupWindow
    int Widget_Sherlock_ListView_DropDown -> Widget_Sherlock_ListView_DropDown
    int Widget_Sherlock_PopupMenu -> Widget_Sherlock_PopupMenu
    int Widget_Sherlock_PopupWindow_ActionMode -> Widget_Sherlock_PopupWindow_ActionMode
    int Widget_Sherlock_ProgressBar -> Widget_Sherlock_ProgressBar
    int Widget_Sherlock_ProgressBar_Horizontal -> Widget_Sherlock_ProgressBar_Horizontal
    int Widget_Sherlock_SearchAutoCompleteTextView -> Widget_Sherlock_SearchAutoCompleteTextView
    int Widget_Sherlock_Spinner_DropDown_ActionBar -> Widget_Sherlock_Spinner_DropDown_ActionBar
    int Widget_Sherlock_TextView_SpinnerItem -> Widget_Sherlock_TextView_SpinnerItem
com.actionbarsherlock.R$styleable -> com.actionbarsherlock.R$styleable:
    int[] SherlockActionBar -> SherlockActionBar
    int SherlockActionBar_background -> SherlockActionBar_background
    int SherlockActionBar_backgroundSplit -> SherlockActionBar_backgroundSplit
    int SherlockActionBar_backgroundStacked -> SherlockActionBar_backgroundStacked
    int SherlockActionBar_customNavigationLayout -> SherlockActionBar_customNavigationLayout
    int SherlockActionBar_displayOptions -> SherlockActionBar_displayOptions
    int SherlockActionBar_divider -> SherlockActionBar_divider
    int SherlockActionBar_height -> SherlockActionBar_height
    int SherlockActionBar_homeLayout -> SherlockActionBar_homeLayout
    int SherlockActionBar_icon -> SherlockActionBar_icon
    int SherlockActionBar_indeterminateProgressStyle -> SherlockActionBar_indeterminateProgressStyle
    int SherlockActionBar_itemPadding -> SherlockActionBar_itemPadding
    int SherlockActionBar_logo -> SherlockActionBar_logo
    int SherlockActionBar_navigationMode -> SherlockActionBar_navigationMode
    int SherlockActionBar_progressBarPadding -> SherlockActionBar_progressBarPadding
    int SherlockActionBar_progressBarStyle -> SherlockActionBar_progressBarStyle
    int SherlockActionBar_subtitle -> SherlockActionBar_subtitle
    int SherlockActionBar_subtitleTextStyle -> SherlockActionBar_subtitleTextStyle
    int SherlockActionBar_title -> SherlockActionBar_title
    int SherlockActionBar_titleTextStyle -> SherlockActionBar_titleTextStyle
    int[] SherlockActionMenuItemView -> SherlockActionMenuItemView
    int SherlockActionMenuItemView_android_minWidth -> SherlockActionMenuItemView_android_minWidth
    int[] SherlockActionMode -> SherlockActionMode
    int SherlockActionMode_background -> SherlockActionMode_background
    int SherlockActionMode_backgroundSplit -> SherlockActionMode_backgroundSplit
    int SherlockActionMode_height -> SherlockActionMode_height
    int SherlockActionMode_subtitleTextStyle -> SherlockActionMode_subtitleTextStyle
    int SherlockActionMode_titleTextStyle -> SherlockActionMode_titleTextStyle
    int[] SherlockActivityChooserView -> SherlockActivityChooserView
    int SherlockActivityChooserView_android_background -> SherlockActivityChooserView_android_background
    int SherlockActivityChooserView_expandActivityOverflowButtonDrawable -> SherlockActivityChooserView_expandActivityOverflowButtonDrawable
    int SherlockActivityChooserView_initialActivityCount -> SherlockActivityChooserView_initialActivityCount
    int[] SherlockMenuGroup -> SherlockMenuGroup
    int SherlockMenuGroup_android_checkableBehavior -> SherlockMenuGroup_android_checkableBehavior
    int SherlockMenuGroup_android_enabled -> SherlockMenuGroup_android_enabled
    int SherlockMenuGroup_android_id -> SherlockMenuGroup_android_id
    int SherlockMenuGroup_android_menuCategory -> SherlockMenuGroup_android_menuCategory
    int SherlockMenuGroup_android_orderInCategory -> SherlockMenuGroup_android_orderInCategory
    int SherlockMenuGroup_android_visible -> SherlockMenuGroup_android_visible
    int[] SherlockMenuItem -> SherlockMenuItem
    int SherlockMenuItem_android_actionLayout -> SherlockMenuItem_android_actionLayout
    int SherlockMenuItem_android_actionProviderClass -> SherlockMenuItem_android_actionProviderClass
    int SherlockMenuItem_android_actionViewClass -> SherlockMenuItem_android_actionViewClass
    int SherlockMenuItem_android_alphabeticShortcut -> SherlockMenuItem_android_alphabeticShortcut
    int SherlockMenuItem_android_checkable -> SherlockMenuItem_android_checkable
    int SherlockMenuItem_android_checked -> SherlockMenuItem_android_checked
    int SherlockMenuItem_android_enabled -> SherlockMenuItem_android_enabled
    int SherlockMenuItem_android_icon -> SherlockMenuItem_android_icon
    int SherlockMenuItem_android_id -> SherlockMenuItem_android_id
    int SherlockMenuItem_android_menuCategory -> SherlockMenuItem_android_menuCategory
    int SherlockMenuItem_android_numericShortcut -> SherlockMenuItem_android_numericShortcut
    int SherlockMenuItem_android_onClick -> SherlockMenuItem_android_onClick
    int SherlockMenuItem_android_orderInCategory -> SherlockMenuItem_android_orderInCategory
    int SherlockMenuItem_android_showAsAction -> SherlockMenuItem_android_showAsAction
    int SherlockMenuItem_android_title -> SherlockMenuItem_android_title
    int SherlockMenuItem_android_titleCondensed -> SherlockMenuItem_android_titleCondensed
    int SherlockMenuItem_android_visible -> SherlockMenuItem_android_visible
    int[] SherlockMenuView -> SherlockMenuView
    int SherlockMenuView_headerBackground -> SherlockMenuView_headerBackground
    int SherlockMenuView_horizontalDivider -> SherlockMenuView_horizontalDivider
    int SherlockMenuView_itemBackground -> SherlockMenuView_itemBackground
    int SherlockMenuView_itemIconDisabledAlpha -> SherlockMenuView_itemIconDisabledAlpha
    int SherlockMenuView_itemTextAppearance -> SherlockMenuView_itemTextAppearance
    int SherlockMenuView_preserveIconSpacing -> SherlockMenuView_preserveIconSpacing
    int SherlockMenuView_verticalDivider -> SherlockMenuView_verticalDivider
    int SherlockMenuView_windowAnimationStyle -> SherlockMenuView_windowAnimationStyle
    int[] SherlockSearchView -> SherlockSearchView
    int SherlockSearchView_android_imeOptions -> SherlockSearchView_android_imeOptions
    int SherlockSearchView_android_inputType -> SherlockSearchView_android_inputType
    int SherlockSearchView_android_maxWidth -> SherlockSearchView_android_maxWidth
    int SherlockSearchView_iconifiedByDefault -> SherlockSearchView_iconifiedByDefault
    int SherlockSearchView_queryHint -> SherlockSearchView_queryHint
    int[] SherlockSpinner -> SherlockSpinner
    int SherlockSpinner_android_dropDownHorizontalOffset -> SherlockSpinner_android_dropDownHorizontalOffset
    int SherlockSpinner_android_dropDownSelector -> SherlockSpinner_android_dropDownSelector
    int SherlockSpinner_android_dropDownVerticalOffset -> SherlockSpinner_android_dropDownVerticalOffset
    int SherlockSpinner_android_dropDownWidth -> SherlockSpinner_android_dropDownWidth
    int SherlockSpinner_android_gravity -> SherlockSpinner_android_gravity
    int SherlockSpinner_android_popupBackground -> SherlockSpinner_android_popupBackground
    int SherlockSpinner_android_popupPromptView -> SherlockSpinner_android_popupPromptView
    int SherlockSpinner_android_prompt -> SherlockSpinner_android_prompt
    int[] SherlockTheme -> SherlockTheme
    int SherlockTheme_actionBarDivider -> SherlockTheme_actionBarDivider
    int SherlockTheme_actionBarItemBackground -> SherlockTheme_actionBarItemBackground
    int SherlockTheme_actionBarSize -> SherlockTheme_actionBarSize
    int SherlockTheme_actionBarSplitStyle -> SherlockTheme_actionBarSplitStyle
    int SherlockTheme_actionBarStyle -> SherlockTheme_actionBarStyle
    int SherlockTheme_actionBarTabBarStyle -> SherlockTheme_actionBarTabBarStyle
    int SherlockTheme_actionBarTabStyle -> SherlockTheme_actionBarTabStyle
    int SherlockTheme_actionBarTabTextStyle -> SherlockTheme_actionBarTabTextStyle
    int SherlockTheme_actionBarWidgetTheme -> SherlockTheme_actionBarWidgetTheme
    int SherlockTheme_actionButtonStyle -> SherlockTheme_actionButtonStyle
    int SherlockTheme_actionDropDownStyle -> SherlockTheme_actionDropDownStyle
    int SherlockTheme_actionMenuTextAppearance -> SherlockTheme_actionMenuTextAppearance
    int SherlockTheme_actionMenuTextColor -> SherlockTheme_actionMenuTextColor
    int SherlockTheme_actionModeBackground -> SherlockTheme_actionModeBackground
    int SherlockTheme_actionModeCloseButtonStyle -> SherlockTheme_actionModeCloseButtonStyle
    int SherlockTheme_actionModeCloseDrawable -> SherlockTheme_actionModeCloseDrawable
    int SherlockTheme_actionModePopupWindowStyle -> SherlockTheme_actionModePopupWindowStyle
    int SherlockTheme_actionModeShareDrawable -> SherlockTheme_actionModeShareDrawable
    int SherlockTheme_actionModeSplitBackground -> SherlockTheme_actionModeSplitBackground
    int SherlockTheme_actionModeStyle -> SherlockTheme_actionModeStyle
    int SherlockTheme_actionOverflowButtonStyle -> SherlockTheme_actionOverflowButtonStyle
    int SherlockTheme_actionSpinnerItemStyle -> SherlockTheme_actionSpinnerItemStyle
    int SherlockTheme_activatedBackgroundIndicator -> SherlockTheme_activatedBackgroundIndicator
    int SherlockTheme_activityChooserViewStyle -> SherlockTheme_activityChooserViewStyle
    int SherlockTheme_buttonStyleSmall -> SherlockTheme_buttonStyleSmall
    int SherlockTheme_dividerVertical -> SherlockTheme_dividerVertical
    int SherlockTheme_dropDownHintAppearance -> SherlockTheme_dropDownHintAppearance
    int SherlockTheme_dropDownListViewStyle -> SherlockTheme_dropDownListViewStyle
    int SherlockTheme_dropdownListPreferredItemHeight -> SherlockTheme_dropdownListPreferredItemHeight
    int SherlockTheme_homeAsUpIndicator -> SherlockTheme_homeAsUpIndicator
    int SherlockTheme_listPopupWindowStyle -> SherlockTheme_listPopupWindowStyle
    int SherlockTheme_listPreferredItemHeightSmall -> SherlockTheme_listPreferredItemHeightSmall
    int SherlockTheme_listPreferredItemPaddingLeft -> SherlockTheme_listPreferredItemPaddingLeft
    int SherlockTheme_listPreferredItemPaddingRight -> SherlockTheme_listPreferredItemPaddingRight
    int SherlockTheme_popupMenuStyle -> SherlockTheme_popupMenuStyle
    int SherlockTheme_searchAutoCompleteTextView -> SherlockTheme_searchAutoCompleteTextView
    int SherlockTheme_searchDropdownBackground -> SherlockTheme_searchDropdownBackground
    int SherlockTheme_searchResultListItemHeight -> SherlockTheme_searchResultListItemHeight
    int SherlockTheme_searchViewCloseIcon -> SherlockTheme_searchViewCloseIcon
    int SherlockTheme_searchViewEditQuery -> SherlockTheme_searchViewEditQuery
    int SherlockTheme_searchViewEditQueryBackground -> SherlockTheme_searchViewEditQueryBackground
    int SherlockTheme_searchViewGoIcon -> SherlockTheme_searchViewGoIcon
    int SherlockTheme_searchViewSearchIcon -> SherlockTheme_searchViewSearchIcon
    int SherlockTheme_searchViewTextField -> SherlockTheme_searchViewTextField
    int SherlockTheme_searchViewTextFieldRight -> SherlockTheme_searchViewTextFieldRight
    int SherlockTheme_searchViewVoiceIcon -> SherlockTheme_searchViewVoiceIcon
    int SherlockTheme_selectableItemBackground -> SherlockTheme_selectableItemBackground
    int SherlockTheme_spinnerDropDownItemStyle -> SherlockTheme_spinnerDropDownItemStyle
    int SherlockTheme_spinnerItemStyle -> SherlockTheme_spinnerItemStyle
    int SherlockTheme_textAppearanceLargePopupMenu -> SherlockTheme_textAppearanceLargePopupMenu
    int SherlockTheme_textAppearanceListItemSmall -> SherlockTheme_textAppearanceListItemSmall
    int SherlockTheme_textAppearanceSearchResultSubtitle -> SherlockTheme_textAppearanceSearchResultSubtitle
    int SherlockTheme_textAppearanceSearchResultTitle -> SherlockTheme_textAppearanceSearchResultTitle
    int SherlockTheme_textAppearanceSmall -> SherlockTheme_textAppearanceSmall
    int SherlockTheme_textAppearanceSmallPopupMenu -> SherlockTheme_textAppearanceSmallPopupMenu
    int SherlockTheme_textColorPrimary -> SherlockTheme_textColorPrimary
    int SherlockTheme_textColorPrimaryDisableOnly -> SherlockTheme_textColorPrimaryDisableOnly
    int SherlockTheme_textColorPrimaryInverse -> SherlockTheme_textColorPrimaryInverse
    int SherlockTheme_textColorSearchUrl -> SherlockTheme_textColorSearchUrl
    int SherlockTheme_windowActionBar -> SherlockTheme_windowActionBar
    int SherlockTheme_windowActionBarOverlay -> SherlockTheme_windowActionBarOverlay
    int SherlockTheme_windowActionModeOverlay -> SherlockTheme_windowActionModeOverlay
    int SherlockTheme_windowContentOverlay -> SherlockTheme_windowContentOverlay
    int SherlockTheme_windowMinWidthMajor -> SherlockTheme_windowMinWidthMajor
    int SherlockTheme_windowMinWidthMinor -> SherlockTheme_windowMinWidthMinor
    int SherlockTheme_windowNoTitle -> SherlockTheme_windowNoTitle
    int SherlockTheme_windowSplitActionBar -> SherlockTheme_windowSplitActionBar
    int[] SherlockView -> SherlockView
    int SherlockView_android_focusable -> SherlockView_android_focusable
com.actionbarsherlock.app.ActionBar -> com.actionbarsherlock.app.ActionBar:
    int NAVIGATION_MODE_STANDARD -> NAVIGATION_MODE_STANDARD
    int NAVIGATION_MODE_LIST -> NAVIGATION_MODE_LIST
    int NAVIGATION_MODE_TABS -> NAVIGATION_MODE_TABS
    int DISPLAY_USE_LOGO -> DISPLAY_USE_LOGO
    int DISPLAY_SHOW_HOME -> DISPLAY_SHOW_HOME
    int DISPLAY_HOME_AS_UP -> DISPLAY_HOME_AS_UP
    int DISPLAY_SHOW_TITLE -> DISPLAY_SHOW_TITLE
    int DISPLAY_SHOW_CUSTOM -> DISPLAY_SHOW_CUSTOM
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,com.actionbarsherlock.app.ActionBar$LayoutParams) -> setCustomView
    void setCustomView(int) -> setCustomView
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setListNavigationCallbacks(android.widget.SpinnerAdapter,com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    int getNavigationItemCount() -> getNavigationItemCount
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setDisplayOptions(int) -> setDisplayOptions
    void setDisplayOptions(int,int) -> setDisplayOptions
    void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    int getNavigationMode() -> getNavigationMode
    void setNavigationMode(int) -> setNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    com.actionbarsherlock.app.ActionBar$Tab newTab() -> newTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean) -> addTab
    void removeTab(com.actionbarsherlock.app.ActionBar$Tab) -> removeTab
    void removeTabAt(int) -> removeTabAt
    void removeAllTabs() -> removeAllTabs
    void selectTab(com.actionbarsherlock.app.ActionBar$Tab) -> selectTab
    com.actionbarsherlock.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    com.actionbarsherlock.app.ActionBar$Tab getTabAt(int) -> getTabAt
    int getTabCount() -> getTabCount
    int getHeight() -> getHeight
    void show() -> show
    void hide() -> hide
    boolean isShowing() -> isShowing
    void addOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    void removeOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    android.content.Context getThemedContext() -> getThemedContext
com.actionbarsherlock.app.ActionBar$LayoutParams -> com.actionbarsherlock.app.ActionBar$LayoutParams:
    int[] ATTRS -> ATTRS
    int gravity -> gravity
com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener -> com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener:
    void onMenuVisibilityChanged(boolean) -> onMenuVisibilityChanged
com.actionbarsherlock.app.ActionBar$OnNavigationListener -> com.actionbarsherlock.app.ActionBar$OnNavigationListener:
    boolean onNavigationItemSelected(int,long) -> onNavigationItemSelected
com.actionbarsherlock.app.ActionBar$Tab -> com.actionbarsherlock.app.ActionBar$Tab:
    int INVALID_POSITION -> INVALID_POSITION
    int getPosition() -> getPosition
    android.graphics.drawable.Drawable getIcon() -> getIcon
    java.lang.CharSequence getText() -> getText
    com.actionbarsherlock.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setIcon(int) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setText(int) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(int) -> setCustomView
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    com.actionbarsherlock.app.ActionBar$Tab setTabListener(com.actionbarsherlock.app.ActionBar$TabListener) -> setTabListener
    void select() -> select
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
com.actionbarsherlock.app.ActionBar$TabListener -> com.actionbarsherlock.app.ActionBar$TabListener:
    void onTabSelected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabSelected
    void onTabUnselected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabUnselected
    void onTabReselected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabReselected
com.actionbarsherlock.app.SherlockActivity -> com.actionbarsherlock.app.SherlockActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> mSherlock
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.app.SherlockDialogFragment -> com.actionbarsherlock.app.SherlockDialogFragment:
    com.actionbarsherlock.app.SherlockFragmentActivity mActivity -> mActivity
    com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity() -> getSherlockActivity
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
com.actionbarsherlock.app.SherlockExpandableListActivity -> com.actionbarsherlock.app.SherlockExpandableListActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> mSherlock
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.app.SherlockFragment -> com.actionbarsherlock.app.SherlockFragment:
    com.actionbarsherlock.app.SherlockFragmentActivity mActivity -> mActivity
    com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity() -> getSherlockActivity
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
com.actionbarsherlock.app.SherlockFragmentActivity -> com.actionbarsherlock.app.SherlockFragmentActivity:
    java.lang.String TAG -> TAG
    com.actionbarsherlock.ActionBarSherlock mSherlock -> mSherlock
    boolean mIgnoreNativeCreate -> mIgnoreNativeCreate
    boolean mIgnoreNativePrepare -> mIgnoreNativePrepare
    boolean mIgnoreNativeSelected -> mIgnoreNativeSelected
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.app.SherlockListActivity -> com.actionbarsherlock.app.SherlockListActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> mSherlock
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.app.SherlockListFragment -> com.actionbarsherlock.app.SherlockListFragment:
    com.actionbarsherlock.app.SherlockFragmentActivity mActivity -> mActivity
    com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity() -> getSherlockActivity
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
com.actionbarsherlock.app.SherlockPreferenceActivity -> com.actionbarsherlock.app.SherlockPreferenceActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> mSherlock
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.internal.ActionBarSherlockCompat -> com.actionbarsherlock.internal.ActionBarSherlockCompat:
    int DEFAULT_FEATURES -> DEFAULT_FEATURES
    java.lang.String PANELS_TAG -> PANELS_TAG
    boolean mReserveOverflow -> mReserveOverflow
    boolean mReserveOverflowSet -> mReserveOverflowSet
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    java.util.HashMap mNativeItemMap -> mNativeItemMap
    android.view.ViewGroup mDecor -> mDecor
    android.view.ViewGroup mContentParent -> mContentParent
    boolean mIsTitleReady -> mIsTitleReady
    boolean mIsDestroyed -> mIsDestroyed
    boolean mClosingActionMenu -> mClosingActionMenu
    boolean mMenuIsPrepared -> mMenuIsPrepared
    boolean mMenuRefreshContent -> mMenuRefreshContent
    android.os.Bundle mMenuFrozenActionViewState -> mMenuFrozenActionViewState
    com.actionbarsherlock.internal.app.ActionBarImpl aActionBar -> aActionBar
    com.actionbarsherlock.internal.widget.ActionBarView wActionBar -> wActionBar
    int mFeatures -> mFeatures
    int mUiOptions -> mUiOptions
    com.actionbarsherlock.internal.widget.IcsProgressBar mCircularProgressBar -> mCircularProgressBar
    com.actionbarsherlock.internal.widget.IcsProgressBar mHorizontalProgressBar -> mHorizontalProgressBar
    com.actionbarsherlock.view.ActionMode mActionMode -> mActionMode
    com.actionbarsherlock.internal.widget.ActionBarContextView mActionModeView -> mActionModeView
    com.actionbarsherlock.app.ActionBar getActionBar() -> getActionBar
    void initActionBar() -> initActionBar
    android.content.Context getThemedContext() -> getThemedContext
    void setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchPostResume() -> dispatchPostResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchInvalidateOptionsMenu() -> dispatchInvalidateOptionsMenu
    boolean dispatchOpenOptionsMenu() -> dispatchOpenOptionsMenu
    boolean dispatchCloseOptionsMenu() -> dispatchCloseOptionsMenu
    void dispatchPostCreate(android.os.Bundle) -> dispatchPostCreate
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchMenuOpened(int,android.view.Menu) -> dispatchMenuOpened
    void dispatchPanelClosed(int,android.view.Menu) -> dispatchPanelClosed
    void dispatchTitleChanged(java.lang.CharSequence,int) -> dispatchTitleChanged
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void dispatchDestroy() -> dispatchDestroy
    void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    boolean preparePanel() -> preparePanel
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onMenuModeChange
    void reopenMenu(boolean) -> reopenMenu
    boolean initializePanelMenu() -> initializePanelMenu
    void checkCloseActionMenu(com.actionbarsherlock.view.Menu) -> checkCloseActionMenu
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onOpenSubMenu
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void setProgressBarVisibility(boolean) -> setProgressBarVisibility
    void setProgressBarIndeterminateVisibility(boolean) -> setProgressBarIndeterminateVisibility
    void setProgressBarIndeterminate(boolean) -> setProgressBarIndeterminate
    void setProgress(int) -> setProgress
    void setSecondaryProgress(int) -> setSecondaryProgress
    void setFeatureInt(int,int) -> setFeatureInt
    void updateInt(int,int,boolean) -> updateInt
    void onIntChanged(int,int) -> onIntChanged
    void updateProgressBars(int) -> updateProgressBars
    void showProgressBars(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar) -> showProgressBars
    void hideProgressBars(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar) -> hideProgressBars
    com.actionbarsherlock.internal.widget.IcsProgressBar getCircularProgressBar(boolean) -> getCircularProgressBar
    com.actionbarsherlock.internal.widget.IcsProgressBar getHorizontalProgressBar(boolean) -> getHorizontalProgressBar
    int getFeatures() -> getFeatures
    boolean hasFeature(int) -> hasFeature
    boolean requestFeature(int) -> requestFeature
    void setUiOptions(int) -> setUiOptions
    void setUiOptions(int,int) -> setUiOptions
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void installDecor() -> installDecor
    android.view.ViewGroup generateLayout() -> generateLayout
    boolean isReservingOverflow() -> isReservingOverflow
    int loadUiOptionsFromManifest(android.app.Activity) -> loadUiOptionsFromManifest
    java.lang.String cleanActivityName(java.lang.String,java.lang.String) -> cleanActivityName
    void ensureActionBar() -> ensureActionBar
    com.actionbarsherlock.internal.widget.ActionBarContextView access$0(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$0
    android.app.Activity access$1(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$1
    com.actionbarsherlock.view.ActionMode access$2(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$2
    void access$3(com.actionbarsherlock.internal.ActionBarSherlockCompat,com.actionbarsherlock.view.ActionMode) -> access$3
    boolean access$4(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$4
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$5(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$5
com.actionbarsherlock.internal.ActionBarSherlockCompat$1 -> com.actionbarsherlock.internal.ActionBarSherlockCompat$1:
    com.actionbarsherlock.internal.ActionBarSherlockCompat this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper -> com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper:
    com.actionbarsherlock.view.ActionMode$Callback mWrapped -> mWrapped
    com.actionbarsherlock.internal.ActionBarSherlockCompat this$0 -> this$0
    boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(com.actionbarsherlock.view.ActionMode) -> onDestroyActionMode
com.actionbarsherlock.internal.ActionBarSherlockNative -> com.actionbarsherlock.internal.ActionBarSherlockNative:
    com.actionbarsherlock.internal.app.ActionBarWrapper mActionBar -> mActionBar
    com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper mActionMode -> mActionMode
    com.actionbarsherlock.internal.view.menu.MenuWrapper mMenu -> mMenu
    com.actionbarsherlock.app.ActionBar getActionBar() -> getActionBar
    void initActionBar() -> initActionBar
    void dispatchInvalidateOptionsMenu() -> dispatchInvalidateOptionsMenu
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean hasFeature(int) -> hasFeature
    boolean requestFeature(int) -> requestFeature
    void setUiOptions(int) -> setUiOptions
    void setUiOptions(int,int) -> setUiOptions
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setProgressBarVisibility(boolean) -> setProgressBarVisibility
    void setProgressBarIndeterminateVisibility(boolean) -> setProgressBarIndeterminateVisibility
    void setProgressBarIndeterminate(boolean) -> setProgressBarIndeterminate
    void setProgress(int) -> setProgress
    void setSecondaryProgress(int) -> setSecondaryProgress
    android.content.Context getThemedContext() -> getThemedContext
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void access$0(com.actionbarsherlock.internal.ActionBarSherlockNative,com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper) -> access$0
    com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper access$1(com.actionbarsherlock.internal.ActionBarSherlockNative) -> access$1
    android.app.Activity access$2(com.actionbarsherlock.internal.ActionBarSherlockNative) -> access$2
com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper -> com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper:
    com.actionbarsherlock.view.ActionMode$Callback mCallback -> mCallback
    com.actionbarsherlock.internal.ActionBarSherlockNative this$0 -> this$0
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper -> com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper:
    android.view.ActionMode mActionMode -> mActionMode
    com.actionbarsherlock.internal.view.menu.MenuWrapper mMenu -> mMenu
    com.actionbarsherlock.internal.ActionBarSherlockNative this$0 -> this$0
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setCustomView(android.view.View) -> setCustomView
    void invalidate() -> invalidate
    void finish() -> finish
    com.actionbarsherlock.internal.view.menu.MenuWrapper getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    void setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    com.actionbarsherlock.view.Menu getMenu() -> getMenu
com.actionbarsherlock.internal.ResourcesCompat -> com.actionbarsherlock.internal.ResourcesCompat:
    java.lang.String TAG -> TAG
    boolean getResources_getBoolean(android.content.Context,int) -> getResources_getBoolean
    int getResources_getInteger(android.content.Context,int) -> getResources_getInteger
    int loadLogoFromManifest(android.app.Activity) -> loadLogoFromManifest
com.actionbarsherlock.internal.app.ActionBarImpl -> com.actionbarsherlock.internal.app.ActionBarImpl:
    android.content.Context mContext -> mContext
    android.content.Context mThemedContext -> mThemedContext
    android.app.Activity mActivity -> mActivity
    com.actionbarsherlock.internal.widget.ActionBarContainer mContainerView -> mContainerView
    com.actionbarsherlock.internal.widget.ActionBarView mActionView -> mActionView
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> mContextView
    com.actionbarsherlock.internal.widget.ActionBarContainer mSplitView -> mSplitView
    com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout mContentView -> mContentView
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mTabScrollView -> mTabScrollView
    java.util.ArrayList mTabs -> mTabs
    com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl mSelectedTab -> mSelectedTab
    int mSavedTabPosition -> mSavedTabPosition
    com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl mActionMode -> mActionMode
    com.actionbarsherlock.view.ActionMode mDeferredDestroyActionMode -> mDeferredDestroyActionMode
    com.actionbarsherlock.view.ActionMode$Callback mDeferredModeDestroyCallback -> mDeferredModeDestroyCallback
    boolean mLastMenuVisibility -> mLastMenuVisibility
    java.util.ArrayList mMenuVisibilityListeners -> mMenuVisibilityListeners
    int CONTEXT_DISPLAY_NORMAL -> CONTEXT_DISPLAY_NORMAL
    int CONTEXT_DISPLAY_SPLIT -> CONTEXT_DISPLAY_SPLIT
    int INVALID_POSITION -> INVALID_POSITION
    int mContextDisplayMode -> mContextDisplayMode
    boolean mHasEmbeddedTabs -> mHasEmbeddedTabs
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mTabSelector -> mTabSelector
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentShowAnim -> mCurrentShowAnim
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentModeAnim -> mCurrentModeAnim
    boolean mShowHideAnimationEnabled -> mShowHideAnimationEnabled
    boolean mWasHiddenBeforeMode -> mWasHiddenBeforeMode
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener mHideListener -> mHideListener
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener mShowListener -> mShowListener
    void init(android.view.View) -> init
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setHasEmbeddedTabs(boolean) -> setHasEmbeddedTabs
    void ensureTabsExist() -> ensureTabsExist
    void completeDeferredDestroyActionMode() -> completeDeferredDestroyActionMode
    void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    void addOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    void removeOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    void setCustomView(int) -> setCustomView
    void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    void setTitle(int) -> setTitle
    void setSubtitle(int) -> setSubtitle
    void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    void removeAllTabs() -> removeAllTabs
    void cleanupTabs() -> cleanupTabs
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setDisplayOptions(int) -> setDisplayOptions
    void setDisplayOptions(int,int) -> setDisplayOptions
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    int getNavigationMode() -> getNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void configureTab(com.actionbarsherlock.app.ActionBar$Tab,int) -> configureTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean) -> addTab
    com.actionbarsherlock.app.ActionBar$Tab newTab() -> newTab
    void removeTab(com.actionbarsherlock.app.ActionBar$Tab) -> removeTab
    void removeTabAt(int) -> removeTabAt
    void selectTab(com.actionbarsherlock.app.ActionBar$Tab) -> selectTab
    com.actionbarsherlock.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    int getHeight() -> getHeight
    void show() -> show
    void show(boolean) -> show
    void hide() -> hide
    boolean isShowing() -> isShowing
    void animateToMode(boolean) -> animateToMode
    android.content.Context getThemedContext() -> getThemedContext
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,com.actionbarsherlock.app.ActionBar$LayoutParams) -> setCustomView
    void setListNavigationCallbacks(android.widget.SpinnerAdapter,com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    int getNavigationItemCount() -> getNavigationItemCount
    int getTabCount() -> getTabCount
    void setNavigationMode(int) -> setNavigationMode
    com.actionbarsherlock.app.ActionBar$Tab getTabAt(int) -> getTabAt
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout access$0(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$0
    com.actionbarsherlock.internal.widget.ActionBarContainer access$1(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$1
    com.actionbarsherlock.internal.widget.ActionBarContainer access$2(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$2
    int access$3(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$3
    void access$4(com.actionbarsherlock.internal.app.ActionBarImpl,com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> access$4
    com.actionbarsherlock.internal.widget.ActionBarContextView access$5(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$5
    com.actionbarsherlock.internal.widget.ActionBarView access$6(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$6
    android.content.Context access$7(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$7
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$8(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$8
com.actionbarsherlock.internal.app.ActionBarImpl$1 -> com.actionbarsherlock.internal.app.ActionBarImpl$1:
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> this$0
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
com.actionbarsherlock.internal.app.ActionBarImpl$2 -> com.actionbarsherlock.internal.app.ActionBarImpl$2:
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> this$0
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl -> com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl:
    com.actionbarsherlock.view.ActionMode$Callback mCallback -> mCallback
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    java.lang.ref.WeakReference mCustomView -> mCustomView
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> this$0
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    com.actionbarsherlock.view.Menu getMenu() -> getMenu
    void finish() -> finish
    void invalidate() -> invalidate
    boolean dispatchOnCreate() -> dispatchOnCreate
    void setCustomView(android.view.View) -> setCustomView
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(int) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onCloseSubMenu
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onMenuModeChange
com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl -> com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl:
    com.actionbarsherlock.app.ActionBar$TabListener mCallback -> mCallback
    java.lang.Object mTag -> mTag
    android.graphics.drawable.Drawable mIcon -> mIcon
    java.lang.CharSequence mText -> mText
    java.lang.CharSequence mContentDesc -> mContentDesc
    int mPosition -> mPosition
    android.view.View mCustomView -> mCustomView
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> this$0
    java.lang.Object getTag() -> getTag
    com.actionbarsherlock.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    com.actionbarsherlock.app.ActionBar$TabListener getCallback() -> getCallback
    com.actionbarsherlock.app.ActionBar$Tab setTabListener(com.actionbarsherlock.app.ActionBar$TabListener) -> setTabListener
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(int) -> setCustomView
    android.graphics.drawable.Drawable getIcon() -> getIcon
    int getPosition() -> getPosition
    void setPosition(int) -> setPosition
    java.lang.CharSequence getText() -> getText
    com.actionbarsherlock.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setIcon(int) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setText(int) -> setText
    void select() -> select
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
com.actionbarsherlock.internal.app.ActionBarWrapper -> com.actionbarsherlock.internal.app.ActionBarWrapper:
    android.app.Activity mActivity -> mActivity
    android.app.ActionBar mActionBar -> mActionBar
    com.actionbarsherlock.app.ActionBar$OnNavigationListener mNavigationListener -> mNavigationListener
    java.util.Set mMenuVisibilityListeners -> mMenuVisibilityListeners
    android.support.v4.app.FragmentTransaction mFragmentTransaction -> mFragmentTransaction
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    android.content.Context getThemedContext() -> getThemedContext
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,com.actionbarsherlock.app.ActionBar$LayoutParams) -> setCustomView
    void setCustomView(int) -> setCustomView
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setListNavigationCallbacks(android.widget.SpinnerAdapter,com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    boolean onNavigationItemSelected(int,long) -> onNavigationItemSelected
    void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    int getNavigationItemCount() -> getNavigationItemCount
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setDisplayOptions(int) -> setDisplayOptions
    void setDisplayOptions(int,int) -> setDisplayOptions
    void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    int getNavigationMode() -> getNavigationMode
    void setNavigationMode(int) -> setNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    com.actionbarsherlock.app.ActionBar$Tab newTab() -> newTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean) -> addTab
    void removeTab(com.actionbarsherlock.app.ActionBar$Tab) -> removeTab
    void removeTabAt(int) -> removeTabAt
    void removeAllTabs() -> removeAllTabs
    void selectTab(com.actionbarsherlock.app.ActionBar$Tab) -> selectTab
    com.actionbarsherlock.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    com.actionbarsherlock.app.ActionBar$Tab getTabAt(int) -> getTabAt
    int getTabCount() -> getTabCount
    int getHeight() -> getHeight
    void show() -> show
    void hide() -> hide
    boolean isShowing() -> isShowing
    void addOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    void removeOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    void onMenuVisibilityChanged(boolean) -> onMenuVisibilityChanged
    android.app.Activity access$0(com.actionbarsherlock.internal.app.ActionBarWrapper) -> access$0
    android.support.v4.app.FragmentTransaction access$1(com.actionbarsherlock.internal.app.ActionBarWrapper) -> access$1
    void access$2(com.actionbarsherlock.internal.app.ActionBarWrapper,android.support.v4.app.FragmentTransaction) -> access$2
com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper -> com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper:
    android.app.ActionBar$Tab mNativeTab -> mNativeTab
    java.lang.Object mTag -> mTag
    com.actionbarsherlock.app.ActionBar$TabListener mListener -> mListener
    com.actionbarsherlock.internal.app.ActionBarWrapper this$0 -> this$0
    int getPosition() -> getPosition
    android.graphics.drawable.Drawable getIcon() -> getIcon
    java.lang.CharSequence getText() -> getText
    com.actionbarsherlock.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setIcon(int) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setText(int) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(int) -> setCustomView
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    com.actionbarsherlock.app.ActionBar$Tab setTabListener(com.actionbarsherlock.app.ActionBar$TabListener) -> setTabListener
    void select() -> select
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void onTabReselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabReselected
    void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabSelected
    void onTabUnselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabUnselected
com.actionbarsherlock.internal.nineoldandroids.animation.Animator -> com.actionbarsherlock.internal.nineoldandroids.animation.Animator:
    java.util.ArrayList mListeners -> mListeners
    void start() -> start
    void cancel() -> cancel
    void end() -> end
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener) -> addListener
    void removeListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener) -> removeListener
    java.util.ArrayList getListeners() -> getListeners
    void removeAllListeners() -> removeAllListeners
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> clone
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void setTarget(java.lang.Object) -> setTarget
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener -> com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener:
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter:
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet:
    java.util.ArrayList mPlayingSet -> mPlayingSet
    java.util.HashMap mNodeMap -> mNodeMap
    java.util.ArrayList mNodes -> mNodes
    java.util.ArrayList mSortedNodes -> mSortedNodes
    boolean mNeedsSort -> mNeedsSort
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener mSetListener -> mSetListener
    boolean mTerminated -> mTerminated
    boolean mStarted -> mStarted
    long mStartDelay -> mStartDelay
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator mDelayAnim -> mDelayAnim
    long mDuration -> mDuration
    void playTogether(com.actionbarsherlock.internal.nineoldandroids.animation.Animator[]) -> playTogether
    void playTogether(java.util.Collection) -> playTogether
    void playSequentially(com.actionbarsherlock.internal.nineoldandroids.animation.Animator[]) -> playSequentially
    void playSequentially(java.util.List) -> playSequentially
    java.util.ArrayList getChildAnimations() -> getChildAnimations
    void setTarget(java.lang.Object) -> setTarget
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> play
    void cancel() -> cancel
    void end() -> end
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    long getDuration() -> getDuration
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet setDuration(long) -> setDuration
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void start() -> start
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet clone() -> clone
    void sortNodes() -> sortNodes
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    java.util.ArrayList access$2(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> access$2
    java.util.HashMap access$3(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> access$3
    java.util.ArrayList access$4(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> access$4
    void access$5(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,boolean) -> access$5
    java.util.ArrayList access$6(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> access$6
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$1 -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$1:
    boolean canceled -> canceled
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> this$0
    java.util.ArrayList val$nodesToStart -> val$nodesToStart
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet mAnimatorSet -> mAnimatorSet
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> this$0
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node mCurrentNode -> mCurrentNode
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> this$0
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder with(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> with
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder before(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> before
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder after(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> after
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder after(long) -> after
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency:
    int WITH -> WITH
    int AFTER -> AFTER
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node node -> node
    int rule -> rule
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet mAnimatorSet -> mAnimatorSet
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node mNode -> mNode
    int mRule -> mRule
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void startIfReady(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> startIfReady
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node:
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator animation -> animation
    java.util.ArrayList dependencies -> dependencies
    java.util.ArrayList tmpDependencies -> tmpDependencies
    java.util.ArrayList nodeDependencies -> nodeDependencies
    java.util.ArrayList nodeDependents -> nodeDependents
    boolean done -> done
    void addDependency(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency) -> addDependency
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node clone() -> clone
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator -> com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator:
    java.lang.Float evaluate(float,java.lang.Number,java.lang.Number) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet -> com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet:
    float firstValue -> firstValue
    float lastValue -> lastValue
    float deltaValue -> deltaValue
    boolean firstTime -> firstTime
    java.lang.Object getValue(float) -> getValue
    com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet clone() -> clone
    float getFloatValue(float) -> getFloatValue
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator -> com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator:
    java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet -> com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet:
    int firstValue -> firstValue
    int lastValue -> lastValue
    int deltaValue -> deltaValue
    boolean firstTime -> firstTime
    java.lang.Object getValue(float) -> getValue
    com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet clone() -> clone
    int getIntValue(float) -> getIntValue
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe -> com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe:
    float mFraction -> mFraction
    java.lang.Class mValueType -> mValueType
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    boolean mHasValue -> mHasValue
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofInt(float,int) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofInt(float) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float,float) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofObject(float,java.lang.Object) -> ofObject
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofObject(float) -> ofObject
    boolean hasValue() -> hasValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    float getFraction() -> getFraction
    void setFraction(float) -> setFraction
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    java.lang.Class getType() -> getType
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> clone
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe -> com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe:
    float mValue -> mValue
    float getFloatValue() -> getFloatValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe -> com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe:
    int mValue -> mValue
    int getIntValue() -> getIntValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe -> com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe:
    java.lang.Object mValue -> mValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet -> com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet:
    int mNumKeyframes -> mNumKeyframes
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe mFirstKeyframe -> mFirstKeyframe
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe mLastKeyframe -> mLastKeyframe
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    java.util.ArrayList mKeyframes -> mKeyframes
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator mEvaluator -> mEvaluator
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofInt(int[]) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofFloat(float[]) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofKeyframe(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofObject(java.lang.Object[]) -> ofObject
    void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> clone
    java.lang.Object getValue(float) -> getValue
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator -> com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator:
    boolean DBG -> DBG
    java.lang.Object mTarget -> mTarget
    java.lang.String mPropertyName -> mPropertyName
    void setPropertyName(java.lang.String) -> setPropertyName
    java.lang.String getPropertyName() -> getPropertyName
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[]) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[]) -> ofPropertyValuesHolder
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    void start() -> start
    void initAnimation() -> initAnimation
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator setDuration(long) -> setDuration
    java.lang.Object getTarget() -> getTarget
    void setTarget(java.lang.Object) -> setTarget
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void animateValue(float) -> animateValue
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator clone() -> clone
    java.lang.String toString() -> toString
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long) -> setDuration
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder -> com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder:
    java.lang.String mPropertyName -> mPropertyName
    java.lang.reflect.Method mSetter -> mSetter
    java.lang.reflect.Method mGetter -> mGetter
    java.lang.Class mValueType -> mValueType
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet mKeyframeSet -> mKeyframeSet
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> sIntEvaluator
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> sFloatEvaluator
    java.lang.Class[] FLOAT_VARIANTS -> FLOAT_VARIANTS
    java.lang.Class[] INTEGER_VARIANTS -> INTEGER_VARIANTS
    java.lang.Class[] DOUBLE_VARIANTS -> DOUBLE_VARIANTS
    java.util.HashMap sSetterPropertyMap -> sSetterPropertyMap
    java.util.HashMap sGetterPropertyMap -> sGetterPropertyMap
    java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock -> mPropertyMapLock
    java.lang.Object[] mTmpValueArray -> mTmpValueArray
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator mEvaluator -> mEvaluator
    java.lang.Object mAnimatedValue -> mAnimatedValue
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofInt(java.lang.String,int[]) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofObject(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setKeyframes(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[]) -> setKeyframes
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class) -> getPropertyFunction
    java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class) -> setupSetterOrGetter
    void setupSetter(java.lang.Class) -> setupSetter
    void setupGetter(java.lang.Class) -> setupGetter
    void setupSetterAndGetter(java.lang.Object) -> setupSetterAndGetter
    void setupValue(java.lang.Object,com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe) -> setupValue
    void setupStartValue(java.lang.Object) -> setupStartValue
    void setupEndValue(java.lang.Object) -> setupEndValue
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    void init() -> init
    void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    void calculateValue(float) -> calculateValue
    void setPropertyName(java.lang.String) -> setPropertyName
    java.lang.String getPropertyName() -> getPropertyName
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    java.lang.String toString() -> toString
    java.lang.String getMethodName(java.lang.String,java.lang.String) -> getMethodName
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder -> com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder:
    com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet mFloatKeyframeSet -> mFloatKeyframeSet
    float mFloatAnimatedValue -> mFloatAnimatedValue
    void setFloatValues(float[]) -> setFloatValues
    void calculateValue(float) -> calculateValue
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    void setupSetter(java.lang.Class) -> setupSetter
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder -> com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder:
    com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet mIntKeyframeSet -> mIntKeyframeSet
    int mIntAnimatedValue -> mIntAnimatedValue
    void setIntValues(int[]) -> setIntValues
    void calculateValue(float) -> calculateValue
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    void setupSetter(java.lang.Class) -> setupSetter
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator -> com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator:
    long DEFAULT_FRAME_DELAY -> DEFAULT_FRAME_DELAY
    int ANIMATION_START -> ANIMATION_START
    int ANIMATION_FRAME -> ANIMATION_FRAME
    int STOPPED -> STOPPED
    int RUNNING -> RUNNING
    int SEEKED -> SEEKED
    long mStartTime -> mStartTime
    long mSeekTime -> mSeekTime
    java.lang.ThreadLocal sAnimationHandler -> sAnimationHandler
    java.lang.ThreadLocal sAnimations -> sAnimations
    java.lang.ThreadLocal sPendingAnimations -> sPendingAnimations
    java.lang.ThreadLocal sDelayedAnims -> sDelayedAnims
    java.lang.ThreadLocal sEndingAnims -> sEndingAnims
    java.lang.ThreadLocal sReadyAnims -> sReadyAnims
    android.view.animation.Interpolator sDefaultInterpolator -> sDefaultInterpolator
    boolean mPlayingBackwards -> mPlayingBackwards
    int mCurrentIteration -> mCurrentIteration
    float mCurrentFraction -> mCurrentFraction
    boolean mStartedDelay -> mStartedDelay
    long mDelayStartTime -> mDelayStartTime
    int mPlayingState -> mPlayingState
    boolean mRunning -> mRunning
    boolean mStarted -> mStarted
    boolean mInitialized -> mInitialized
    long mDuration -> mDuration
    long mStartDelay -> mStartDelay
    long sFrameDelay -> sFrameDelay
    int mRepeatCount -> mRepeatCount
    int mRepeatMode -> mRepeatMode
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    java.util.ArrayList mUpdateListeners -> mUpdateListeners
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[] mValues -> mValues
    java.util.HashMap mValuesMap -> mValuesMap
    int RESTART -> RESTART
    int REVERSE -> REVERSE
    int INFINITE -> INFINITE
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofInt(int[]) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofFloat(float[]) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofPropertyValuesHolder(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[]) -> ofPropertyValuesHolder
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofObject(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[]) -> setValues
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[] getValues() -> getValues
    void initAnimation() -> initAnimation
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    void setCurrentPlayTime(long) -> setCurrentPlayTime
    long getCurrentPlayTime() -> getCurrentPlayTime
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    long getFrameDelay() -> getFrameDelay
    void setFrameDelay(long) -> setFrameDelay
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    java.lang.Object getAnimatedValue(java.lang.String) -> getAnimatedValue
    void setRepeatCount(int) -> setRepeatCount
    int getRepeatCount() -> getRepeatCount
    void setRepeatMode(int) -> setRepeatMode
    int getRepeatMode() -> getRepeatMode
    void addUpdateListener(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener) -> addUpdateListener
    void removeAllUpdateListeners() -> removeAllUpdateListeners
    void removeUpdateListener(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener) -> removeUpdateListener
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    void start(boolean) -> start
    void start() -> start
    void cancel() -> cancel
    void end() -> end
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    void reverse() -> reverse
    void endAnimation() -> endAnimation
    void startAnimation() -> startAnimation
    boolean delayedAnimationFrame(long) -> delayedAnimationFrame
    boolean animationFrame(long) -> animationFrame
    float getAnimatedFraction() -> getAnimatedFraction
    void animateValue(float) -> animateValue
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone() -> clone
    int getCurrentAnimationsCount() -> getCurrentAnimationsCount
    void clearAllAnimations() -> clearAllAnimations
    java.lang.String toString() -> toString
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    java.lang.ThreadLocal access$2() -> access$2
    java.lang.ThreadLocal access$3() -> access$3
    java.lang.ThreadLocal access$4() -> access$4
    long access$5(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> access$5
    void access$6(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> access$6
    java.lang.ThreadLocal access$7() -> access$7
    java.lang.ThreadLocal access$8() -> access$8
    boolean access$9(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,long) -> access$9
    void access$10(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,boolean) -> access$10
    void access$11(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> access$11
    long access$12() -> access$12
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$1 -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$1:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$2 -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$2:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$3 -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$3:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$4 -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$4:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$5 -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$5:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler:
    void handleMessage(android.os.Message) -> handleMessage
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener:
    void onAnimationUpdate(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> onAnimationUpdate
com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup -> com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> mProxy
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy -> com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy:
    boolean NEEDS_PROXY -> NEEDS_PROXY
    java.util.WeakHashMap PROXIES -> PROXIES
    java.lang.ref.WeakReference mView -> mView
    float mAlpha -> mAlpha
    float mScaleX -> mScaleX
    float mScaleY -> mScaleY
    float mTranslationX -> mTranslationX
    float mTranslationY -> mTranslationY
    android.graphics.RectF mBefore -> mBefore
    android.graphics.RectF mAfter -> mAfter
    android.graphics.Matrix mTempMatrix -> mTempMatrix
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View) -> wrap
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getScaleX() -> getScaleX
    void setScaleX(float) -> setScaleX
    float getScaleY() -> getScaleY
    void setScaleY(float) -> setScaleY
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
    void prepareForUpdate() -> prepareForUpdate
    void invalidateAfterUpdate() -> invalidateAfterUpdate
    void computeRect(android.graphics.RectF,android.view.View) -> computeRect
    void transformMatrix(android.graphics.Matrix,android.view.View) -> transformMatrix
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    void reset() -> reset
com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout -> com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> mProxy
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView -> com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> mProxy
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout -> com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> mProxy
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
com.actionbarsherlock.internal.view.ActionProviderWrapper -> com.actionbarsherlock.internal.view.ActionProviderWrapper:
    com.actionbarsherlock.view.ActionProvider mProvider -> mProvider
    com.actionbarsherlock.view.ActionProvider unwrap() -> unwrap
    android.view.View onCreateActionView() -> onCreateActionView
    boolean hasSubMenu() -> hasSubMenu
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
com.actionbarsherlock.internal.view.StandaloneActionMode -> com.actionbarsherlock.internal.view.StandaloneActionMode:
    android.content.Context mContext -> mContext
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> mContextView
    com.actionbarsherlock.view.ActionMode$Callback mCallback -> mCallback
    java.lang.ref.WeakReference mCustomView -> mCustomView
    boolean mFinished -> mFinished
    boolean mFocusable -> mFocusable
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setTitle(int) -> setTitle
    void setSubtitle(int) -> setSubtitle
    void setCustomView(android.view.View) -> setCustomView
    void invalidate() -> invalidate
    void finish() -> finish
    com.actionbarsherlock.view.Menu getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onCloseSubMenu
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onMenuModeChange
    boolean isUiFocusable() -> isUiFocusable
com.actionbarsherlock.internal.view.View_HasStateListenerSupport -> com.actionbarsherlock.internal.view.View_HasStateListenerSupport:
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> addOnAttachStateChangeListener
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> removeOnAttachStateChangeListener
com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener -> com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener:
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.actionbarsherlock.internal.view.menu.ActionMenu -> com.actionbarsherlock.internal.view.menu.ActionMenu:
    android.content.Context mContext -> mContext
    boolean mIsQwerty -> mIsQwerty
    java.util.ArrayList mItems -> mItems
    android.content.Context getContext() -> getContext
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> addIntentOptions
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    void clear() -> clear
    void close() -> close
    int findItemIndex(int) -> findItemIndex
    com.actionbarsherlock.view.MenuItem findItem(int) -> findItem
    com.actionbarsherlock.view.MenuItem getItem(int) -> getItem
    boolean hasVisibleItems() -> hasVisibleItems
    com.actionbarsherlock.internal.view.menu.ActionMenuItem findItemWithShortcut(int,android.view.KeyEvent) -> findItemWithShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void removeGroup(int) -> removeGroup
    void removeItem(int) -> removeItem
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setQwertyMode(boolean) -> setQwertyMode
    int size() -> size
com.actionbarsherlock.internal.view.menu.ActionMenuItem -> com.actionbarsherlock.internal.view.menu.ActionMenuItem:
    int mId -> mId
    int mGroup -> mGroup
    int mOrdering -> mOrdering
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mTitleCondensed -> mTitleCondensed
    android.content.Intent mIntent -> mIntent
    char mShortcutNumericChar -> mShortcutNumericChar
    char mShortcutAlphabeticChar -> mShortcutAlphabeticChar
    android.graphics.drawable.Drawable mIconDrawable -> mIconDrawable
    android.content.Context mContext -> mContext
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mClickListener -> mClickListener
    int mFlags -> mFlags
    int CHECKABLE -> CHECKABLE
    int CHECKED -> CHECKED
    int EXCLUSIVE -> EXCLUSIVE
    int HIDDEN -> HIDDEN
    int ENABLED -> ENABLED
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    int getGroupId() -> getGroupId
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.content.Intent getIntent() -> getIntent
    int getItemId() -> getItemId
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    char getNumericShortcut() -> getNumericShortcut
    int getOrder() -> getOrder
    com.actionbarsherlock.view.SubMenu getSubMenu() -> getSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    boolean hasSubMenu() -> hasSubMenu
    boolean isCheckable() -> isCheckable
    boolean isChecked() -> isChecked
    boolean isEnabled() -> isEnabled
    boolean isVisible() -> isVisible
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> setCheckable
    com.actionbarsherlock.internal.view.menu.ActionMenuItem setExclusiveCheckable(boolean) -> setExclusiveCheckable
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> setChecked
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> setEnabled
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem setIcon(int) -> setIcon
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> setIntent
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> setShortcut
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitle(int) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> setVisible
    boolean invoke() -> invoke
    void setShowAsAction(int) -> setShowAsAction
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.View getActionView() -> getActionView
    com.actionbarsherlock.view.MenuItem setActionView(int) -> setActionView
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> getActionProvider
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> setActionProvider
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
com.actionbarsherlock.internal.view.menu.ActionMenuItemView -> com.actionbarsherlock.internal.view.menu.ActionMenuItemView:
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItemData -> mItemData
    java.lang.CharSequence mTitle -> mTitle
    com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> mItemInvoker
    android.widget.ImageButton mImageButton -> mImageButton
    com.actionbarsherlock.internal.widget.CapitalizingButton mTextButton -> mTextButton
    boolean mAllowTextWithIcon -> mAllowTextWithIcon
    boolean mExpandedFormat -> mExpandedFormat
    int mMinWidth -> mMinWidth
    java.util.Set mListeners -> mListeners
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> addOnAttachStateChangeListener
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> removeOnAttachStateChangeListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> initialize
    void setEnabled(boolean) -> setEnabled
    void onClick(android.view.View) -> onClick
    void setItemInvoker(com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setExpandedFormat(boolean) -> setExpandedFormat
    void updateTextButtonVisibility() -> updateTextButtonVisibility
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean hasText() -> hasText
    void setShortcut(boolean,char) -> setShortcut
    void setTitle(java.lang.CharSequence) -> setTitle
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean showsIcon() -> showsIcon
    boolean needsDividerBefore() -> needsDividerBefore
    boolean needsDividerAfter() -> needsDividerAfter
    boolean onLongClick(android.view.View) -> onLongClick
    void onMeasure(int,int) -> onMeasure
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter:
    android.view.View mOverflowButton -> mOverflowButton
    boolean mReserveOverflow -> mReserveOverflow
    boolean mReserveOverflowSet -> mReserveOverflowSet
    int mWidthLimit -> mWidthLimit
    int mActionItemWidthLimit -> mActionItemWidthLimit
    int mMaxItems -> mMaxItems
    boolean mMaxItemsSet -> mMaxItemsSet
    boolean mStrictWidthLimit -> mStrictWidthLimit
    boolean mWidthLimitSet -> mWidthLimitSet
    boolean mExpandedActionViewsExclusive -> mExpandedActionViewsExclusive
    int mMinCellSize -> mMinCellSize
    android.util.SparseBooleanArray mActionButtonGroups -> mActionButtonGroups
    android.view.View mScrapActionButtonView -> mScrapActionButtonView
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup mOverflowPopup -> mOverflowPopup
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> mActionButtonPopup
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> mPostedOpenRunnable
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> mPopupPresenterCallback
    int mOpenSubMenuId -> mOpenSubMenuId
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    boolean reserveOverflow(android.content.Context) -> reserveOverflow
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setWidthLimit(int,boolean) -> setWidthLimit
    void setReserveOverflow(boolean) -> setReserveOverflow
    void setItemLimit(int) -> setItemLimit
    void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> bindItemView
    boolean shouldIncludeItem(int,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> shouldIncludeItem
    void updateMenuView(boolean) -> updateMenuView
    boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    android.view.View findViewForItem(com.actionbarsherlock.view.MenuItem) -> findViewForItem
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean dismissPopupMenus() -> dismissPopupMenus
    boolean hideSubMenus() -> hideSubMenus
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowReserved() -> isOverflowReserved
    boolean flagActionItems() -> flagActionItems
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup access$0(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> access$0
    void access$1(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup) -> access$1
    android.view.View access$2(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> access$2
    void access$3(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu) -> access$3
    void access$4(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable) -> access$4
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> this$0
    void onDismiss() -> onDismiss
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$HasPermanentMenuKey -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$HasPermanentMenuKey:
    boolean get(android.content.Context) -> get
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup mPopup -> mPopup
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton:
    java.util.Set mListeners -> mListeners
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> this$0
    boolean performClick() -> performClick
    boolean needsDividerBefore() -> needsDividerBefore
    boolean needsDividerAfter() -> needsDividerAfter
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> addOnAttachStateChangeListener
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> removeOnAttachStateChangeListener
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> this$0
    void onDismiss() -> onDismiss
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> this$0
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onOpenSubMenu
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState:
    int openSubMenuId -> openSubMenuId
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1 -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.view.menu.ActionMenuView -> com.actionbarsherlock.internal.view.menu.ActionMenuView:
    boolean IS_FROYO -> IS_FROYO
    int MIN_CELL_SIZE -> MIN_CELL_SIZE
    int GENERATED_ITEM_PADDING -> GENERATED_ITEM_PADDING
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    boolean mReserveOverflow -> mReserveOverflow
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter mPresenter -> mPresenter
    boolean mFormatItems -> mFormatItems
    int mFormatItemsWidth -> mFormatItemsWidth
    int mMinCellSize -> mMinCellSize
    int mGeneratedItemPadding -> mGeneratedItemPadding
    boolean mFirst -> mFirst
    void setPresenter(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> setPresenter
    boolean isExpandedFormat() -> isExpandedFormat
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onMeasureExactFormat(int,int) -> onMeasureExactFormat
    int measureChildForCells(android.view.View,int,int,int,int) -> measureChildForCells
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean isOverflowReserved() -> isOverflowReserved
    void setOverflowReserved(boolean) -> setOverflowReserved
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> invokeItem
    int getWindowAnimations() -> getWindowAnimations
    void initialize(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initialize
    boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
com.actionbarsherlock.internal.view.menu.ActionMenuView$ActionMenuChildView -> com.actionbarsherlock.internal.view.menu.ActionMenuView$ActionMenuChildView:
    boolean needsDividerBefore() -> needsDividerBefore
    boolean needsDividerAfter() -> needsDividerAfter
com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams -> com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams:
    boolean isOverflowButton -> isOverflowButton
    int cellsUsed -> cellsUsed
    int extraPixels -> extraPixels
    boolean expandable -> expandable
    boolean preventEdgeOffset -> preventEdgeOffset
    boolean expanded -> expanded
com.actionbarsherlock.internal.view.menu.BaseMenuPresenter -> com.actionbarsherlock.internal.view.menu.BaseMenuPresenter:
    boolean IS_HONEYCOMB -> IS_HONEYCOMB
    android.content.Context mSystemContext -> mSystemContext
    android.content.Context mContext -> mContext
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    android.view.LayoutInflater mSystemInflater -> mSystemInflater
    android.view.LayoutInflater mInflater -> mInflater
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mCallback -> mCallback
    int mMenuLayoutRes -> mMenuLayoutRes
    int mItemLayoutRes -> mItemLayoutRes
    com.actionbarsherlock.internal.view.menu.MenuView mMenuView -> mMenuView
    int mId -> mId
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void addItemView(android.view.View,int) -> addItemView
    boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setCallback
    com.actionbarsherlock.internal.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> bindItemView
    boolean shouldIncludeItem(int,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> shouldIncludeItem
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    void setId(int) -> setId
com.actionbarsherlock.internal.view.menu.ListMenuItemView -> com.actionbarsherlock.internal.view.menu.ListMenuItemView:
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItemData -> mItemData
    android.widget.ImageView mIconView -> mIconView
    android.widget.RadioButton mRadioButton -> mRadioButton
    android.widget.TextView mTitleView -> mTitleView
    android.widget.CheckBox mCheckBox -> mCheckBox
    android.widget.TextView mShortcutView -> mShortcutView
    android.graphics.drawable.Drawable mBackground -> mBackground
    int mTextAppearance -> mTextAppearance
    android.content.Context mTextAppearanceContext -> mTextAppearanceContext
    boolean mPreserveIconSpacing -> mPreserveIconSpacing
    android.view.LayoutInflater mInflater -> mInflater
    boolean mForceShowIcon -> mForceShowIcon
    android.content.Context mContext -> mContext
    void onFinishInflate() -> onFinishInflate
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> initialize
    void setForceShowIcon(boolean) -> setForceShowIcon
    void setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void onMeasure(int,int) -> onMeasure
    void insertIconView() -> insertIconView
    void insertRadioButton() -> insertRadioButton
    void insertCheckBox() -> insertCheckBox
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    boolean showsIcon() -> showsIcon
    android.view.LayoutInflater getInflater() -> getInflater
com.actionbarsherlock.internal.view.menu.MenuBuilder -> com.actionbarsherlock.internal.view.menu.MenuBuilder:
    java.lang.String PRESENTER_KEY -> PRESENTER_KEY
    java.lang.String ACTION_VIEW_STATES_KEY -> ACTION_VIEW_STATES_KEY
    java.lang.String EXPANDED_ACTION_VIEW_ID -> EXPANDED_ACTION_VIEW_ID
    int[] sCategoryToOrder -> sCategoryToOrder
    android.content.Context mContext -> mContext
    android.content.res.Resources mResources -> mResources
    boolean mQwertyMode -> mQwertyMode
    boolean mShortcutsVisible -> mShortcutsVisible
    com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback mCallback -> mCallback
    java.util.ArrayList mItems -> mItems
    java.util.ArrayList mVisibleItems -> mVisibleItems
    boolean mIsVisibleItemsStale -> mIsVisibleItemsStale
    java.util.ArrayList mActionItems -> mActionItems
    java.util.ArrayList mNonActionItems -> mNonActionItems
    boolean mIsActionItemsStale -> mIsActionItemsStale
    int mDefaultShowAsAction -> mDefaultShowAsAction
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> mCurrentMenuInfo
    java.lang.CharSequence mHeaderTitle -> mHeaderTitle
    android.graphics.drawable.Drawable mHeaderIcon -> mHeaderIcon
    android.view.View mHeaderView -> mHeaderView
    boolean mPreventDispatchingItemsChanged -> mPreventDispatchingItemsChanged
    boolean mItemsChangedWhileDispatchPrevented -> mItemsChangedWhileDispatchPrevented
    boolean mOptionalIconsVisible -> mOptionalIconsVisible
    boolean mIsClosing -> mIsClosing
    java.util.ArrayList mTempShortcutItemList -> mTempShortcutItemList
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> mPresenters
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mExpandedItem -> mExpandedItem
    com.actionbarsherlock.internal.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    void addMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter) -> addMenuPresenter
    void removeMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter) -> removeMenuPresenter
    void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    boolean dispatchSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> dispatchSubMenuSelected
    void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    void savePresenterStates(android.os.Bundle) -> savePresenterStates
    void restorePresenterStates(android.os.Bundle) -> restorePresenterStates
    void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback) -> setCallback
    com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> add
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void removeItemAtInt(int,boolean) -> removeItemAtInt
    void removeItemAt(int) -> removeItemAt
    void clearAll() -> clearAll
    void clear() -> clear
    void setExclusiveItemChecked(com.actionbarsherlock.view.MenuItem) -> setExclusiveItemChecked
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    com.actionbarsherlock.view.MenuItem findItem(int) -> findItem
    int findItemIndex(int) -> findItemIndex
    int findGroupIndex(int) -> findGroupIndex
    int findGroupIndex(int,int) -> findGroupIndex
    int size() -> size
    com.actionbarsherlock.view.MenuItem getItem(int) -> getItem
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    void setQwertyMode(boolean) -> setQwertyMode
    int getOrdering(int) -> getOrdering
    boolean isQwertyMode() -> isQwertyMode
    void setShortcutsVisible(boolean) -> setShortcutsVisible
    void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    boolean isShortcutsVisible() -> isShortcutsVisible
    android.content.res.Resources getResources() -> getResources
    android.content.Context getContext() -> getContext
    boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> dispatchMenuItemSelected
    void changeMenuMode() -> changeMenuMode
    int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    com.actionbarsherlock.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performItemAction(com.actionbarsherlock.view.MenuItem,int) -> performItemAction
    void close(boolean) -> close
    void close() -> close
    void onItemsChanged(boolean) -> onItemsChanged
    void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
    void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    void onItemVisibleChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> onItemVisibleChanged
    void onItemActionRequestChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    java.util.ArrayList getVisibleItems() -> getVisibleItems
    void flagActionItems() -> flagActionItems
    java.util.ArrayList getActionItems() -> getActionItems
    java.util.ArrayList getNonActionItems() -> getNonActionItems
    void clearHeader() -> clearHeader
    void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    android.view.View getHeaderView() -> getHeaderView
    com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setCurrentMenuInfo
    void setOptionalIconsVisible(boolean) -> setOptionalIconsVisible
    boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap) -> bindNativeOverflow
com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback -> com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback:
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onMenuModeChange
com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker -> com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker:
    boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> invokeItem
com.actionbarsherlock.internal.view.menu.MenuItemImpl -> com.actionbarsherlock.internal.view.menu.MenuItemImpl:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_MASK -> SHOW_AS_ACTION_MASK
    int mId -> mId
    int mGroup -> mGroup
    int mCategoryOrder -> mCategoryOrder
    int mOrdering -> mOrdering
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mTitleCondensed -> mTitleCondensed
    android.content.Intent mIntent -> mIntent
    char mShortcutNumericChar -> mShortcutNumericChar
    char mShortcutAlphabeticChar -> mShortcutAlphabeticChar
    android.graphics.drawable.Drawable mIconDrawable -> mIconDrawable
    int mIconResId -> mIconResId
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    com.actionbarsherlock.internal.view.menu.SubMenuBuilder mSubMenu -> mSubMenu
    java.lang.Runnable mItemCallback -> mItemCallback
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mClickListener -> mClickListener
    int mFlags -> mFlags
    int CHECKABLE -> CHECKABLE
    int CHECKED -> CHECKED
    int EXCLUSIVE -> EXCLUSIVE
    int HIDDEN -> HIDDEN
    int ENABLED -> ENABLED
    int IS_ACTION -> IS_ACTION
    int mShowAsAction -> mShowAsAction
    android.view.View mActionView -> mActionView
    com.actionbarsherlock.view.ActionProvider mActionProvider -> mActionProvider
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener mOnActionExpandListener -> mOnActionExpandListener
    boolean mIsActionViewExpanded -> mIsActionViewExpanded
    int NO_ICON -> NO_ICON
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> mMenuInfo
    java.lang.String sPrependShortcutLabel -> sPrependShortcutLabel
    java.lang.String sEnterShortcutLabel -> sEnterShortcutLabel
    java.lang.String sDeleteShortcutLabel -> sDeleteShortcutLabel
    java.lang.String sSpaceShortcutLabel -> sSpaceShortcutLabel
    boolean invoke() -> invoke
    boolean isEnabled() -> isEnabled
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> setEnabled
    int getGroupId() -> getGroupId
    int getItemId() -> getItemId
    int getOrder() -> getOrder
    int getOrdering() -> getOrdering
    android.content.Intent getIntent() -> getIntent
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> setIntent
    java.lang.Runnable getCallback() -> getCallback
    com.actionbarsherlock.view.MenuItem setCallback(java.lang.Runnable) -> setCallback
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getNumericShortcut() -> getNumericShortcut
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> setShortcut
    char getShortcut() -> getShortcut
    java.lang.String getShortcutLabel() -> getShortcutLabel
    boolean shouldShowShortcut() -> shouldShowShortcut
    com.actionbarsherlock.view.SubMenu getSubMenu() -> getSubMenu
    boolean hasSubMenu() -> hasSubMenu
    void setSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> setSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleForItemView(com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> getTitleForItemView
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.graphics.drawable.Drawable getIcon() -> getIcon
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem setIcon(int) -> setIcon
    boolean isCheckable() -> isCheckable
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> setCheckable
    void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    boolean isExclusiveCheckable() -> isExclusiveCheckable
    boolean isChecked() -> isChecked
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> setChecked
    void setCheckedInt(boolean) -> setCheckedInt
    boolean isVisible() -> isVisible
    boolean setVisibleInt(boolean) -> setVisibleInt
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> setVisible
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    java.lang.String toString() -> toString
    void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setMenuInfo
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void actionFormatChanged() -> actionFormatChanged
    boolean shouldShowIcon() -> shouldShowIcon
    boolean isActionButton() -> isActionButton
    boolean requestsActionButton() -> requestsActionButton
    boolean requiresActionButton() -> requiresActionButton
    void setIsActionButton(boolean) -> setIsActionButton
    boolean showsTextAsAction() -> showsTextAsAction
    void setShowAsAction(int) -> setShowAsAction
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> setActionView
    com.actionbarsherlock.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> getActionProvider
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> setActionProvider
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    void setActionViewExpanded(boolean) -> setActionViewExpanded
    boolean isActionViewExpanded() -> isActionViewExpanded
com.actionbarsherlock.internal.view.menu.MenuItemWrapper -> com.actionbarsherlock.internal.view.menu.MenuItemWrapper:
    android.view.MenuItem mNativeItem -> mNativeItem
    com.actionbarsherlock.view.SubMenu mSubMenu -> mSubMenu
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mMenuItemClickListener -> mMenuItemClickListener
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener mActionExpandListener -> mActionExpandListener
    android.view.MenuItem$OnActionExpandListener mNativeActionExpandListener -> mNativeActionExpandListener
    int getItemId() -> getItemId
    int getGroupId() -> getGroupId
    int getOrder() -> getOrder
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitle() -> getTitle
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem setIcon(int) -> setIcon
    android.graphics.drawable.Drawable getIcon() -> getIcon
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> setShortcut
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    char getNumericShortcut() -> getNumericShortcut
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> setCheckable
    boolean isCheckable() -> isCheckable
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    boolean hasSubMenu() -> hasSubMenu
    com.actionbarsherlock.view.SubMenu getSubMenu() -> getSubMenu
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void setShowAsAction(int) -> setShowAsAction
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> setActionView
    com.actionbarsherlock.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> setActionProvider
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> getActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener access$0(com.actionbarsherlock.internal.view.menu.MenuItemWrapper) -> access$0
com.actionbarsherlock.internal.view.menu.MenuItemWrapper$1 -> com.actionbarsherlock.internal.view.menu.MenuItemWrapper$1:
    com.actionbarsherlock.internal.view.menu.MenuItemWrapper this$0 -> this$0
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
com.actionbarsherlock.internal.view.menu.MenuPopupHelper -> com.actionbarsherlock.internal.view.menu.MenuPopupHelper:
    int ITEM_LAYOUT -> ITEM_LAYOUT
    android.content.Context mContext -> mContext
    android.view.LayoutInflater mInflater -> mInflater
    com.actionbarsherlock.internal.widget.IcsListPopupWindow mPopup -> mPopup
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    int mPopupMaxWidth -> mPopupMaxWidth
    android.view.View mAnchorView -> mAnchorView
    boolean mOverflowOnly -> mOverflowOnly
    android.view.ViewTreeObserver mTreeObserver -> mTreeObserver
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter mAdapter -> mAdapter
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> mPresenterCallback
    boolean mForceShowIcon -> mForceShowIcon
    android.view.ViewGroup mMeasureParent -> mMeasureParent
    void setAnchorView(android.view.View) -> setAnchorView
    void setForceShowIcon(boolean) -> setForceShowIcon
    void show() -> show
    boolean tryShow() -> tryShow
    void dismiss() -> dismiss
    void onDismiss() -> onDismiss
    boolean isShowing() -> isShowing
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    int measureContentWidth(android.widget.ListAdapter) -> measureContentWidth
    void onGlobalLayout() -> onGlobalLayout
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$0(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> access$0
    android.view.LayoutInflater access$1(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> access$1
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$2(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> access$2
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter access$3(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> access$3
com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver -> com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver:
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper this$0 -> this$0
    void onChanged() -> onChanged
com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter -> com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mAdapterMenu -> mAdapterMenu
    int mExpandedIndex -> mExpandedIndex
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper this$0 -> this$0
    int getCount() -> getCount
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> findExpandedIndex
    java.lang.Object getItem(int) -> getItem
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$1(com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter) -> access$1
com.actionbarsherlock.internal.view.menu.MenuPresenter -> com.actionbarsherlock.internal.view.menu.MenuPresenter:
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback -> com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback:
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onOpenSubMenu
com.actionbarsherlock.internal.view.menu.MenuView -> com.actionbarsherlock.internal.view.menu.MenuView:
    void initialize(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initialize
    int getWindowAnimations() -> getWindowAnimations
com.actionbarsherlock.internal.view.menu.MenuView$ItemView -> com.actionbarsherlock.internal.view.menu.MenuView$ItemView:
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> initialize
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void setTitle(java.lang.CharSequence) -> setTitle
    void setEnabled(boolean) -> setEnabled
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    boolean showsIcon() -> showsIcon
com.actionbarsherlock.internal.view.menu.MenuWrapper -> com.actionbarsherlock.internal.view.menu.MenuWrapper:
    android.view.Menu mNativeMenu -> mNativeMenu
    java.util.WeakHashMap mNativeMap -> mNativeMap
    android.view.Menu unwrap() -> unwrap
    com.actionbarsherlock.view.MenuItem addInternal(android.view.MenuItem) -> addInternal
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> add
    com.actionbarsherlock.view.SubMenu addInternal(android.view.SubMenu) -> addInternal
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void clear() -> clear
    void invalidate() -> invalidate
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    com.actionbarsherlock.view.MenuItem findItem(int) -> findItem
    com.actionbarsherlock.view.MenuItem findItem(android.view.MenuItem) -> findItem
    int size() -> size
    com.actionbarsherlock.view.MenuItem getItem(int) -> getItem
    void close() -> close
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    void setQwertyMode(boolean) -> setQwertyMode
com.actionbarsherlock.internal.view.menu.SubMenuBuilder -> com.actionbarsherlock.internal.view.menu.SubMenuBuilder:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mParentMenu -> mParentMenu
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItem -> mItem
    void setQwertyMode(boolean) -> setQwertyMode
    boolean isQwertyMode() -> isQwertyMode
    void setShortcutsVisible(boolean) -> setShortcutsVisible
    boolean isShortcutsVisible() -> isShortcutsVisible
    com.actionbarsherlock.view.Menu getParentMenu() -> getParentMenu
    com.actionbarsherlock.view.MenuItem getItem() -> getItem
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback) -> setCallback
    com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> dispatchMenuItemSelected
    com.actionbarsherlock.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.SubMenu setIcon(int) -> setIcon
    com.actionbarsherlock.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
com.actionbarsherlock.internal.view.menu.SubMenuWrapper -> com.actionbarsherlock.internal.view.menu.SubMenuWrapper:
    android.view.SubMenu mNativeSubMenu -> mNativeSubMenu
    com.actionbarsherlock.view.MenuItem mItem -> mItem
    com.actionbarsherlock.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    com.actionbarsherlock.view.SubMenu setIcon(int) -> setIcon
    com.actionbarsherlock.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem getItem() -> getItem
com.actionbarsherlock.internal.widget.AbsActionBarView -> com.actionbarsherlock.internal.widget.AbsActionBarView:
    com.actionbarsherlock.internal.view.menu.ActionMenuView mMenuView -> mMenuView
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter mActionMenuPresenter -> mActionMenuPresenter
    com.actionbarsherlock.internal.widget.ActionBarContainer mSplitView -> mSplitView
    boolean mSplitActionBar -> mSplitActionBar
    boolean mSplitWhenNarrow -> mSplitWhenNarrow
    int mContentHeight -> mContentHeight
    android.content.Context mContext -> mContext
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mVisibilityAnim -> mVisibilityAnim
    com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener -> mVisAnimListener
    android.view.animation.Interpolator sAlphaInterpolator -> sAlphaInterpolator
    int FADE_DURATION -> FADE_DURATION
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
    void setContentHeight(int) -> setContentHeight
    int getContentHeight() -> getContentHeight
    void setSplitView(com.actionbarsherlock.internal.widget.ActionBarContainer) -> setSplitView
    int getAnimatedVisibility() -> getAnimatedVisibility
    void animateToVisibility(int) -> animateToVisibility
    void setVisibility(int) -> setVisibility
    boolean showOverflowMenu() -> showOverflowMenu
    void postShowOverflowMenu() -> postShowOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowReserved() -> isOverflowReserved
    void dismissPopupMenus() -> dismissPopupMenus
    int measureChildView(android.view.View,int,int,int) -> measureChildView
    int positionChild(android.view.View,int,int,int) -> positionChild
    int positionChildInverse(android.view.View,int,int,int) -> positionChildInverse
com.actionbarsherlock.internal.widget.AbsActionBarView$1 -> com.actionbarsherlock.internal.widget.AbsActionBarView$1:
    com.actionbarsherlock.internal.widget.AbsActionBarView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener -> com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener:
    boolean mCanceled -> mCanceled
    int mFinalVisibility -> mFinalVisibility
    com.actionbarsherlock.internal.widget.AbsActionBarView this$0 -> this$0
    com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(int) -> withFinalVisibility
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
com.actionbarsherlock.internal.widget.ActionBarContainer -> com.actionbarsherlock.internal.widget.ActionBarContainer:
    boolean mIsTransitioning -> mIsTransitioning
    android.view.View mTabContainer -> mTabContainer
    com.actionbarsherlock.internal.widget.ActionBarView mActionBarView -> mActionBarView
    android.graphics.drawable.Drawable mBackground -> mBackground
    android.graphics.drawable.Drawable mStackedBackground -> mStackedBackground
    android.graphics.drawable.Drawable mSplitBackground -> mSplitBackground
    boolean mIsSplit -> mIsSplit
    boolean mIsStacked -> mIsStacked
    void onFinishInflate() -> onFinishInflate
    void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    void setTransitioning(boolean) -> setTransitioning
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    void setTabContainer(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> setTabContainer
    android.view.View getTabContainer() -> getTabContainer
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
com.actionbarsherlock.internal.widget.ActionBarContextView -> com.actionbarsherlock.internal.widget.ActionBarContextView:
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mSubtitle -> mSubtitle
    com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout mClose -> mClose
    android.view.View mCustomView -> mCustomView
    android.widget.LinearLayout mTitleLayout -> mTitleLayout
    android.widget.TextView mTitleView -> mTitleView
    android.widget.TextView mSubtitleView -> mSubtitleView
    int mTitleStyleRes -> mTitleStyleRes
    int mSubtitleStyleRes -> mSubtitleStyleRes
    android.graphics.drawable.Drawable mSplitBackground -> mSplitBackground
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentAnimation -> mCurrentAnimation
    boolean mAnimateInOnLayout -> mAnimateInOnLayout
    int mAnimationMode -> mAnimationMode
    int ANIMATE_IDLE -> ANIMATE_IDLE
    int ANIMATE_IN -> ANIMATE_IN
    int ANIMATE_OUT -> ANIMATE_OUT
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setContentHeight(int) -> setContentHeight
    void setCustomView(android.view.View) -> setCustomView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void initTitle() -> initTitle
    void initForMode(com.actionbarsherlock.view.ActionMode) -> initForMode
    void closeMode() -> closeMode
    void finishAnimation() -> finishAnimation
    void killMode() -> killMode
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation() -> makeInAnimation
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeOutAnimation() -> makeOutAnimation
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
com.actionbarsherlock.internal.widget.ActionBarContextView$1 -> com.actionbarsherlock.internal.widget.ActionBarContextView$1:
    com.actionbarsherlock.internal.widget.ActionBarContextView this$0 -> this$0
    com.actionbarsherlock.view.ActionMode val$mode -> val$mode
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView -> com.actionbarsherlock.internal.widget.ActionBarView:
    java.lang.String TAG -> TAG
    int DISPLAY_DEFAULT -> DISPLAY_DEFAULT
    int DISPLAY_RELAYOUT_MASK -> DISPLAY_RELAYOUT_MASK
    int DEFAULT_CUSTOM_GRAVITY -> DEFAULT_CUSTOM_GRAVITY
    int mNavigationMode -> mNavigationMode
    int mDisplayOptions -> mDisplayOptions
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mSubtitle -> mSubtitle
    android.graphics.drawable.Drawable mIcon -> mIcon
    android.graphics.drawable.Drawable mLogo -> mLogo
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView mHomeLayout -> mHomeLayout
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView mExpandedHomeLayout -> mExpandedHomeLayout
    android.widget.LinearLayout mTitleLayout -> mTitleLayout
    android.widget.TextView mTitleView -> mTitleView
    android.widget.TextView mSubtitleView -> mSubtitleView
    android.view.View mTitleUpView -> mTitleUpView
    com.actionbarsherlock.internal.widget.IcsSpinner mSpinner -> mSpinner
    com.actionbarsherlock.internal.widget.IcsLinearLayout mListNavLayout -> mListNavLayout
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mTabScrollView -> mTabScrollView
    android.view.View mCustomNavView -> mCustomNavView
    com.actionbarsherlock.internal.widget.IcsProgressBar mProgressView -> mProgressView
    com.actionbarsherlock.internal.widget.IcsProgressBar mIndeterminateProgressView -> mIndeterminateProgressView
    int mProgressBarPadding -> mProgressBarPadding
    int mItemPadding -> mItemPadding
    int mTitleStyleRes -> mTitleStyleRes
    int mSubtitleStyleRes -> mSubtitleStyleRes
    int mProgressStyle -> mProgressStyle
    int mIndeterminateProgressStyle -> mIndeterminateProgressStyle
    boolean mUserTitle -> mUserTitle
    boolean mIncludeTabs -> mIncludeTabs
    boolean mIsCollapsable -> mIsCollapsable
    boolean mIsCollapsed -> mIsCollapsed
    com.actionbarsherlock.internal.view.menu.MenuBuilder mOptionsMenu -> mOptionsMenu
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> mContextView
    com.actionbarsherlock.internal.view.menu.ActionMenuItem mLogoNavItem -> mLogoNavItem
    android.widget.SpinnerAdapter mSpinnerAdapter -> mSpinnerAdapter
    com.actionbarsherlock.app.ActionBar$OnNavigationListener mCallback -> mCallback
    com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> mExpandedMenuPresenter
    android.view.View mExpandedActionView -> mExpandedActionView
    com.actionbarsherlock.view.Window$Callback mWindowCallback -> mWindowCallback
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener mNavItemSelectedListener -> mNavItemSelectedListener
    android.view.View$OnClickListener mExpandedActionViewUpListener -> mExpandedActionViewUpListener
    android.view.View$OnClickListener mUpClickListener -> mUpClickListener
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setWindowCallback(com.actionbarsherlock.view.Window$Callback) -> setWindowCallback
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void initProgress() -> initProgress
    void initIndeterminateProgress() -> initIndeterminateProgress
    void setSplitActionBar(boolean) -> setSplitActionBar
    boolean isSplitActionBar() -> isSplitActionBar
    boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    void setEmbeddedTabView(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    void setCallback(com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setCallback
    void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setMenu
    void configPresenters(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> configPresenters
    boolean hasExpandedActionView() -> hasExpandedActionView
    void collapseActionView() -> collapseActionView
    void setCustomNavigationView(android.view.View) -> setCustomNavigationView
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void setTitleImpl(java.lang.CharSequence) -> setTitleImpl
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    void setDisplayOptions(int) -> setDisplayOptions
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setIcon(int) -> setIcon
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setLogo(int) -> setLogo
    void setNavigationMode(int) -> setNavigationMode
    void setDropdownAdapter(android.widget.SpinnerAdapter) -> setDropdownAdapter
    android.widget.SpinnerAdapter getDropdownAdapter() -> getDropdownAdapter
    void setDropdownSelectedPosition(int) -> setDropdownSelectedPosition
    int getDropdownSelectedPosition() -> getDropdownSelectedPosition
    android.view.View getCustomNavigationView() -> getCustomNavigationView
    int getNavigationMode() -> getNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void onFinishInflate() -> onFinishInflate
    void initTitle() -> initTitle
    void setContextView(com.actionbarsherlock.internal.widget.ActionBarContextView) -> setContextView
    void setCollapsable(boolean) -> setCollapsable
    boolean isCollapsed() -> isCollapsed
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    com.actionbarsherlock.app.ActionBar$OnNavigationListener access$0(com.actionbarsherlock.internal.widget.ActionBarView) -> access$0
    com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter access$1(com.actionbarsherlock.internal.widget.ActionBarView) -> access$1
    com.actionbarsherlock.internal.view.menu.ActionMenuItem access$2(com.actionbarsherlock.internal.widget.ActionBarView) -> access$2
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$3(com.actionbarsherlock.internal.widget.ActionBarView) -> access$3
    android.graphics.drawable.Drawable access$4(com.actionbarsherlock.internal.widget.ActionBarView) -> access$4
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$5(com.actionbarsherlock.internal.widget.ActionBarView) -> access$5
    android.widget.LinearLayout access$6(com.actionbarsherlock.internal.widget.ActionBarView) -> access$6
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$7(com.actionbarsherlock.internal.widget.ActionBarView) -> access$7
    com.actionbarsherlock.internal.widget.IcsSpinner access$8(com.actionbarsherlock.internal.widget.ActionBarView) -> access$8
    android.view.View access$9(com.actionbarsherlock.internal.widget.ActionBarView) -> access$9
    int access$10(com.actionbarsherlock.internal.widget.ActionBarView) -> access$10
    void access$11(com.actionbarsherlock.internal.widget.ActionBarView) -> access$11
    int access$12(com.actionbarsherlock.internal.widget.ActionBarView) -> access$12
com.actionbarsherlock.internal.widget.ActionBarView$1 -> com.actionbarsherlock.internal.widget.ActionBarView$1:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> this$0
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> onNothingSelected
com.actionbarsherlock.internal.widget.ActionBarView$2 -> com.actionbarsherlock.internal.widget.ActionBarView$2:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView$3 -> com.actionbarsherlock.internal.widget.ActionBarView$3:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter -> com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mCurrentExpandedItem -> mCurrentExpandedItem
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> this$0
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
com.actionbarsherlock.internal.widget.ActionBarView$HomeView -> com.actionbarsherlock.internal.widget.ActionBarView$HomeView:
    android.view.View mUpView -> mUpView
    android.widget.ImageView mIconView -> mIconView
    int mUpWidth -> mUpWidth
    void setUp(boolean) -> setUp
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    void onFinishInflate() -> onFinishInflate
    int getLeftOffset() -> getLeftOffset
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
com.actionbarsherlock.internal.widget.ActionBarView$SavedState -> com.actionbarsherlock.internal.widget.ActionBarView$SavedState:
    int expandedMenuItemId -> expandedMenuItemId
    boolean isOverflowOpen -> isOverflowOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1 -> com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1:
    com.actionbarsherlock.internal.widget.ActionBarView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.actionbarsherlock.internal.widget.ActionBarView$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.CapitalizingButton -> com.actionbarsherlock.internal.widget.CapitalizingButton:
    boolean SANS_ICE_CREAM -> SANS_ICE_CREAM
    boolean IS_GINGERBREAD -> IS_GINGERBREAD
    int[] R_styleable_Button -> R_styleable_Button
    int R_styleable_Button_textAppearance -> R_styleable_Button_textAppearance
    int[] R_styleable_TextAppearance -> R_styleable_TextAppearance
    int R_styleable_TextAppearance_textAllCaps -> R_styleable_TextAppearance_textAllCaps
    boolean mAllCaps -> mAllCaps
    void setTextCompat(java.lang.CharSequence) -> setTextCompat
com.actionbarsherlock.internal.widget.CapitalizingTextView -> com.actionbarsherlock.internal.widget.CapitalizingTextView:
    boolean SANS_ICE_CREAM -> SANS_ICE_CREAM
    boolean IS_GINGERBREAD -> IS_GINGERBREAD
    int[] R_styleable_TextView -> R_styleable_TextView
    int R_styleable_TextView_textAllCaps -> R_styleable_TextView_textAllCaps
    boolean mAllCaps -> mAllCaps
    void setTextCompat(java.lang.CharSequence) -> setTextCompat
com.actionbarsherlock.internal.widget.CollapsibleActionViewWrapper -> com.actionbarsherlock.internal.widget.CollapsibleActionViewWrapper:
    com.actionbarsherlock.view.CollapsibleActionView child -> child
    void onActionViewExpanded() -> onActionViewExpanded
    void onActionViewCollapsed() -> onActionViewCollapsed
    android.view.View unwrap() -> unwrap
com.actionbarsherlock.internal.widget.IcsAbsSpinner -> com.actionbarsherlock.internal.widget.IcsAbsSpinner:
    boolean IS_HONEYCOMB -> IS_HONEYCOMB
    android.widget.SpinnerAdapter mAdapter -> mAdapter
    int mHeightMeasureSpec -> mHeightMeasureSpec
    int mWidthMeasureSpec -> mWidthMeasureSpec
    boolean mBlockLayoutRequests -> mBlockLayoutRequests
    int mSelectionLeftPadding -> mSelectionLeftPadding
    int mSelectionTopPadding -> mSelectionTopPadding
    int mSelectionRightPadding -> mSelectionRightPadding
    int mSelectionBottomPadding -> mSelectionBottomPadding
    android.graphics.Rect mSpinnerPadding -> mSpinnerPadding
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin mRecycler -> mRecycler
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.graphics.Rect mTouchFrame -> mTouchFrame
    void initAbsSpinner() -> initAbsSpinner
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    void resetList() -> resetList
    void onMeasure(int,int) -> onMeasure
    int getChildHeight(android.view.View) -> getChildHeight
    int getChildWidth(android.view.View) -> getChildWidth
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void recycleAllViews() -> recycleAllViews
    void setSelection(int,boolean) -> setSelection
    void setSelection(int) -> setSelection
    void setSelectionInt(int,boolean) -> setSelectionInt
    void layout(int,boolean) -> layout
    android.view.View getSelectedView() -> getSelectedView
    void requestLayout() -> requestLayout
    android.widget.SpinnerAdapter getAdapter() -> getAdapter
    int getCount() -> getCount
    int pointToPosition(int,int) -> pointToPosition
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.widget.Adapter getAdapter() -> getAdapter
    void access$2(com.actionbarsherlock.internal.widget.IcsAbsSpinner,android.view.View,boolean) -> access$2
com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin -> com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin:
    android.util.SparseArray mScrapHeap -> mScrapHeap
    com.actionbarsherlock.internal.widget.IcsAbsSpinner this$0 -> this$0
    void put(int,android.view.View) -> put
    android.view.View get(int) -> get
    void clear() -> clear
com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState -> com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState:
    long selectedId -> selectedId
    int position -> position
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1 -> com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1:
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.IcsAdapterView -> com.actionbarsherlock.internal.widget.IcsAdapterView:
    int ITEM_VIEW_TYPE_IGNORE -> ITEM_VIEW_TYPE_IGNORE
    int ITEM_VIEW_TYPE_HEADER_OR_FOOTER -> ITEM_VIEW_TYPE_HEADER_OR_FOOTER
    int mFirstPosition -> mFirstPosition
    int mSpecificTop -> mSpecificTop
    int mSyncPosition -> mSyncPosition
    long mSyncRowId -> mSyncRowId
    long mSyncHeight -> mSyncHeight
    boolean mNeedSync -> mNeedSync
    int mSyncMode -> mSyncMode
    int mLayoutHeight -> mLayoutHeight
    int SYNC_SELECTED_POSITION -> SYNC_SELECTED_POSITION
    int SYNC_FIRST_POSITION -> SYNC_FIRST_POSITION
    int SYNC_MAX_DURATION_MILLIS -> SYNC_MAX_DURATION_MILLIS
    boolean mInLayout -> mInLayout
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener mOnItemSelectedListener -> mOnItemSelectedListener
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> mOnItemClickListener
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener mOnItemLongClickListener -> mOnItemLongClickListener
    boolean mDataChanged -> mDataChanged
    int mNextSelectedPosition -> mNextSelectedPosition
    long mNextSelectedRowId -> mNextSelectedRowId
    int mSelectedPosition -> mSelectedPosition
    long mSelectedRowId -> mSelectedRowId
    android.view.View mEmptyView -> mEmptyView
    int mItemCount -> mItemCount
    int mOldItemCount -> mOldItemCount
    int INVALID_POSITION -> INVALID_POSITION
    long INVALID_ROW_ID -> INVALID_ROW_ID
    int mOldSelectedPosition -> mOldSelectedPosition
    long mOldSelectedRowId -> mOldSelectedRowId
    boolean mDesiredFocusableState -> mDesiredFocusableState
    boolean mDesiredFocusableInTouchModeState -> mDesiredFocusableInTouchModeState
    com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier mSelectionNotifier -> mSelectionNotifier
    boolean mBlockLayoutRequests -> mBlockLayoutRequests
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    android.widget.AdapterView$OnItemClickListener getOnItemClickListener() -> getOnItemClickListener
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    void setOnItemLongClickListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener getOnItemLongClickListener() -> getOnItemLongClickListener
    void setOnItemSelectedListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener getOnItemSelectedListener() -> getOnItemSelectedListener
    android.widget.Adapter getAdapter() -> getAdapter
    void setAdapter(android.widget.Adapter) -> setAdapter
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeAllViews() -> removeAllViews
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.view.View getSelectedView() -> getSelectedView
    java.lang.Object getSelectedItem() -> getSelectedItem
    int getCount() -> getCount
    int getPositionForView(android.view.View) -> getPositionForView
    int getFirstVisiblePosition() -> getFirstVisiblePosition
    int getLastVisiblePosition() -> getLastVisiblePosition
    void setSelection(int) -> setSelection
    void setEmptyView(android.view.View) -> setEmptyView
    android.view.View getEmptyView() -> getEmptyView
    boolean isInFilterMode() -> isInFilterMode
    void setFocusable(boolean) -> setFocusable
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void checkFocus() -> checkFocus
    void updateEmptyStatus(boolean) -> updateEmptyStatus
    java.lang.Object getItemAtPosition(int) -> getItemAtPosition
    long getItemIdAtPosition(int) -> getItemIdAtPosition
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void selectionChanged() -> selectionChanged
    void fireOnSelected() -> fireOnSelected
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean isScrollableForAccessibility() -> isScrollableForAccessibility
    boolean canAnimate() -> canAnimate
    void handleDataChanged() -> handleDataChanged
    void checkSelectionChanged() -> checkSelectionChanged
    int findSyncPosition() -> findSyncPosition
    int lookForSelectablePosition(int,boolean) -> lookForSelectablePosition
    void setSelectedPositionInt(int) -> setSelectedPositionInt
    void setNextSelectedPositionInt(int) -> setNextSelectedPositionInt
    void rememberSyncState() -> rememberSyncState
    void access$0(com.actionbarsherlock.internal.widget.IcsAdapterView,android.os.Parcelable) -> access$0
    android.os.Parcelable access$1(com.actionbarsherlock.internal.widget.IcsAdapterView) -> access$1
    void access$2(com.actionbarsherlock.internal.widget.IcsAdapterView) -> access$2
com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterContextMenuInfo -> com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterContextMenuInfo:
    android.view.View targetView -> targetView
    int position -> position
    long id -> id
com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver -> com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver:
    android.os.Parcelable mInstanceState -> mInstanceState
    com.actionbarsherlock.internal.widget.IcsAdapterView this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
    void clearSavedState() -> clearSavedState
com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener -> com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener:
    boolean onItemLongClick(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> onItemLongClick
com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener -> com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener:
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> onNothingSelected
com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier -> com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier:
    com.actionbarsherlock.internal.widget.IcsAdapterView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.IcsColorDrawable -> com.actionbarsherlock.internal.widget.IcsColorDrawable:
    int color -> color
    android.graphics.Paint paint -> paint
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
com.actionbarsherlock.internal.widget.IcsLinearLayout -> com.actionbarsherlock.internal.widget.IcsLinearLayout:
    int[] R_styleable_LinearLayout -> R_styleable_LinearLayout
    int LinearLayout_divider -> LinearLayout_divider
    int LinearLayout_showDividers -> LinearLayout_showDividers
    int LinearLayout_dividerPadding -> LinearLayout_dividerPadding
    int SHOW_DIVIDER_NONE -> SHOW_DIVIDER_NONE
    int SHOW_DIVIDER_BEGINNING -> SHOW_DIVIDER_BEGINNING
    int SHOW_DIVIDER_MIDDLE -> SHOW_DIVIDER_MIDDLE
    int SHOW_DIVIDER_END -> SHOW_DIVIDER_END
    android.graphics.drawable.Drawable mDivider -> mDivider
    int mDividerWidth -> mDividerWidth
    int mDividerHeight -> mDividerHeight
    int mShowDividers -> mShowDividers
    int mDividerPadding -> mDividerPadding
    void setShowDividers(int) -> setShowDividers
    int getShowDividers() -> getShowDividers
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void setDividerPadding(int) -> setDividerPadding
    int getDividerPadding() -> getDividerPadding
    int getDividerWidth() -> getDividerWidth
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
com.actionbarsherlock.internal.widget.IcsListPopupWindow -> com.actionbarsherlock.internal.widget.IcsListPopupWindow:
    int EXPAND_LIST_TIMEOUT -> EXPAND_LIST_TIMEOUT
    android.content.Context mContext -> mContext
    com.actionbarsherlock.internal.widget.PopupWindowCompat mPopup -> mPopup
    android.widget.ListAdapter mAdapter -> mAdapter
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView mDropDownList -> mDropDownList
    int mDropDownHeight -> mDropDownHeight
    int mDropDownWidth -> mDropDownWidth
    int mDropDownHorizontalOffset -> mDropDownHorizontalOffset
    int mDropDownVerticalOffset -> mDropDownVerticalOffset
    boolean mDropDownVerticalOffsetSet -> mDropDownVerticalOffsetSet
    int mListItemExpandMaximum -> mListItemExpandMaximum
    android.view.View mPromptView -> mPromptView
    int mPromptPosition -> mPromptPosition
    android.database.DataSetObserver mObserver -> mObserver
    android.view.View mDropDownAnchorView -> mDropDownAnchorView
    android.graphics.drawable.Drawable mDropDownListHighlight -> mDropDownListHighlight
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> mItemClickListener
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> mItemSelectedListener
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> mResizePopupRunnable
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> mTouchInterceptor
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener mScrollListener -> mScrollListener
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider mHideSelector -> mHideSelector
    android.os.Handler mHandler -> mHandler
    android.graphics.Rect mTempRect -> mTempRect
    boolean mModal -> mModal
    int POSITION_PROMPT_ABOVE -> POSITION_PROMPT_ABOVE
    int POSITION_PROMPT_BELOW -> POSITION_PROMPT_BELOW
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setPromptPosition(int) -> setPromptPosition
    void setModal(boolean) -> setModal
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setAnchorView(android.view.View) -> setAnchorView
    void setHorizontalOffset(int) -> setHorizontalOffset
    void setVerticalOffset(int) -> setVerticalOffset
    void setContentWidth(int) -> setContentWidth
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void show() -> show
    void dismiss() -> dismiss
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void setInputMethodMode(int) -> setInputMethodMode
    void setSelection(int) -> setSelection
    void clearListSelection() -> clearListSelection
    boolean isShowing() -> isShowing
    boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    android.widget.ListView getListView() -> getListView
    int buildDropDown() -> buildDropDown
    int getMaxAvailableHeight(android.view.View,int,boolean) -> getMaxAvailableHeight
    int measureHeightOfChildren(int,int,int,int,int) -> measureHeightOfChildren
    void measureScrapChild(android.view.View,int,int) -> measureScrapChild
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$0
    int access$1(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$1
    com.actionbarsherlock.internal.widget.PopupWindowCompat access$2(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$2
    android.os.Handler access$3(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$3
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable access$4(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$4
    boolean access$5(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$5
com.actionbarsherlock.internal.widget.IcsListPopupWindow$1 -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$1:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView:
    boolean mListSelectionHidden -> mListSelectionHidden
    boolean mHijackFocus -> mHijackFocus
    boolean isInTouchMode() -> isInTouchMode
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isFocused() -> isFocused
    boolean hasFocus() -> hasFocus
    void access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView,boolean) -> access$0
com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.IcsProgressBar -> com.actionbarsherlock.internal.widget.IcsProgressBar:
    boolean IS_HONEYCOMB -> IS_HONEYCOMB
    int MAX_LEVEL -> MAX_LEVEL
    int ANIMATION_RESOLUTION -> ANIMATION_RESOLUTION
    int TIMEOUT_SEND_ACCESSIBILITY_EVENT -> TIMEOUT_SEND_ACCESSIBILITY_EVENT
    int[] ProgressBar -> ProgressBar
    int ProgressBar_maxWidth -> ProgressBar_maxWidth
    int ProgressBar_maxHeight -> ProgressBar_maxHeight
    int ProgressBar_max -> ProgressBar_max
    int ProgressBar_progress -> ProgressBar_progress
    int ProgressBar_secondaryProgress -> ProgressBar_secondaryProgress
    int ProgressBar_indeterminate -> ProgressBar_indeterminate
    int ProgressBar_indeterminateOnly -> ProgressBar_indeterminateOnly
    int ProgressBar_indeterminateDrawable -> ProgressBar_indeterminateDrawable
    int ProgressBar_progressDrawable -> ProgressBar_progressDrawable
    int ProgressBar_indeterminateDuration -> ProgressBar_indeterminateDuration
    int ProgressBar_indeterminateBehavior -> ProgressBar_indeterminateBehavior
    int ProgressBar_minWidth -> ProgressBar_minWidth
    int ProgressBar_minHeight -> ProgressBar_minHeight
    int ProgressBar_interpolator -> ProgressBar_interpolator
    int ProgressBar_animationResolution -> ProgressBar_animationResolution
    int mMinWidth -> mMinWidth
    int mMaxWidth -> mMaxWidth
    int mMinHeight -> mMinHeight
    int mMaxHeight -> mMaxHeight
    int mProgress -> mProgress
    int mSecondaryProgress -> mSecondaryProgress
    int mMax -> mMax
    int mBehavior -> mBehavior
    int mDuration -> mDuration
    boolean mIndeterminate -> mIndeterminate
    boolean mOnlyIndeterminate -> mOnlyIndeterminate
    android.view.animation.Transformation mTransformation -> mTransformation
    android.view.animation.AlphaAnimation mAnimation -> mAnimation
    android.graphics.drawable.Drawable mIndeterminateDrawable -> mIndeterminateDrawable
    int mIndeterminateRealLeft -> mIndeterminateRealLeft
    int mIndeterminateRealTop -> mIndeterminateRealTop
    android.graphics.drawable.Drawable mProgressDrawable -> mProgressDrawable
    android.graphics.drawable.Drawable mCurrentDrawable -> mCurrentDrawable
    android.graphics.Bitmap mSampleTile -> mSampleTile
    boolean mNoInvalidate -> mNoInvalidate
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable mRefreshProgressRunnable -> mRefreshProgressRunnable
    long mUiThreadId -> mUiThreadId
    boolean mShouldStartAnimationDrawable -> mShouldStartAnimationDrawable
    long mLastDrawTime -> mLastDrawTime
    boolean mInDrawing -> mInDrawing
    int mAnimationResolution -> mAnimationResolution
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> mAccessibilityManager
    com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender mAccessibilityEventSender -> mAccessibilityEventSender
    android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> tileify
    android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> tileifyIndeterminate
    void initProgressBar() -> initProgressBar
    boolean isIndeterminate() -> isIndeterminate
    void setIndeterminate(boolean) -> setIndeterminate
    android.graphics.drawable.Drawable getIndeterminateDrawable() -> getIndeterminateDrawable
    void setIndeterminateDrawable(android.graphics.drawable.Drawable) -> setIndeterminateDrawable
    android.graphics.drawable.Drawable getProgressDrawable() -> getProgressDrawable
    void setProgressDrawable(android.graphics.drawable.Drawable) -> setProgressDrawable
    android.graphics.drawable.Drawable getCurrentDrawable() -> getCurrentDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void postInvalidate() -> postInvalidate
    void doRefreshProgress(int,int,boolean,boolean) -> doRefreshProgress
    void onProgressRefresh(float,boolean) -> onProgressRefresh
    void refreshProgress(int,int,boolean) -> refreshProgress
    void setProgress(int) -> setProgress
    void setProgress(int,boolean) -> setProgress
    void setSecondaryProgress(int) -> setSecondaryProgress
    int getProgress() -> getProgress
    int getSecondaryProgress() -> getSecondaryProgress
    int getMax() -> getMax
    void setMax(int) -> setMax
    void incrementProgressBy(int) -> incrementProgressBy
    void incrementSecondaryProgressBy(int) -> incrementSecondaryProgressBy
    void startAnimation() -> startAnimation
    void stopAnimation() -> stopAnimation
    void setInterpolator(android.content.Context,int) -> setInterpolator
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setVisibility(int) -> setVisibility
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void updateDrawableBounds(int,int) -> updateDrawableBounds
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void drawableStateChanged() -> drawableStateChanged
    void updateDrawableState() -> updateDrawableState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void scheduleAccessibilityEventSender() -> scheduleAccessibilityEventSender
    void access$0(com.actionbarsherlock.internal.widget.IcsProgressBar,int,int,boolean,boolean) -> access$0
    void access$1(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable) -> access$1
com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender -> com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender:
    com.actionbarsherlock.internal.widget.IcsProgressBar this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable -> com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable:
    int mId -> mId
    int mProgress -> mProgress
    boolean mFromUser -> mFromUser
    com.actionbarsherlock.internal.widget.IcsProgressBar this$0 -> this$0
    void run() -> run
    void setup(int,int,boolean) -> setup
com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState -> com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState:
    int progress -> progress
    int secondaryProgress -> secondaryProgress
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1 -> com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1:
    com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.IcsSpinner -> com.actionbarsherlock.internal.widget.IcsSpinner:
    int MAX_ITEMS_MEASURED -> MAX_ITEMS_MEASURED
    int MODE_DROPDOWN -> MODE_DROPDOWN
    com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup mPopup -> mPopup
    com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter mTempAdapter -> mTempAdapter
    int mDropDownWidth -> mDropDownWidth
    int mGravity -> mGravity
    boolean mDisableChildrenWhenDisabled -> mDisableChildrenWhenDisabled
    android.graphics.Rect mTempRect -> mTempRect
    void setEnabled(boolean) -> setEnabled
    void setGravity(int) -> setGravity
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    int getBaseline() -> getBaseline
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layout(int,boolean) -> layout
    android.view.View makeAndAddView(int) -> makeAndAddView
    void setUpChild(android.view.View) -> setUpChild
    boolean performClick() -> performClick
    void onClick(android.content.DialogInterface,int) -> onClick
    void setPrompt(java.lang.CharSequence) -> setPrompt
    void setPromptId(int) -> setPromptId
    java.lang.CharSequence getPrompt() -> getPrompt
    int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> measureContentWidth
    android.graphics.Rect access$0(com.actionbarsherlock.internal.widget.IcsSpinner) -> access$0
com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter -> com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter:
    android.widget.SpinnerAdapter mAdapter -> mAdapter
    android.widget.ListAdapter mListAdapter -> mListAdapter
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    boolean hasStableIds() -> hasStableIds
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup -> com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup:
    java.lang.CharSequence mHintText -> mHintText
    android.widget.ListAdapter mAdapter -> mAdapter
    com.actionbarsherlock.internal.widget.IcsSpinner this$0 -> this$0
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    java.lang.CharSequence getHintText() -> getHintText
    void setPromptText(java.lang.CharSequence) -> setPromptText
    void show() -> show
    com.actionbarsherlock.internal.widget.IcsSpinner access$0(com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup) -> access$0
com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup$1 -> com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup$1:
    com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup this$1 -> this$1
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup -> com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup:
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void show() -> show
    void dismiss() -> dismiss
    boolean isShowing() -> isShowing
    void setPromptText(java.lang.CharSequence) -> setPromptText
    java.lang.CharSequence getHintText() -> getHintText
com.actionbarsherlock.internal.widget.IcsToast -> com.actionbarsherlock.internal.widget.IcsToast:
    int LENGTH_LONG -> LENGTH_LONG
    int LENGTH_SHORT -> LENGTH_SHORT
    java.lang.String TAG -> TAG
    android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int) -> makeText
    android.widget.Toast makeText(android.content.Context,int,int) -> makeText
    void setText(java.lang.CharSequence) -> setText
com.actionbarsherlock.internal.widget.IcsView -> com.actionbarsherlock.internal.widget.IcsView:
    int getMeasuredStateInt(android.view.View) -> getMeasuredStateInt
com.actionbarsherlock.internal.widget.PopupWindowCompat -> com.actionbarsherlock.internal.widget.PopupWindowCompat:
    java.lang.reflect.Field superListenerField -> superListenerField
    android.view.ViewTreeObserver$OnScrollChangedListener NOP -> NOP
    android.view.ViewTreeObserver$OnScrollChangedListener mSuperScrollListener -> mSuperScrollListener
    android.view.ViewTreeObserver mViewTreeObserver -> mViewTreeObserver
    void init() -> init
    void unregisterListener() -> unregisterListener
    void registerListener(android.view.View) -> registerListener
    void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    void update(android.view.View,int,int,int,int) -> update
    void update(android.view.View,int,int) -> update
    void showAtLocation(android.view.View,int,int,int) -> showAtLocation
    void dismiss() -> dismiss
com.actionbarsherlock.internal.widget.PopupWindowCompat$1 -> com.actionbarsherlock.internal.widget.PopupWindowCompat$1:
    void onScrollChanged() -> onScrollChanged
com.actionbarsherlock.internal.widget.ScrollingTabContainerView -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView:
    java.lang.Runnable mTabSelector -> mTabSelector
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener mTabClickListener -> mTabClickListener
    com.actionbarsherlock.internal.widget.IcsLinearLayout mTabLayout -> mTabLayout
    com.actionbarsherlock.internal.widget.IcsSpinner mTabSpinner -> mTabSpinner
    boolean mAllowCollapse -> mAllowCollapse
    android.view.LayoutInflater mInflater -> mInflater
    int mMaxTabWidth -> mMaxTabWidth
    int mContentHeight -> mContentHeight
    int mSelectedTabIndex -> mSelectedTabIndex
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mVisibilityAnim -> mVisibilityAnim
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener mVisAnimListener -> mVisAnimListener
    android.view.animation.Interpolator sAlphaInterpolator -> sAlphaInterpolator
    int FADE_DURATION -> FADE_DURATION
    void onMeasure(int,int) -> onMeasure
    boolean isCollapsed() -> isCollapsed
    void setAllowCollapse(boolean) -> setAllowCollapse
    void performCollapse() -> performCollapse
    boolean performExpand() -> performExpand
    void setTabSelected(int) -> setTabSelected
    void setContentHeight(int) -> setContentHeight
    com.actionbarsherlock.internal.widget.IcsLinearLayout createTabLayout() -> createTabLayout
    com.actionbarsherlock.internal.widget.IcsSpinner createSpinner() -> createSpinner
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void animateToVisibility(int) -> animateToVisibility
    void animateToTab(int) -> animateToTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView createTabView(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> createTabView
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean) -> addTab
    void updateTab(int) -> updateTab
    void removeTabAt(int) -> removeTabAt
    void removeAllTabs() -> removeAllTabs
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> onNothingSelected
    com.actionbarsherlock.internal.widget.IcsLinearLayout access$0(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> access$0
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView access$1(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean) -> access$1
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$1 -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$1:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> this$0
    android.view.View val$tabView -> val$tabView
    void run() -> run
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> this$0
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mParent -> mParent
    com.actionbarsherlock.app.ActionBar$Tab mTab -> mTab
    com.actionbarsherlock.internal.widget.CapitalizingTextView mTextView -> mTextView
    android.widget.ImageView mIconView -> mIconView
    android.view.View mCustomView -> mCustomView
    void init(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean) -> init
    void bindTab(com.actionbarsherlock.app.ActionBar$Tab) -> bindTab
    void onMeasure(int,int) -> onMeasure
    void update() -> update
    com.actionbarsherlock.app.ActionBar$Tab getTab() -> getTab
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener:
    boolean mCanceled -> mCanceled
    int mFinalVisibility -> mFinalVisibility
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> this$0
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener withFinalVisibility(int) -> withFinalVisibility
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
com.actionbarsherlock.internal.widget.TabsLinearLayout -> com.actionbarsherlock.internal.widget.TabsLinearLayout:
    int[] R_styleable_LinearLayout -> R_styleable_LinearLayout
    int LinearLayout_measureWithLargestChild -> LinearLayout_measureWithLargestChild
    boolean mUseLargestChild -> mUseLargestChild
    boolean isMeasureWithLargestChildEnabled() -> isMeasureWithLargestChildEnabled
    void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    void onMeasure(int,int) -> onMeasure
    void useLargestChildHorizontal() -> useLargestChildHorizontal
com.actionbarsherlock.view.ActionMode -> com.actionbarsherlock.view.ActionMode:
    java.lang.Object mTag -> mTag
    void setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setCustomView(android.view.View) -> setCustomView
    void invalidate() -> invalidate
    void finish() -> finish
    com.actionbarsherlock.view.Menu getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    boolean isUiFocusable() -> isUiFocusable
com.actionbarsherlock.view.ActionMode$Callback -> com.actionbarsherlock.view.ActionMode$Callback:
    boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(com.actionbarsherlock.view.ActionMode) -> onDestroyActionMode
com.actionbarsherlock.view.ActionProvider -> com.actionbarsherlock.view.ActionProvider:
    com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.view.View onCreateActionView() -> onCreateActionView
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener -> com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
com.actionbarsherlock.view.CollapsibleActionView -> com.actionbarsherlock.view.CollapsibleActionView:
    void onActionViewExpanded() -> onActionViewExpanded
    void onActionViewCollapsed() -> onActionViewCollapsed
com.actionbarsherlock.view.Menu -> com.actionbarsherlock.view.Menu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
    int NONE -> NONE
    int FIRST -> FIRST
    int CATEGORY_CONTAINER -> CATEGORY_CONTAINER
    int CATEGORY_SYSTEM -> CATEGORY_SYSTEM
    int CATEGORY_SECONDARY -> CATEGORY_SECONDARY
    int CATEGORY_ALTERNATIVE -> CATEGORY_ALTERNATIVE
    int FLAG_APPEND_TO_GROUP -> FLAG_APPEND_TO_GROUP
    int FLAG_PERFORM_NO_CLOSE -> FLAG_PERFORM_NO_CLOSE
    int FLAG_ALWAYS_PERFORM_CLOSE -> FLAG_ALWAYS_PERFORM_CLOSE
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> add
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void clear() -> clear
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    com.actionbarsherlock.view.MenuItem findItem(int) -> findItem
    int size() -> size
    com.actionbarsherlock.view.MenuItem getItem(int) -> getItem
    void close() -> close
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    void setQwertyMode(boolean) -> setQwertyMode
com.actionbarsherlock.view.MenuInflater -> com.actionbarsherlock.view.MenuInflater:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String XML_MENU -> XML_MENU
    java.lang.String XML_GROUP -> XML_GROUP
    java.lang.String XML_ITEM -> XML_ITEM
    int NO_ID -> NO_ID
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> ACTION_VIEW_CONSTRUCTOR_SIGNATURE
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE
    java.lang.Object[] mActionViewConstructorArguments -> mActionViewConstructorArguments
    java.lang.Object[] mActionProviderConstructorArguments -> mActionProviderConstructorArguments
    android.content.Context mContext -> mContext
    java.lang.Object mRealOwner -> mRealOwner
    void inflate(int,com.actionbarsherlock.view.Menu) -> inflate
    void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.actionbarsherlock.view.Menu) -> parseMenu
    android.content.Context access$0(com.actionbarsherlock.view.MenuInflater) -> access$0
    java.lang.Class[] access$1() -> access$1
    java.lang.Object[] access$2(com.actionbarsherlock.view.MenuInflater) -> access$2
    java.lang.Object access$3(com.actionbarsherlock.view.MenuInflater) -> access$3
    java.lang.Class[] access$4() -> access$4
    java.lang.Object[] access$5(com.actionbarsherlock.view.MenuInflater) -> access$5
com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener -> com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener:
    java.lang.Class[] PARAM_TYPES -> PARAM_TYPES
    java.lang.Object mRealOwner -> mRealOwner
    java.lang.reflect.Method mMethod -> mMethod
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> onMenuItemClick
com.actionbarsherlock.view.MenuInflater$MenuState -> com.actionbarsherlock.view.MenuInflater$MenuState:
    com.actionbarsherlock.view.Menu menu -> menu
    int groupId -> groupId
    int groupCategory -> groupCategory
    int groupOrder -> groupOrder
    int groupCheckable -> groupCheckable
    boolean groupVisible -> groupVisible
    boolean groupEnabled -> groupEnabled
    boolean itemAdded -> itemAdded
    int itemId -> itemId
    int itemCategoryOrder -> itemCategoryOrder
    java.lang.CharSequence itemTitle -> itemTitle
    java.lang.CharSequence itemTitleCondensed -> itemTitleCondensed
    int itemIconResId -> itemIconResId
    char itemAlphabeticShortcut -> itemAlphabeticShortcut
    char itemNumericShortcut -> itemNumericShortcut
    int itemCheckable -> itemCheckable
    boolean itemChecked -> itemChecked
    boolean itemVisible -> itemVisible
    boolean itemEnabled -> itemEnabled
    int itemShowAsAction -> itemShowAsAction
    int itemActionViewLayout -> itemActionViewLayout
    java.lang.String itemActionViewClassName -> itemActionViewClassName
    java.lang.String itemActionProviderClassName -> itemActionProviderClassName
    java.lang.String itemListenerMethodName -> itemListenerMethodName
    com.actionbarsherlock.view.ActionProvider itemActionProvider -> itemActionProvider
    int defaultGroupId -> defaultGroupId
    int defaultItemId -> defaultItemId
    int defaultItemCategory -> defaultItemCategory
    int defaultItemOrder -> defaultItemOrder
    int defaultItemCheckable -> defaultItemCheckable
    boolean defaultItemChecked -> defaultItemChecked
    boolean defaultItemVisible -> defaultItemVisible
    boolean defaultItemEnabled -> defaultItemEnabled
    com.actionbarsherlock.view.MenuInflater this$0 -> this$0
    void resetGroup() -> resetGroup
    void readGroup(android.util.AttributeSet) -> readGroup
    void readItem(android.util.AttributeSet) -> readItem
    char getShortcut(java.lang.String) -> getShortcut
    void setItem(com.actionbarsherlock.view.MenuItem) -> setItem
    void addItem() -> addItem
    com.actionbarsherlock.view.SubMenu addSubMenuItem() -> addSubMenuItem
    boolean hasAddedItem() -> hasAddedItem
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    com.actionbarsherlock.view.ActionProvider access$0(com.actionbarsherlock.view.MenuInflater$MenuState) -> access$0
com.actionbarsherlock.view.MenuItem -> com.actionbarsherlock.view.MenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    int getItemId() -> getItemId
    int getGroupId() -> getGroupId
    int getOrder() -> getOrder
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitle() -> getTitle
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem setIcon(int) -> setIcon
    android.graphics.drawable.Drawable getIcon() -> getIcon
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> setShortcut
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    char getNumericShortcut() -> getNumericShortcut
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> setCheckable
    boolean isCheckable() -> isCheckable
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    boolean hasSubMenu() -> hasSubMenu
    com.actionbarsherlock.view.SubMenu getSubMenu() -> getSubMenu
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void setShowAsAction(int) -> setShowAsAction
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> setActionView
    com.actionbarsherlock.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> setActionProvider
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> getActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
com.actionbarsherlock.view.MenuItem$OnActionExpandListener -> com.actionbarsherlock.view.MenuItem$OnActionExpandListener:
    boolean onMenuItemActionExpand(com.actionbarsherlock.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(com.actionbarsherlock.view.MenuItem) -> onMenuItemActionCollapse
com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener -> com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener:
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> onMenuItemClick
com.actionbarsherlock.view.SubMenu -> com.actionbarsherlock.view.SubMenu:
    com.actionbarsherlock.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    com.actionbarsherlock.view.SubMenu setIcon(int) -> setIcon
    com.actionbarsherlock.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem getItem() -> getItem
com.actionbarsherlock.view.Window -> com.actionbarsherlock.view.Window:
    long FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    long FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    long FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
    long FEATURE_NO_TITLE -> FEATURE_NO_TITLE
    long FEATURE_PROGRESS -> FEATURE_PROGRESS
    long FEATURE_INDETERMINATE_PROGRESS -> FEATURE_INDETERMINATE_PROGRESS
com.actionbarsherlock.view.Window$Callback -> com.actionbarsherlock.view.Window$Callback:
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
com.actionbarsherlock.widget.ActivityChooserModel -> com.actionbarsherlock.widget.ActivityChooserModel:
    boolean DEBUG -> DEBUG
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String TAG_HISTORICAL_RECORDS -> TAG_HISTORICAL_RECORDS
    java.lang.String TAG_HISTORICAL_RECORD -> TAG_HISTORICAL_RECORD
    java.lang.String ATTRIBUTE_ACTIVITY -> ATTRIBUTE_ACTIVITY
    java.lang.String ATTRIBUTE_TIME -> ATTRIBUTE_TIME
    java.lang.String ATTRIBUTE_WEIGHT -> ATTRIBUTE_WEIGHT
    java.lang.String DEFAULT_HISTORY_FILE_NAME -> DEFAULT_HISTORY_FILE_NAME
    int DEFAULT_HISTORY_MAX_LENGTH -> DEFAULT_HISTORY_MAX_LENGTH
    int DEFAULT_ACTIVITY_INFLATION -> DEFAULT_ACTIVITY_INFLATION
    float DEFAULT_HISTORICAL_RECORD_WEIGHT -> DEFAULT_HISTORICAL_RECORD_WEIGHT
    java.lang.String HISTORY_FILE_EXTENSION -> HISTORY_FILE_EXTENSION
    int INVALID_INDEX -> INVALID_INDEX
    java.lang.Object sRegistryLock -> sRegistryLock
    java.util.Map sDataModelRegistry -> sDataModelRegistry
    java.lang.Object mInstanceLock -> mInstanceLock
    java.util.List mActivites -> mActivites
    java.util.List mHistoricalRecords -> mHistoricalRecords
    android.content.Context mContext -> mContext
    java.lang.String mHistoryFileName -> mHistoryFileName
    android.content.Intent mIntent -> mIntent
    com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter mActivitySorter -> mActivitySorter
    int mHistoryMaxSize -> mHistoryMaxSize
    boolean mCanReadHistoricalData -> mCanReadHistoricalData
    boolean mReadShareHistoryCalled -> mReadShareHistoryCalled
    boolean mHistoricalRecordsChanged -> mHistoricalRecordsChanged
    android.os.Handler mHandler -> mHandler
    com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy -> mActivityChoserModelPolicy
    java.util.concurrent.Executor SERIAL_EXECUTOR -> SERIAL_EXECUTOR
    com.actionbarsherlock.widget.ActivityChooserModel get(android.content.Context,java.lang.String) -> get
    void setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    int getActivityCount() -> getActivityCount
    android.content.pm.ResolveInfo getActivity(int) -> getActivity
    int getActivityIndex(android.content.pm.ResolveInfo) -> getActivityIndex
    android.content.Intent chooseActivity(int) -> chooseActivity
    void setOnChooseActivityListener(com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener) -> setOnChooseActivityListener
    android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    void setDefaultActivity(int) -> setDefaultActivity
    void readHistoricalData() -> readHistoricalData
    void persistHistoricalData() -> persistHistoricalData
    void setActivitySorter(com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter) -> setActivitySorter
    void sortActivities() -> sortActivities
    void setHistoryMaxSize(int) -> setHistoryMaxSize
    int getHistoryMaxSize() -> getHistoryMaxSize
    int getHistorySize() -> getHistorySize
    boolean addHisoricalRecord(com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord) -> addHisoricalRecord
    void pruneExcessiveHistoricalRecordsLocked() -> pruneExcessiveHistoricalRecordsLocked
    void loadActivitiesLocked() -> loadActivitiesLocked
    android.content.Context access$0(com.actionbarsherlock.widget.ActivityChooserModel) -> access$0
    java.lang.String access$1(com.actionbarsherlock.widget.ActivityChooserModel) -> access$1
    java.lang.Object access$2(com.actionbarsherlock.widget.ActivityChooserModel) -> access$2
    java.util.List access$3(com.actionbarsherlock.widget.ActivityChooserModel) -> access$3
    void access$4(com.actionbarsherlock.widget.ActivityChooserModel,boolean) -> access$4
    android.os.Handler access$5(com.actionbarsherlock.widget.ActivityChooserModel) -> access$5
    void access$6(com.actionbarsherlock.widget.ActivityChooserModel) -> access$6
    void access$7(com.actionbarsherlock.widget.ActivityChooserModel) -> access$7
    java.lang.String access$8() -> access$8
com.actionbarsherlock.widget.ActivityChooserModel$ActivityChooserModelClient -> com.actionbarsherlock.widget.ActivityChooserModel$ActivityChooserModelClient:
    void setActivityChooserModel(com.actionbarsherlock.widget.ActivityChooserModel) -> setActivityChooserModel
com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo -> com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo:
    android.content.pm.ResolveInfo resolveInfo -> resolveInfo
    float weight -> weight
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> this$0
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo) -> compareTo
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter -> com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter:
    void sort(android.content.Intent,java.util.List,java.util.List) -> sort
com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter -> com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter:
    float WEIGHT_DECAY_COEFFICIENT -> WEIGHT_DECAY_COEFFICIENT
    java.util.Map mPackageNameToActivityMap -> mPackageNameToActivityMap
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> this$0
    void sort(android.content.Intent,java.util.List,java.util.List) -> sort
com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord -> com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord:
    android.content.ComponentName activity -> activity
    long time -> time
    float weight -> weight
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader -> com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader:
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> this$0
    void run() -> run
    com.actionbarsherlock.widget.ActivityChooserModel access$1(com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader) -> access$1
com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader$1 -> com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader$1:
    com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader this$1 -> this$1
    void run() -> run
com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister -> com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister:
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> this$0
    void run() -> run
com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener -> com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener:
    boolean onChooseActivity(com.actionbarsherlock.widget.ActivityChooserModel,android.content.Intent) -> onChooseActivity
com.actionbarsherlock.widget.ActivityChooserView -> com.actionbarsherlock.widget.ActivityChooserView:
    com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter mAdapter -> mAdapter
    com.actionbarsherlock.widget.ActivityChooserView$Callbacks mCallbacks -> mCallbacks
    com.actionbarsherlock.internal.widget.IcsLinearLayout mActivityChooserContent -> mActivityChooserContent
    android.graphics.drawable.Drawable mActivityChooserContentBackground -> mActivityChooserContentBackground
    android.widget.FrameLayout mExpandActivityOverflowButton -> mExpandActivityOverflowButton
    android.widget.ImageView mExpandActivityOverflowButtonImage -> mExpandActivityOverflowButtonImage
    android.widget.FrameLayout mDefaultActivityButton -> mDefaultActivityButton
    android.widget.ImageView mDefaultActivityButtonImage -> mDefaultActivityButtonImage
    int mListPopupMaxWidth -> mListPopupMaxWidth
    com.actionbarsherlock.view.ActionProvider mProvider -> mProvider
    android.database.DataSetObserver mModelDataSetOberver -> mModelDataSetOberver
    android.view.ViewTreeObserver$OnGlobalLayoutListener mOnGlobalLayoutListener -> mOnGlobalLayoutListener
    com.actionbarsherlock.internal.widget.IcsListPopupWindow mListPopupWindow -> mListPopupWindow
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> mOnDismissListener
    boolean mIsSelectingDefaultActivity -> mIsSelectingDefaultActivity
    int mInitialActivityCount -> mInitialActivityCount
    boolean mIsAttachedToWindow -> mIsAttachedToWindow
    int mDefaultActionButtonContentDescription -> mDefaultActionButtonContentDescription
    android.content.Context mContext -> mContext
    boolean IS_HONEYCOMB -> IS_HONEYCOMB
    void setActivityChooserModel(com.actionbarsherlock.widget.ActivityChooserModel) -> setActivityChooserModel
    void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable) -> setExpandActivityOverflowButtonDrawable
    void setExpandActivityOverflowButtonContentDescription(int) -> setExpandActivityOverflowButtonContentDescription
    void setProvider(com.actionbarsherlock.view.ActionProvider) -> setProvider
    boolean showPopup() -> showPopup
    void showPopupUnchecked(int) -> showPopupUnchecked
    boolean dismissPopup() -> dismissPopup
    boolean isShowingPopup() -> isShowingPopup
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    com.actionbarsherlock.widget.ActivityChooserModel getDataModel() -> getDataModel
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void setInitialActivityCount(int) -> setInitialActivityCount
    void setDefaultActionButtonContentDescription(int) -> setDefaultActionButtonContentDescription
    com.actionbarsherlock.internal.widget.IcsListPopupWindow getListPopupWindow() -> getListPopupWindow
    void updateAppearance() -> updateAppearance
    com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter access$0(com.actionbarsherlock.widget.ActivityChooserView) -> access$0
    com.actionbarsherlock.internal.widget.IcsListPopupWindow access$1(com.actionbarsherlock.widget.ActivityChooserView) -> access$1
    void access$2(com.actionbarsherlock.widget.ActivityChooserView,int) -> access$2
    boolean access$3(com.actionbarsherlock.widget.ActivityChooserView) -> access$3
    android.content.Context access$4(com.actionbarsherlock.widget.ActivityChooserView) -> access$4
    android.widget.FrameLayout access$5(com.actionbarsherlock.widget.ActivityChooserView) -> access$5
    android.widget.FrameLayout access$6(com.actionbarsherlock.widget.ActivityChooserView) -> access$6
    void access$7(com.actionbarsherlock.widget.ActivityChooserView,boolean) -> access$7
    int access$8(com.actionbarsherlock.widget.ActivityChooserView) -> access$8
    android.widget.PopupWindow$OnDismissListener access$9(com.actionbarsherlock.widget.ActivityChooserView) -> access$9
    android.database.DataSetObserver access$10(com.actionbarsherlock.widget.ActivityChooserView) -> access$10
    boolean access$11() -> access$11
    void access$12(com.actionbarsherlock.widget.ActivityChooserView) -> access$12
com.actionbarsherlock.widget.ActivityChooserView$1 -> com.actionbarsherlock.widget.ActivityChooserView$1:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.actionbarsherlock.widget.ActivityChooserView$2 -> com.actionbarsherlock.widget.ActivityChooserView$2:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
com.actionbarsherlock.widget.ActivityChooserView$3 -> com.actionbarsherlock.widget.ActivityChooserView$3:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> this$0
    void onChanged() -> onChanged
com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter -> com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter:
    int MAX_ACTIVITY_COUNT_UNLIMITED -> MAX_ACTIVITY_COUNT_UNLIMITED
    int MAX_ACTIVITY_COUNT_DEFAULT -> MAX_ACTIVITY_COUNT_DEFAULT
    int ITEM_VIEW_TYPE_ACTIVITY -> ITEM_VIEW_TYPE_ACTIVITY
    int ITEM_VIEW_TYPE_FOOTER -> ITEM_VIEW_TYPE_FOOTER
    int ITEM_VIEW_TYPE_COUNT -> ITEM_VIEW_TYPE_COUNT
    com.actionbarsherlock.widget.ActivityChooserModel mDataModel -> mDataModel
    int mMaxActivityCount -> mMaxActivityCount
    boolean mShowDefaultActivity -> mShowDefaultActivity
    boolean mHighlightDefaultActivity -> mHighlightDefaultActivity
    boolean mShowFooterView -> mShowFooterView
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> this$0
    void setDataModel(com.actionbarsherlock.widget.ActivityChooserModel) -> setDataModel
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int measureContentWidth() -> measureContentWidth
    void setMaxActivityCount(int) -> setMaxActivityCount
    android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    void setShowFooterView(boolean) -> setShowFooterView
    int getActivityCount() -> getActivityCount
    int getHistorySize() -> getHistorySize
    int getMaxActivityCount() -> getMaxActivityCount
    com.actionbarsherlock.widget.ActivityChooserModel getDataModel() -> getDataModel
    void setShowDefaultActivity(boolean,boolean) -> setShowDefaultActivity
    boolean getShowDefaultActivity() -> getShowDefaultActivity
com.actionbarsherlock.widget.ActivityChooserView$Callbacks -> com.actionbarsherlock.widget.ActivityChooserView$Callbacks:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    void onDismiss() -> onDismiss
    void notifyOnDismissListener() -> notifyOnDismissListener
com.actionbarsherlock.widget.ActivityChooserView$SetActivated -> com.actionbarsherlock.widget.ActivityChooserView$SetActivated:
    void invoke(android.view.View,boolean) -> invoke
com.actionbarsherlock.widget.SearchView -> com.actionbarsherlock.widget.SearchView:
    boolean DBG -> DBG
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String IME_OPTION_NO_MICROPHONE -> IME_OPTION_NO_MICROPHONE
    com.actionbarsherlock.widget.SearchView$OnQueryTextListener mOnQueryChangeListener -> mOnQueryChangeListener
    com.actionbarsherlock.widget.SearchView$OnCloseListener mOnCloseListener -> mOnCloseListener
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> mOnQueryTextFocusChangeListener
    com.actionbarsherlock.widget.SearchView$OnSuggestionListener mOnSuggestionListener -> mOnSuggestionListener
    android.view.View$OnClickListener mOnSearchClickListener -> mOnSearchClickListener
    boolean mIconifiedByDefault -> mIconifiedByDefault
    boolean mIconified -> mIconified
    android.support.v4.widget.CursorAdapter mSuggestionsAdapter -> mSuggestionsAdapter
    android.view.View mSearchButton -> mSearchButton
    android.view.View mSubmitButton -> mSubmitButton
    android.view.View mSearchPlate -> mSearchPlate
    android.view.View mSubmitArea -> mSubmitArea
    android.widget.ImageView mCloseButton -> mCloseButton
    android.view.View mSearchEditFrame -> mSearchEditFrame
    android.view.View mVoiceButton -> mVoiceButton
    com.actionbarsherlock.widget.SearchView$SearchAutoComplete mQueryTextView -> mQueryTextView
    android.view.View mDropDownAnchor -> mDropDownAnchor
    android.widget.ImageView mSearchHintIcon -> mSearchHintIcon
    boolean mSubmitButtonEnabled -> mSubmitButtonEnabled
    java.lang.CharSequence mQueryHint -> mQueryHint
    boolean mQueryRefinement -> mQueryRefinement
    boolean mClearingFocus -> mClearingFocus
    int mMaxWidth -> mMaxWidth
    boolean mVoiceButtonEnabled -> mVoiceButtonEnabled
    java.lang.CharSequence mOldQueryText -> mOldQueryText
    java.lang.CharSequence mUserQuery -> mUserQuery
    boolean mExpandedInActionView -> mExpandedInActionView
    int mCollapsedImeOptions -> mCollapsedImeOptions
    android.app.SearchableInfo mSearchable -> mSearchable
    android.os.Bundle mAppSearchData -> mAppSearchData
    java.lang.Runnable mShowImeRunnable -> mShowImeRunnable
    java.lang.Runnable mUpdateDrawableStateRunnable -> mUpdateDrawableStateRunnable
    java.lang.Runnable mReleaseCursorRunnable -> mReleaseCursorRunnable
    android.content.Intent mVoiceWebSearchIntent -> mVoiceWebSearchIntent
    android.content.Intent mVoiceAppSearchIntent -> mVoiceAppSearchIntent
    java.util.WeakHashMap mOutsideDrawablesCache -> mOutsideDrawablesCache
    android.view.View$OnClickListener mOnClickListener -> mOnClickListener
    android.view.View$OnKeyListener mTextKeyListener -> mTextKeyListener
    android.widget.TextView$OnEditorActionListener mOnEditorActionListener -> mOnEditorActionListener
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> mOnItemClickListener
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> mOnItemSelectedListener
    android.text.TextWatcher mTextWatcher -> mTextWatcher
    void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    void setAppSearchData(android.os.Bundle) -> setAppSearchData
    void setImeOptions(int) -> setImeOptions
    int getImeOptions() -> getImeOptions
    void setInputType(int) -> setInputType
    int getInputType() -> getInputType
    boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    void clearFocus() -> clearFocus
    void setOnQueryTextListener(com.actionbarsherlock.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    void setOnCloseListener(com.actionbarsherlock.widget.SearchView$OnCloseListener) -> setOnCloseListener
    void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    void setOnSuggestionListener(com.actionbarsherlock.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    java.lang.CharSequence getQuery() -> getQuery
    void setQuery(java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(java.lang.CharSequence) -> setQueryHint
    java.lang.CharSequence getQueryHint() -> getQueryHint
    void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    boolean isIconfiedByDefault() -> isIconfiedByDefault
    void setIconified(boolean) -> setIconified
    boolean isIconified() -> isIconified
    void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled() -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled() -> isQueryRefinementEnabled
    void setSuggestionsAdapter(android.support.v4.widget.CursorAdapter) -> setSuggestionsAdapter
    android.support.v4.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    void setMaxWidth(int) -> setMaxWidth
    int getMaxWidth() -> getMaxWidth
    void onMeasure(int,int) -> onMeasure
    int getPreferredWidth() -> getPreferredWidth
    void updateViewsVisibility(boolean) -> updateViewsVisibility
    boolean hasVoiceSearch() -> hasVoiceSearch
    boolean isSubmitAreaEnabled() -> isSubmitAreaEnabled
    void updateSubmitButton(boolean) -> updateSubmitButton
    void updateSubmitArea() -> updateSubmitArea
    void updateCloseButton() -> updateCloseButton
    void postUpdateFocusedState() -> postUpdateFocusedState
    void updateFocusedState() -> updateFocusedState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setImeVisibility(boolean) -> setImeVisibility
    void onQueryRefine(java.lang.CharSequence) -> onQueryRefine
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> onSuggestionsKey
    int getSearchIconId() -> getSearchIconId
    java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> getDecoratedHint
    void updateQueryHint() -> updateQueryHint
    void updateSearchAutoComplete() -> updateSearchAutoComplete
    void updateVoiceButton(boolean) -> updateVoiceButton
    void onTextChanged(java.lang.CharSequence) -> onTextChanged
    void onSubmitQuery() -> onSubmitQuery
    void dismissSuggestions() -> dismissSuggestions
    void onCloseClicked() -> onCloseClicked
    void onSearchClicked() -> onSearchClicked
    void onVoiceClicked() -> onVoiceClicked
    void onTextFocusChanged() -> onTextFocusChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onActionViewCollapsed() -> onActionViewCollapsed
    void onActionViewExpanded() -> onActionViewExpanded
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    boolean onItemClicked(int,int,java.lang.String) -> onItemClicked
    boolean onItemSelected(int) -> onItemSelected
    void rewriteQueryFromSuggestion(int) -> rewriteQueryFromSuggestion
    boolean launchSuggestion(int,int,java.lang.String) -> launchSuggestion
    void launchIntent(android.content.Intent) -> launchIntent
    void setQuery(java.lang.CharSequence) -> setQuery
    void launchQuerySearch(int,java.lang.String,java.lang.String) -> launchQuerySearch
    android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> createIntent
    android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceWebSearchIntent
    android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceAppSearchIntent
    android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> createIntentFromSuggestion
    void forceSuggestionQuery() -> forceSuggestionQuery
    boolean isLandscapeMode(android.content.Context) -> isLandscapeMode
    void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> ensureImeVisible
    void showSoftInputUnchecked(android.view.View,android.view.inputmethod.InputMethodManager,int) -> showSoftInputUnchecked
    void setText(android.widget.AutoCompleteTextView,java.lang.CharSequence,boolean) -> setText
    void access$0(android.view.View,android.view.inputmethod.InputMethodManager,int) -> access$0
    void access$1(com.actionbarsherlock.widget.SearchView) -> access$1
    android.support.v4.widget.CursorAdapter access$2(com.actionbarsherlock.widget.SearchView) -> access$2
    android.view.View access$3(com.actionbarsherlock.widget.SearchView) -> access$3
    void access$4(com.actionbarsherlock.widget.SearchView) -> access$4
    android.widget.ImageView access$5(com.actionbarsherlock.widget.SearchView) -> access$5
    void access$6(com.actionbarsherlock.widget.SearchView) -> access$6
    android.view.View access$7(com.actionbarsherlock.widget.SearchView) -> access$7
    void access$8(com.actionbarsherlock.widget.SearchView) -> access$8
    android.view.View access$9(com.actionbarsherlock.widget.SearchView) -> access$9
    void access$10(com.actionbarsherlock.widget.SearchView) -> access$10
    com.actionbarsherlock.widget.SearchView$SearchAutoComplete access$11(com.actionbarsherlock.widget.SearchView) -> access$11
    void access$12(com.actionbarsherlock.widget.SearchView) -> access$12
    android.app.SearchableInfo access$13(com.actionbarsherlock.widget.SearchView) -> access$13
    boolean access$14(com.actionbarsherlock.widget.SearchView,android.view.View,int,android.view.KeyEvent) -> access$14
    void access$15(com.actionbarsherlock.widget.SearchView,int,java.lang.String,java.lang.String) -> access$15
    boolean access$16(com.actionbarsherlock.widget.SearchView,int,int,java.lang.String) -> access$16
    boolean access$17(com.actionbarsherlock.widget.SearchView,int) -> access$17
    void access$18(com.actionbarsherlock.widget.SearchView,java.lang.CharSequence) -> access$18
    void access$19(android.widget.AutoCompleteTextView,boolean) -> access$19
    void access$20(com.actionbarsherlock.widget.SearchView,boolean) -> access$20
    android.view.View$OnFocusChangeListener access$21(com.actionbarsherlock.widget.SearchView) -> access$21
    void access$22(com.actionbarsherlock.widget.SearchView) -> access$22
com.actionbarsherlock.widget.SearchView$1 -> com.actionbarsherlock.widget.SearchView$1:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.widget.SearchView$10 -> com.actionbarsherlock.widget.SearchView$10:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.actionbarsherlock.widget.SearchView$11 -> com.actionbarsherlock.widget.SearchView$11:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.actionbarsherlock.widget.SearchView$12 -> com.actionbarsherlock.widget.SearchView$12:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
com.actionbarsherlock.widget.SearchView$2 -> com.actionbarsherlock.widget.SearchView$2:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.widget.SearchView$3 -> com.actionbarsherlock.widget.SearchView$3:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.widget.SearchView$4 -> com.actionbarsherlock.widget.SearchView$4:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.widget.SearchView$5 -> com.actionbarsherlock.widget.SearchView$5:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.actionbarsherlock.widget.SearchView$6 -> com.actionbarsherlock.widget.SearchView$6:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.actionbarsherlock.widget.SearchView$7 -> com.actionbarsherlock.widget.SearchView$7:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.actionbarsherlock.widget.SearchView$8 -> com.actionbarsherlock.widget.SearchView$8:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.actionbarsherlock.widget.SearchView$9 -> com.actionbarsherlock.widget.SearchView$9:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.actionbarsherlock.widget.SearchView$OnCloseListener -> com.actionbarsherlock.widget.SearchView$OnCloseListener:
    boolean onClose() -> onClose
com.actionbarsherlock.widget.SearchView$OnQueryTextListener -> com.actionbarsherlock.widget.SearchView$OnQueryTextListener:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
com.actionbarsherlock.widget.SearchView$OnSuggestionListener -> com.actionbarsherlock.widget.SearchView$OnSuggestionListener:
    boolean onSuggestionSelect(int) -> onSuggestionSelect
    boolean onSuggestionClick(int) -> onSuggestionClick
com.actionbarsherlock.widget.SearchView$SearchAutoComplete -> com.actionbarsherlock.widget.SearchView$SearchAutoComplete:
    int mThreshold -> mThreshold
    com.actionbarsherlock.widget.SearchView mSearchView -> mSearchView
    void setSearchView(com.actionbarsherlock.widget.SearchView) -> setSearchView
    void setThreshold(int) -> setThreshold
    boolean isEmpty() -> isEmpty
    void replaceText(java.lang.CharSequence) -> replaceText
    void performCompletion() -> performCompletion
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean enoughToFilter() -> enoughToFilter
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    boolean access$0(com.actionbarsherlock.widget.SearchView$SearchAutoComplete) -> access$0
com.actionbarsherlock.widget.ShareActionProvider -> com.actionbarsherlock.widget.ShareActionProvider:
    int DEFAULT_INITIAL_ACTIVITY_COUNT -> DEFAULT_INITIAL_ACTIVITY_COUNT
    int mMaxShownActivityCount -> mMaxShownActivityCount
    com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener mOnMenuItemClickListener -> mOnMenuItemClickListener
    java.lang.String DEFAULT_SHARE_HISTORY_FILE_NAME -> DEFAULT_SHARE_HISTORY_FILE_NAME
    android.content.Context mContext -> mContext
    java.lang.String mShareHistoryFileName -> mShareHistoryFileName
    com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener mOnShareTargetSelectedListener -> mOnShareTargetSelectedListener
    com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener mOnChooseActivityListener -> mOnChooseActivityListener
    void setOnShareTargetSelectedListener(com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener) -> setOnShareTargetSelectedListener
    android.view.View onCreateActionView() -> onCreateActionView
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu) -> onPrepareSubMenu
    void setShareHistoryFileName(java.lang.String) -> setShareHistoryFileName
    void setShareIntent(android.content.Intent) -> setShareIntent
    void setActivityChooserPolicyIfNeeded() -> setActivityChooserPolicyIfNeeded
    android.content.Context access$0(com.actionbarsherlock.widget.ShareActionProvider) -> access$0
    java.lang.String access$1(com.actionbarsherlock.widget.ShareActionProvider) -> access$1
    com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener access$2(com.actionbarsherlock.widget.ShareActionProvider) -> access$2
com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener -> com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener:
    boolean onShareTargetSelected(com.actionbarsherlock.widget.ShareActionProvider,android.content.Intent) -> onShareTargetSelected
com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy -> com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy:
    com.actionbarsherlock.widget.ShareActionProvider this$0 -> this$0
    boolean onChooseActivity(com.actionbarsherlock.widget.ActivityChooserModel,android.content.Intent) -> onChooseActivity
com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener -> com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener:
    com.actionbarsherlock.widget.ShareActionProvider this$0 -> this$0
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> onMenuItemClick
com.actionbarsherlock.widget.SuggestionsAdapter -> com.actionbarsherlock.widget.SuggestionsAdapter:
    boolean DBG -> DBG
    java.lang.String LOG_TAG -> LOG_TAG
    int QUERY_LIMIT -> QUERY_LIMIT
    int REFINE_NONE -> REFINE_NONE
    int REFINE_BY_ENTRY -> REFINE_BY_ENTRY
    int REFINE_ALL -> REFINE_ALL
    android.app.SearchManager mSearchManager -> mSearchManager
    android.app.SearchableInfo mSearchable -> mSearchable
    com.actionbarsherlock.widget.SearchView mSearchView -> mSearchView
    android.content.Context mProviderContext -> mProviderContext
    java.util.WeakHashMap mOutsideDrawablesCache -> mOutsideDrawablesCache
    boolean mClosed -> mClosed
    int mQueryRefinement -> mQueryRefinement
    android.content.res.ColorStateList mUrlColor -> mUrlColor
    int INVALID_INDEX -> INVALID_INDEX
    int mText1Col -> mText1Col
    int mText2Col -> mText2Col
    int mText2UrlCol -> mText2UrlCol
    int mIconName1Col -> mIconName1Col
    int mIconName2Col -> mIconName2Col
    int mFlagsCol -> mFlagsCol
    void setQueryRefinement(int) -> setQueryRefinement
    int getQueryRefinement() -> getQueryRefinement
    boolean hasStableIds() -> hasStableIds
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getSuggestions(java.lang.String,int) -> getSuggestions
    void close() -> close
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    void updateSpinnerState(android.database.Cursor) -> updateSpinnerState
    void changeCursor(android.database.Cursor) -> changeCursor
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void onClick(android.view.View) -> onClick
    java.lang.CharSequence formatUrl(java.lang.CharSequence) -> formatUrl
    void setViewText(android.widget.TextView,java.lang.CharSequence) -> setViewText
    android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> getIcon1
    android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> getIcon2
    void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> setViewDrawable
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> getDrawableFromResourceValue
    android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> getDrawable
    android.graphics.drawable.Drawable getTheDrawable(android.net.Uri) -> getTheDrawable
    android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> checkIconCache
    void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> storeInIconCache
    android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> getDefaultIcon1
    android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> getActivityIconWithCache
    android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> getActivityIcon
    java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> getColumnString
    java.lang.String getStringOrNull(android.database.Cursor,int) -> getStringOrNull
com.actionbarsherlock.widget.SuggestionsAdapter$ChildViewCache -> com.actionbarsherlock.widget.SuggestionsAdapter$ChildViewCache:
    android.widget.TextView mText1 -> mText1
    android.widget.TextView mText2 -> mText2
    android.widget.ImageView mIcon1 -> mIcon1
    android.widget.ImageView mIcon2 -> mIcon2
    android.widget.ImageView mIconRefine -> mIconRefine
de.tavendo.autobahn.ByteBufferOutputStream -> a.a.a.a:
    int mInitialSize -> a
    int mGrowSize -> b
    java.nio.ByteBuffer mBuffer -> c
    java.nio.ByteBuffer getBuffer() -> a
    java.nio.Buffer flip() -> b
    java.nio.Buffer clear() -> c
    int remaining() -> d
    void expand(int) -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(java.lang.String) -> a
    void crlf() -> e
de.tavendo.autobahn.NoCopyByteArrayOutputStream -> a.a.a.b:
    byte[] getByteArray() -> a
de.tavendo.autobahn.PrefixMap -> a.a.a.c:
    java.util.HashMap mPrefixes -> a
    java.util.HashMap mUris -> b
    void clear() -> a
    java.lang.String resolveOrPass(java.lang.String) -> a
    java.lang.String shrink(java.lang.String) -> b
de.tavendo.autobahn.Utf8Validator -> a.a.a.d:
    int[] DFA -> a
    int mState -> b
    int mPos -> c
    void reset() -> a
    boolean isValid() -> b
    boolean validate(byte[]) -> a
de.tavendo.autobahn.Wamp -> a.a.a.e:
de.tavendo.autobahn.Wamp$CallHandler -> a.a.a.f:
de.tavendo.autobahn.Wamp$ConnectionHandler -> a.a.a.g:
    void onOpen() -> a
    void onClose(int,java.lang.String) -> a
de.tavendo.autobahn.Wamp$EventHandler -> a.a.a.h:
    void onEvent(java.lang.String,java.lang.Object) -> a
de.tavendo.autobahn.WampConnection -> a.a.a.i:
    java.lang.String TAG -> g
    de.tavendo.autobahn.PrefixMap mOutgoingPrefixes -> h
    java.util.Random mRng -> i
    char[] mBase64Chars -> j
    java.util.concurrent.ConcurrentHashMap mCalls -> k
    java.util.concurrent.ConcurrentHashMap mSubs -> l
    de.tavendo.autobahn.Wamp$ConnectionHandler mSessionHandler -> m
    void createWriter() -> a
    void createReader() -> b
    void connect(java.lang.String,de.tavendo.autobahn.Wamp$ConnectionHandler,de.tavendo.autobahn.WampOptions) -> a
    void processAppMessage(java.lang.Object) -> a
    void subscribe(java.lang.String,java.lang.Class,de.tavendo.autobahn.Wamp$EventHandler) -> a
    void unsubscribe() -> c
    de.tavendo.autobahn.Wamp$ConnectionHandler access$0(de.tavendo.autobahn.WampConnection) -> a
    java.lang.String access$1() -> d
de.tavendo.autobahn.WampConnection$1 -> a.a.a.i$1:
    de.tavendo.autobahn.WampConnection this$0 -> a
    void onOpen() -> a
    void onClose(int,java.lang.String) -> a
de.tavendo.autobahn.WampConnection$CallMeta -> a.a.a.j:
    de.tavendo.autobahn.Wamp$CallHandler mResultHandler -> a
    java.lang.Class mResultClass -> b
    org.codehaus.jackson.type.TypeReference mResultTypeRef -> c
de.tavendo.autobahn.WampConnection$SubMeta -> a.a.a.k:
    de.tavendo.autobahn.Wamp$EventHandler mEventHandler -> a
    java.lang.Class mEventClass -> b
    org.codehaus.jackson.type.TypeReference mEventTypeRef -> c
de.tavendo.autobahn.WampMessage -> a.a.a.l:
de.tavendo.autobahn.WampMessage$Call -> a.a.a.m:
    java.lang.String mCallId -> a
    java.lang.String mProcUri -> b
    java.lang.Object[] mArgs -> c
de.tavendo.autobahn.WampMessage$CallError -> a.a.a.n:
    java.lang.String mCallId -> a
    java.lang.String mErrorUri -> b
    java.lang.String mErrorDesc -> c
de.tavendo.autobahn.WampMessage$CallResult -> a.a.a.o:
    java.lang.String mCallId -> a
    java.lang.Object mResult -> b
de.tavendo.autobahn.WampMessage$Event -> a.a.a.p:
    java.lang.String mTopicUri -> a
    java.lang.Object mEvent -> b
de.tavendo.autobahn.WampMessage$Message -> a.a.a.q:
de.tavendo.autobahn.WampMessage$Prefix -> a.a.a.r:
    java.lang.String mPrefix -> a
    java.lang.String mUri -> b
de.tavendo.autobahn.WampMessage$Publish -> a.a.a.s:
    java.lang.String mTopicUri -> a
    java.lang.Object mEvent -> b
de.tavendo.autobahn.WampMessage$Subscribe -> a.a.a.t:
    java.lang.String mTopicUri -> a
de.tavendo.autobahn.WampMessage$Unsubscribe -> a.a.a.u:
    java.lang.String mTopicUri -> a
de.tavendo.autobahn.WampMessage$Welcome -> a.a.a.v:
    java.lang.String mSessionId -> a
    int mProtocolVersion -> b
    java.lang.String mServerIdent -> c
de.tavendo.autobahn.WampOptions -> a.a.a.w:
de.tavendo.autobahn.WampReader -> a.a.a.x:
    java.lang.String TAG -> a
    org.codehaus.jackson.map.ObjectMapper mJsonMapper -> b
    org.codehaus.jackson.JsonFactory mJsonFactory -> c
    java.util.concurrent.ConcurrentHashMap mCalls -> d
    java.util.concurrent.ConcurrentHashMap mSubs -> e
    void onTextMessage(java.lang.String) -> a
    void onBinaryMessage(byte[]) -> a
    void onRawTextMessage(byte[]) -> b
de.tavendo.autobahn.WampWriter -> a.a.a.y:
    java.lang.String TAG -> a
    org.codehaus.jackson.JsonFactory mJsonFactory -> b
    de.tavendo.autobahn.NoCopyByteArrayOutputStream mPayload -> c
    void processAppMessage(java.lang.Object) -> a
de.tavendo.autobahn.WebSocket -> a.a.a.z:
de.tavendo.autobahn.WebSocket$ConnectionHandler -> a.a.a.aa:
    void onOpen() -> a
    void onClose(int,java.lang.String) -> a
de.tavendo.autobahn.WebSocketConnection -> a.a.a.ab:
    java.lang.String TAG -> g
    android.os.Handler mMasterHandler -> a
    de.tavendo.autobahn.WebSocketReader mReader -> b
    de.tavendo.autobahn.WebSocketWriter mWriter -> c
    android.os.HandlerThread mWriterThread -> d
    java.nio.channels.SocketChannel mTransportChannel -> e
    java.net.URI mWsUri -> h
    java.lang.String mWsScheme -> i
    java.lang.String mWsHost -> j
    int mWsPort -> k
    java.lang.String mWsPath -> l
    java.lang.String mWsQuery -> m
    java.lang.String[] mWsSubprotocols -> n
    java.util.List mWsHeaders -> o
    de.tavendo.autobahn.WebSocket$ConnectionHandler mWsHandler -> p
    de.tavendo.autobahn.WebSocketOptions mOptions -> f
    boolean mActive -> q
    boolean mPrevConnected -> r
    void sendPing() -> e
    boolean isConnected() -> f
    void connect$7ce0b31b(java.lang.String,java.lang.String[],de.tavendo.autobahn.WebSocket$ConnectionHandler,de.tavendo.autobahn.WebSocketOptions) -> a
    void disconnect() -> g
    boolean reconnect() -> h
    void onClose(int,java.lang.String) -> a
    void processAppMessage(java.lang.Object) -> a
    void createWriter() -> a
    void createReader() -> b
    java.lang.String access$0(de.tavendo.autobahn.WebSocketConnection) -> a
    int access$1(de.tavendo.autobahn.WebSocketConnection) -> b
    void access$2(de.tavendo.autobahn.WebSocketConnection,int,java.lang.String) -> a
    java.lang.String access$3(de.tavendo.autobahn.WebSocketConnection) -> c
    java.lang.String access$4(de.tavendo.autobahn.WebSocketConnection) -> d
    java.lang.String[] access$5(de.tavendo.autobahn.WebSocketConnection) -> e
    java.util.List access$6(de.tavendo.autobahn.WebSocketConnection) -> f
    void access$7$4a191712(de.tavendo.autobahn.WebSocketConnection) -> g
    java.lang.String access$8() -> i
    de.tavendo.autobahn.WebSocket$ConnectionHandler access$9(de.tavendo.autobahn.WebSocketConnection) -> h
    void access$10(de.tavendo.autobahn.WebSocketConnection,int,java.lang.String) -> b
de.tavendo.autobahn.WebSocketConnection$1 -> a.a.a.ab$1:
    de.tavendo.autobahn.WebSocketConnection this$0 -> a
    void run() -> run
de.tavendo.autobahn.WebSocketConnection$2 -> a.a.a.ab$2:
    de.tavendo.autobahn.WebSocketConnection this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
de.tavendo.autobahn.WebSocketConnection$WebSocketConnector -> a.a.a.ac:
    de.tavendo.autobahn.WebSocketConnection this$0 -> a
    void run() -> run
de.tavendo.autobahn.WebSocketConnectionHandler -> a.a.a.ad:
    void onOpen() -> a
    void onClose(int,java.lang.String) -> a
de.tavendo.autobahn.WebSocketException -> a.a.a.ae:
de.tavendo.autobahn.WebSocketMessage -> a.a.a.af:
de.tavendo.autobahn.WebSocketMessage$BinaryMessage -> a.a.a.ag:
    byte[] mPayload -> a
de.tavendo.autobahn.WebSocketMessage$ClientHandshake -> a.a.a.ah:
    java.lang.String mHost -> a
    java.lang.String mPath -> b
    java.lang.String mQuery -> c
    java.lang.String mOrigin -> d
    java.lang.String[] mSubprotocols -> e
    java.util.List mHeaderList -> f
de.tavendo.autobahn.WebSocketMessage$Close -> a.a.a.ai:
    int mCode -> a
    java.lang.String mReason -> b
de.tavendo.autobahn.WebSocketMessage$ConnectionLost -> a.a.a.aj:
de.tavendo.autobahn.WebSocketMessage$Error -> a.a.a.ak:
    java.lang.Exception mException -> a
de.tavendo.autobahn.WebSocketMessage$Message -> a.a.a.al:
de.tavendo.autobahn.WebSocketMessage$Ping -> a.a.a.am:
    byte[] mPayload -> a
de.tavendo.autobahn.WebSocketMessage$Pong -> a.a.a.an:
    byte[] mPayload -> a
de.tavendo.autobahn.WebSocketMessage$ProtocolViolation -> a.a.a.ao:
    de.tavendo.autobahn.WebSocketException mException -> a
de.tavendo.autobahn.WebSocketMessage$Quit -> a.a.a.ap:
de.tavendo.autobahn.WebSocketMessage$RawTextMessage -> a.a.a.aq:
    byte[] mPayload -> a
de.tavendo.autobahn.WebSocketMessage$ServerError -> a.a.a.ar:
    int mStatusCode -> a
    java.lang.String mStatusMessage -> b
de.tavendo.autobahn.WebSocketMessage$ServerHandshake -> a.a.a.as:
    boolean mSuccess -> a
de.tavendo.autobahn.WebSocketMessage$TextMessage -> a.a.a.at:
    java.lang.String mPayload -> a
de.tavendo.autobahn.WebSocketOptions -> a.a.a.au:
    int mMaxFramePayloadSize -> a
    int mMaxMessagePayloadSize -> b
    boolean mReceiveTextMessagesRaw -> c
    boolean mTcpNoDelay -> d
    int mSocketReceiveTimeout -> e
    int mSocketConnectTimeout -> f
    boolean mValidateIncomingUtf8 -> g
    boolean mMaskClientFrames -> h
    int mReconnectInterval -> i
    void setReceiveTextMessagesRaw$1385ff() -> a
    boolean getReceiveTextMessagesRaw() -> b
    int getMaxFramePayloadSize() -> c
    int getMaxMessagePayloadSize() -> d
    boolean getTcpNoDelay() -> e
    int getSocketReceiveTimeout() -> f
    int getSocketConnectTimeout() -> g
    boolean getValidateIncomingUtf8() -> h
    boolean getMaskClientFrames() -> i
    void setReconnectInterval$13462e() -> j
    int getReconnectInterval() -> k
de.tavendo.autobahn.WebSocketReader -> a.a.a.av:
    java.lang.String TAG -> a
    android.os.Handler mMaster -> b
    java.nio.channels.SocketChannel mSocket -> c
    de.tavendo.autobahn.WebSocketOptions mOptions -> d
    java.nio.ByteBuffer mFrameBuffer -> e
    de.tavendo.autobahn.NoCopyByteArrayOutputStream mMessagePayload -> f
    boolean mStopped -> g
    int mState -> h
    boolean mInsideMessage -> i
    int mMessageOpcode -> j
    de.tavendo.autobahn.WebSocketReader$FrameHeader mFrameHeader -> k
    de.tavendo.autobahn.Utf8Validator mUtf8Validator -> l
    void quit() -> a
    void notify(java.lang.Object) -> a
    void onTextMessage(java.lang.String) -> a
    void onRawTextMessage(byte[]) -> b
    void onBinaryMessage(byte[]) -> a
    boolean processHandshake() -> b
    void run() -> run
de.tavendo.autobahn.WebSocketReader$FrameHeader -> a.a.a.aw:
    int mOpcode -> a
    boolean mFin -> b
    int mReserved -> c
    int mHeaderLen -> d
    int mPayloadLen -> e
    int mTotalLen -> f
    byte[] mMask -> g
de.tavendo.autobahn.WebSocketWriter -> a.a.a.ax:
    java.lang.String TAG -> a
    java.util.Random mRng -> b
    android.os.Handler mMaster -> c
    android.os.Looper mLooper -> d
    java.nio.channels.SocketChannel mSocket -> e
    de.tavendo.autobahn.WebSocketOptions mOptions -> f
    de.tavendo.autobahn.ByteBufferOutputStream mBuffer -> g
    void forward(java.lang.Object) -> b
    void notify(java.lang.Object) -> c
    void sendFrame$3a565a53(int,byte[]) -> a
    void sendFrame$1e54ecd$10747d0a(int,byte[],int) -> a
    void handleMessage(android.os.Message) -> handleMessage
    void processAppMessage(java.lang.Object) -> a
org.codehaus.jackson.Base64Variant -> org.codehaus.jackson.Base64Variant:
    char PADDING_CHAR_NONE -> PADDING_CHAR_NONE
    int BASE64_VALUE_INVALID -> BASE64_VALUE_INVALID
    int BASE64_VALUE_PADDING -> BASE64_VALUE_PADDING
    int[] _asciiToBase64 -> _asciiToBase64
    char[] _base64ToAsciiC -> _base64ToAsciiC
    byte[] _base64ToAsciiB -> _base64ToAsciiB
    java.lang.String _name -> _name
    boolean _usesPadding -> _usesPadding
    char _paddingChar -> _paddingChar
    int _maxLineLength -> _maxLineLength
    java.lang.String getName() -> getName
    boolean usesPadding() -> usesPadding
    boolean usesPaddingChar(char) -> usesPaddingChar
    boolean usesPaddingChar(int) -> usesPaddingChar
    char getPaddingChar() -> getPaddingChar
    byte getPaddingByte() -> getPaddingByte
    int getMaxLineLength() -> getMaxLineLength
    int decodeBase64Char(char) -> decodeBase64Char
    int decodeBase64Char(int) -> decodeBase64Char
    int decodeBase64Byte(byte) -> decodeBase64Byte
    char encodeBase64BitsAsChar(int) -> encodeBase64BitsAsChar
    int encodeBase64Chunk(int,char[],int) -> encodeBase64Chunk
    void encodeBase64Chunk(java.lang.StringBuilder,int) -> encodeBase64Chunk
    int encodeBase64Partial(int,int,char[],int) -> encodeBase64Partial
    void encodeBase64Partial(java.lang.StringBuilder,int,int) -> encodeBase64Partial
    byte encodeBase64BitsAsByte(int) -> encodeBase64BitsAsByte
    int encodeBase64Chunk(int,byte[],int) -> encodeBase64Chunk
    int encodeBase64Partial(int,int,byte[],int) -> encodeBase64Partial
    java.lang.String encode(byte[]) -> encode
    java.lang.String encode(byte[],boolean) -> encode
    java.lang.String toString() -> toString
org.codehaus.jackson.Base64Variants -> org.codehaus.jackson.Base64Variants:
    java.lang.String STD_BASE64_ALPHABET -> STD_BASE64_ALPHABET
    org.codehaus.jackson.Base64Variant MIME -> MIME
    org.codehaus.jackson.Base64Variant MIME_NO_LINEFEEDS -> MIME_NO_LINEFEEDS
    org.codehaus.jackson.Base64Variant PEM -> PEM
    org.codehaus.jackson.Base64Variant MODIFIED_FOR_URL -> MODIFIED_FOR_URL
    org.codehaus.jackson.Base64Variant getDefaultVariant() -> getDefaultVariant
org.codehaus.jackson.FormatSchema -> org.codehaus.jackson.FormatSchema:
    java.lang.String getSchemaType() -> getSchemaType
org.codehaus.jackson.JsonEncoding -> org.codehaus.jackson.JsonEncoding:
    org.codehaus.jackson.JsonEncoding UTF8 -> UTF8
    org.codehaus.jackson.JsonEncoding UTF16_BE -> UTF16_BE
    org.codehaus.jackson.JsonEncoding UTF16_LE -> UTF16_LE
    org.codehaus.jackson.JsonEncoding UTF32_BE -> UTF32_BE
    org.codehaus.jackson.JsonEncoding UTF32_LE -> UTF32_LE
    java.lang.String _javaName -> _javaName
    boolean _bigEndian -> _bigEndian
    org.codehaus.jackson.JsonEncoding[] $VALUES -> $VALUES
    org.codehaus.jackson.JsonEncoding[] values() -> values
    org.codehaus.jackson.JsonEncoding valueOf(java.lang.String) -> valueOf
    java.lang.String getJavaName() -> getJavaName
    boolean isBigEndian() -> isBigEndian
org.codehaus.jackson.JsonFactory -> org.codehaus.jackson.JsonFactory:
    java.lang.String FORMAT_NAME_JSON -> FORMAT_NAME_JSON
    int DEFAULT_PARSER_FEATURE_FLAGS -> DEFAULT_PARSER_FEATURE_FLAGS
    int DEFAULT_GENERATOR_FEATURE_FLAGS -> DEFAULT_GENERATOR_FEATURE_FLAGS
    java.lang.ThreadLocal _recyclerRef -> _recyclerRef
    org.codehaus.jackson.sym.CharsToNameCanonicalizer _rootCharSymbols -> _rootCharSymbols
    org.codehaus.jackson.sym.BytesToNameCanonicalizer _rootByteSymbols -> _rootByteSymbols
    org.codehaus.jackson.ObjectCodec _objectCodec -> _objectCodec
    int _parserFeatures -> _parserFeatures
    int _generatorFeatures -> _generatorFeatures
    org.codehaus.jackson.io.CharacterEscapes _characterEscapes -> _characterEscapes
    org.codehaus.jackson.io.InputDecorator _inputDecorator -> _inputDecorator
    org.codehaus.jackson.io.OutputDecorator _outputDecorator -> _outputDecorator
    java.lang.String getFormatName() -> getFormatName
    org.codehaus.jackson.format.MatchStrength hasFormat(org.codehaus.jackson.format.InputAccessor) -> hasFormat
    org.codehaus.jackson.format.MatchStrength hasJSONFormat(org.codehaus.jackson.format.InputAccessor) -> hasJSONFormat
    org.codehaus.jackson.Version version() -> version
    org.codehaus.jackson.JsonFactory configure(org.codehaus.jackson.JsonParser$Feature,boolean) -> configure
    org.codehaus.jackson.JsonFactory enable(org.codehaus.jackson.JsonParser$Feature) -> enable
    org.codehaus.jackson.JsonFactory disable(org.codehaus.jackson.JsonParser$Feature) -> disable
    boolean isEnabled(org.codehaus.jackson.JsonParser$Feature) -> isEnabled
    void enableParserFeature(org.codehaus.jackson.JsonParser$Feature) -> enableParserFeature
    void disableParserFeature(org.codehaus.jackson.JsonParser$Feature) -> disableParserFeature
    void setParserFeature(org.codehaus.jackson.JsonParser$Feature,boolean) -> setParserFeature
    boolean isParserFeatureEnabled(org.codehaus.jackson.JsonParser$Feature) -> isParserFeatureEnabled
    org.codehaus.jackson.io.InputDecorator getInputDecorator() -> getInputDecorator
    org.codehaus.jackson.JsonFactory setInputDecorator(org.codehaus.jackson.io.InputDecorator) -> setInputDecorator
    org.codehaus.jackson.JsonFactory configure(org.codehaus.jackson.JsonGenerator$Feature,boolean) -> configure
    org.codehaus.jackson.JsonFactory enable(org.codehaus.jackson.JsonGenerator$Feature) -> enable
    org.codehaus.jackson.JsonFactory disable(org.codehaus.jackson.JsonGenerator$Feature) -> disable
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    void enableGeneratorFeature(org.codehaus.jackson.JsonGenerator$Feature) -> enableGeneratorFeature
    void disableGeneratorFeature(org.codehaus.jackson.JsonGenerator$Feature) -> disableGeneratorFeature
    void setGeneratorFeature(org.codehaus.jackson.JsonGenerator$Feature,boolean) -> setGeneratorFeature
    boolean isGeneratorFeatureEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isGeneratorFeatureEnabled
    org.codehaus.jackson.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    org.codehaus.jackson.JsonFactory setCharacterEscapes(org.codehaus.jackson.io.CharacterEscapes) -> setCharacterEscapes
    org.codehaus.jackson.io.OutputDecorator getOutputDecorator() -> getOutputDecorator
    org.codehaus.jackson.JsonFactory setOutputDecorator(org.codehaus.jackson.io.OutputDecorator) -> setOutputDecorator
    org.codehaus.jackson.JsonFactory setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    org.codehaus.jackson.JsonParser createJsonParser(java.io.File) -> createJsonParser
    org.codehaus.jackson.JsonParser createJsonParser(java.net.URL) -> createJsonParser
    org.codehaus.jackson.JsonParser createJsonParser(java.io.InputStream) -> createJsonParser
    org.codehaus.jackson.JsonParser createJsonParser(java.io.Reader) -> createJsonParser
    org.codehaus.jackson.JsonParser createJsonParser(byte[]) -> createJsonParser
    org.codehaus.jackson.JsonParser createJsonParser(byte[],int,int) -> createJsonParser
    org.codehaus.jackson.JsonParser createJsonParser(java.lang.String) -> createJsonParser
    org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.OutputStream,org.codehaus.jackson.JsonEncoding) -> createJsonGenerator
    org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.Writer) -> createJsonGenerator
    org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.OutputStream) -> createJsonGenerator
    org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.File,org.codehaus.jackson.JsonEncoding) -> createJsonGenerator
    org.codehaus.jackson.JsonParser _createJsonParser(java.io.InputStream,org.codehaus.jackson.io.IOContext) -> _createJsonParser
    org.codehaus.jackson.JsonParser _createJsonParser(java.io.Reader,org.codehaus.jackson.io.IOContext) -> _createJsonParser
    org.codehaus.jackson.JsonParser _createJsonParser(byte[],int,int,org.codehaus.jackson.io.IOContext) -> _createJsonParser
    org.codehaus.jackson.JsonGenerator _createJsonGenerator(java.io.Writer,org.codehaus.jackson.io.IOContext) -> _createJsonGenerator
    org.codehaus.jackson.JsonGenerator _createUTF8JsonGenerator(java.io.OutputStream,org.codehaus.jackson.io.IOContext) -> _createUTF8JsonGenerator
    java.io.Writer _createWriter(java.io.OutputStream,org.codehaus.jackson.JsonEncoding,org.codehaus.jackson.io.IOContext) -> _createWriter
    org.codehaus.jackson.io.IOContext _createContext(java.lang.Object,boolean) -> _createContext
    org.codehaus.jackson.util.BufferRecycler _getBufferRecycler() -> _getBufferRecycler
    java.io.InputStream _optimizedStreamFromURL(java.net.URL) -> _optimizedStreamFromURL
org.codehaus.jackson.JsonGenerationException -> org.codehaus.jackson.JsonGenerationException:
    long serialVersionUID -> serialVersionUID
org.codehaus.jackson.JsonGenerator -> org.codehaus.jackson.JsonGenerator:
    org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter -> _cfgPrettyPrinter
    void setSchema(org.codehaus.jackson.FormatSchema) -> setSchema
    boolean canUseSchema(org.codehaus.jackson.FormatSchema) -> canUseSchema
    org.codehaus.jackson.Version version() -> version
    java.lang.Object getOutputTarget() -> getOutputTarget
    org.codehaus.jackson.JsonGenerator enable(org.codehaus.jackson.JsonGenerator$Feature) -> enable
    org.codehaus.jackson.JsonGenerator disable(org.codehaus.jackson.JsonGenerator$Feature) -> disable
    org.codehaus.jackson.JsonGenerator configure(org.codehaus.jackson.JsonGenerator$Feature,boolean) -> configure
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    org.codehaus.jackson.JsonGenerator setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    void enableFeature(org.codehaus.jackson.JsonGenerator$Feature) -> enableFeature
    void disableFeature(org.codehaus.jackson.JsonGenerator$Feature) -> disableFeature
    void setFeature(org.codehaus.jackson.JsonGenerator$Feature,boolean) -> setFeature
    boolean isFeatureEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isFeatureEnabled
    org.codehaus.jackson.JsonGenerator setPrettyPrinter(org.codehaus.jackson.PrettyPrinter) -> setPrettyPrinter
    org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    org.codehaus.jackson.JsonGenerator setHighestNonEscapedChar(int) -> setHighestNonEscapedChar
    int getHighestEscapedChar() -> getHighestEscapedChar
    org.codehaus.jackson.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    org.codehaus.jackson.JsonGenerator setCharacterEscapes(org.codehaus.jackson.io.CharacterEscapes) -> setCharacterEscapes
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.io.SerializedString) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.SerializableString) -> writeFieldName
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(org.codehaus.jackson.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> writeBinary
    void writeBinary(byte[],int,int) -> writeBinary
    void writeBinary(byte[]) -> writeBinary
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void writeObject(java.lang.Object) -> writeObject
    void writeTree(org.codehaus.jackson.JsonNode) -> writeTree
    void writeStringField(java.lang.String,java.lang.String) -> writeStringField
    void writeBooleanField(java.lang.String,boolean) -> writeBooleanField
    void writeNullField(java.lang.String) -> writeNullField
    void writeNumberField(java.lang.String,int) -> writeNumberField
    void writeNumberField(java.lang.String,long) -> writeNumberField
    void writeNumberField(java.lang.String,double) -> writeNumberField
    void writeNumberField(java.lang.String,float) -> writeNumberField
    void writeNumberField(java.lang.String,java.math.BigDecimal) -> writeNumberField
    void writeBinaryField(java.lang.String,byte[]) -> writeBinaryField
    void writeArrayFieldStart(java.lang.String) -> writeArrayFieldStart
    void writeObjectFieldStart(java.lang.String) -> writeObjectFieldStart
    void writeObjectField(java.lang.String,java.lang.Object) -> writeObjectField
    void copyCurrentEvent(org.codehaus.jackson.JsonParser) -> copyCurrentEvent
    void copyCurrentStructure(org.codehaus.jackson.JsonParser) -> copyCurrentStructure
    org.codehaus.jackson.JsonStreamContext getOutputContext() -> getOutputContext
    void flush() -> flush
    boolean isClosed() -> isClosed
    void close() -> close
org.codehaus.jackson.JsonGenerator$Feature -> org.codehaus.jackson.JsonGenerator$Feature:
    org.codehaus.jackson.JsonGenerator$Feature AUTO_CLOSE_TARGET -> AUTO_CLOSE_TARGET
    org.codehaus.jackson.JsonGenerator$Feature AUTO_CLOSE_JSON_CONTENT -> AUTO_CLOSE_JSON_CONTENT
    org.codehaus.jackson.JsonGenerator$Feature QUOTE_FIELD_NAMES -> QUOTE_FIELD_NAMES
    org.codehaus.jackson.JsonGenerator$Feature QUOTE_NON_NUMERIC_NUMBERS -> QUOTE_NON_NUMERIC_NUMBERS
    org.codehaus.jackson.JsonGenerator$Feature WRITE_NUMBERS_AS_STRINGS -> WRITE_NUMBERS_AS_STRINGS
    org.codehaus.jackson.JsonGenerator$Feature FLUSH_PASSED_TO_STREAM -> FLUSH_PASSED_TO_STREAM
    org.codehaus.jackson.JsonGenerator$Feature ESCAPE_NON_ASCII -> ESCAPE_NON_ASCII
    boolean _defaultState -> _defaultState
    int _mask -> _mask
    org.codehaus.jackson.JsonGenerator$Feature[] $VALUES -> $VALUES
    org.codehaus.jackson.JsonGenerator$Feature[] values() -> values
    org.codehaus.jackson.JsonGenerator$Feature valueOf(java.lang.String) -> valueOf
    int collectDefaults() -> collectDefaults
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
org.codehaus.jackson.JsonLocation -> org.codehaus.jackson.JsonLocation:
    long serialVersionUID -> serialVersionUID
    org.codehaus.jackson.JsonLocation NA -> NA
    long _totalBytes -> _totalBytes
    long _totalChars -> _totalChars
    int _lineNr -> _lineNr
    int _columnNr -> _columnNr
    java.lang.Object _sourceRef -> _sourceRef
    java.lang.Object getSourceRef() -> getSourceRef
    int getLineNr() -> getLineNr
    int getColumnNr() -> getColumnNr
    long getCharOffset() -> getCharOffset
    long getByteOffset() -> getByteOffset
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.JsonNode -> org.codehaus.jackson.JsonNode:
    java.util.List NO_NODES -> NO_NODES
    java.util.List NO_STRINGS -> NO_STRINGS
    boolean isValueNode() -> isValueNode
    boolean isContainerNode() -> isContainerNode
    boolean isMissingNode() -> isMissingNode
    boolean isArray() -> isArray
    boolean isObject() -> isObject
    boolean isPojo() -> isPojo
    boolean isNumber() -> isNumber
    boolean isIntegralNumber() -> isIntegralNumber
    boolean isFloatingPointNumber() -> isFloatingPointNumber
    boolean isInt() -> isInt
    boolean isLong() -> isLong
    boolean isDouble() -> isDouble
    boolean isBigDecimal() -> isBigDecimal
    boolean isBigInteger() -> isBigInteger
    boolean isTextual() -> isTextual
    boolean isBoolean() -> isBoolean
    boolean isNull() -> isNull
    boolean isBinary() -> isBinary
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.String getTextValue() -> getTextValue
    byte[] getBinaryValue() -> getBinaryValue
    boolean getBooleanValue() -> getBooleanValue
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    org.codehaus.jackson.JsonNode get(int) -> get
    org.codehaus.jackson.JsonNode get(java.lang.String) -> get
    java.lang.String asText() -> asText
    int asInt() -> asInt
    int asInt(int) -> asInt
    long asLong() -> asLong
    long asLong(long) -> asLong
    double asDouble() -> asDouble
    double asDouble(double) -> asDouble
    boolean asBoolean() -> asBoolean
    boolean asBoolean(boolean) -> asBoolean
    java.lang.String getValueAsText() -> getValueAsText
    int getValueAsInt() -> getValueAsInt
    int getValueAsInt(int) -> getValueAsInt
    long getValueAsLong() -> getValueAsLong
    long getValueAsLong(long) -> getValueAsLong
    double getValueAsDouble() -> getValueAsDouble
    double getValueAsDouble(double) -> getValueAsDouble
    boolean getValueAsBoolean() -> getValueAsBoolean
    boolean getValueAsBoolean(boolean) -> getValueAsBoolean
    boolean has(java.lang.String) -> has
    boolean has(int) -> has
    org.codehaus.jackson.JsonNode findValue(java.lang.String) -> findValue
    java.util.List findValues(java.lang.String) -> findValues
    java.util.List findValuesAsText(java.lang.String) -> findValuesAsText
    org.codehaus.jackson.JsonNode findPath(java.lang.String) -> findPath
    org.codehaus.jackson.JsonNode findParent(java.lang.String) -> findParent
    java.util.List findParents(java.lang.String) -> findParents
    java.util.List findValues(java.lang.String,java.util.List) -> findValues
    java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    java.util.List findParents(java.lang.String,java.util.List) -> findParents
    int size() -> size
    java.util.Iterator iterator() -> iterator
    java.util.Iterator getElements() -> getElements
    java.util.Iterator getFieldNames() -> getFieldNames
    java.util.Iterator getFields() -> getFields
    org.codehaus.jackson.JsonNode path(java.lang.String) -> path
    org.codehaus.jackson.JsonNode getPath(java.lang.String) -> getPath
    org.codehaus.jackson.JsonNode path(int) -> path
    org.codehaus.jackson.JsonNode getPath(int) -> getPath
    org.codehaus.jackson.JsonNode with(java.lang.String) -> with
    org.codehaus.jackson.JsonParser traverse() -> traverse
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.JsonParseException -> org.codehaus.jackson.JsonParseException:
    long serialVersionUID -> serialVersionUID
org.codehaus.jackson.JsonParser -> org.codehaus.jackson.JsonParser:
    int MIN_BYTE_I -> MIN_BYTE_I
    int MAX_BYTE_I -> MAX_BYTE_I
    int MIN_SHORT_I -> MIN_SHORT_I
    int MAX_SHORT_I -> MAX_SHORT_I
    int _features -> _features
    org.codehaus.jackson.JsonToken _currToken -> _currToken
    org.codehaus.jackson.JsonToken _lastClearedToken -> _lastClearedToken
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    void setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    void setSchema(org.codehaus.jackson.FormatSchema) -> setSchema
    boolean canUseSchema(org.codehaus.jackson.FormatSchema) -> canUseSchema
    org.codehaus.jackson.Version version() -> version
    java.lang.Object getInputSource() -> getInputSource
    void close() -> close
    int releaseBuffered(java.io.OutputStream) -> releaseBuffered
    int releaseBuffered(java.io.Writer) -> releaseBuffered
    org.codehaus.jackson.JsonParser enable(org.codehaus.jackson.JsonParser$Feature) -> enable
    org.codehaus.jackson.JsonParser disable(org.codehaus.jackson.JsonParser$Feature) -> disable
    org.codehaus.jackson.JsonParser configure(org.codehaus.jackson.JsonParser$Feature,boolean) -> configure
    boolean isEnabled(org.codehaus.jackson.JsonParser$Feature) -> isEnabled
    void setFeature(org.codehaus.jackson.JsonParser$Feature,boolean) -> setFeature
    void enableFeature(org.codehaus.jackson.JsonParser$Feature) -> enableFeature
    void disableFeature(org.codehaus.jackson.JsonParser$Feature) -> disableFeature
    boolean isFeatureEnabled(org.codehaus.jackson.JsonParser$Feature) -> isFeatureEnabled
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken nextValue() -> nextValue
    boolean nextFieldName(org.codehaus.jackson.SerializableString) -> nextFieldName
    java.lang.String nextTextValue() -> nextTextValue
    int nextIntValue(int) -> nextIntValue
    long nextLongValue(long) -> nextLongValue
    java.lang.Boolean nextBooleanValue() -> nextBooleanValue
    org.codehaus.jackson.JsonParser skipChildren() -> skipChildren
    boolean isClosed() -> isClosed
    org.codehaus.jackson.JsonToken getCurrentToken() -> getCurrentToken
    boolean hasCurrentToken() -> hasCurrentToken
    void clearCurrentToken() -> clearCurrentToken
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonStreamContext getParsingContext() -> getParsingContext
    org.codehaus.jackson.JsonLocation getTokenLocation() -> getTokenLocation
    org.codehaus.jackson.JsonLocation getCurrentLocation() -> getCurrentLocation
    org.codehaus.jackson.JsonToken getLastClearedToken() -> getLastClearedToken
    boolean isExpectedStartArrayToken() -> isExpectedStartArrayToken
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    boolean hasTextCharacters() -> hasTextCharacters
    java.lang.Number getNumberValue() -> getNumberValue
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    byte getByteValue() -> getByteValue
    short getShortValue() -> getShortValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    float getFloatValue() -> getFloatValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    boolean getBooleanValue() -> getBooleanValue
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    byte[] getBinaryValue() -> getBinaryValue
    int getValueAsInt() -> getValueAsInt
    int getValueAsInt(int) -> getValueAsInt
    long getValueAsLong() -> getValueAsLong
    long getValueAsLong(long) -> getValueAsLong
    double getValueAsDouble() -> getValueAsDouble
    double getValueAsDouble(double) -> getValueAsDouble
    boolean getValueAsBoolean() -> getValueAsBoolean
    boolean getValueAsBoolean(boolean) -> getValueAsBoolean
    java.lang.Object readValueAs(java.lang.Class) -> readValueAs
    java.lang.Object readValueAs(org.codehaus.jackson.type.TypeReference) -> readValueAs
    java.util.Iterator readValuesAs(java.lang.Class) -> readValuesAs
    java.util.Iterator readValuesAs(org.codehaus.jackson.type.TypeReference) -> readValuesAs
    org.codehaus.jackson.JsonNode readValueAsTree() -> readValueAsTree
    org.codehaus.jackson.JsonParseException _constructError(java.lang.String) -> _constructError
org.codehaus.jackson.JsonParser$1 -> org.codehaus.jackson.JsonParser$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.JsonParser$Feature -> org.codehaus.jackson.JsonParser$Feature:
    org.codehaus.jackson.JsonParser$Feature AUTO_CLOSE_SOURCE -> AUTO_CLOSE_SOURCE
    org.codehaus.jackson.JsonParser$Feature ALLOW_COMMENTS -> ALLOW_COMMENTS
    org.codehaus.jackson.JsonParser$Feature ALLOW_UNQUOTED_FIELD_NAMES -> ALLOW_UNQUOTED_FIELD_NAMES
    org.codehaus.jackson.JsonParser$Feature ALLOW_SINGLE_QUOTES -> ALLOW_SINGLE_QUOTES
    org.codehaus.jackson.JsonParser$Feature ALLOW_UNQUOTED_CONTROL_CHARS -> ALLOW_UNQUOTED_CONTROL_CHARS
    org.codehaus.jackson.JsonParser$Feature ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER -> ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER
    org.codehaus.jackson.JsonParser$Feature ALLOW_NUMERIC_LEADING_ZEROS -> ALLOW_NUMERIC_LEADING_ZEROS
    org.codehaus.jackson.JsonParser$Feature ALLOW_NON_NUMERIC_NUMBERS -> ALLOW_NON_NUMERIC_NUMBERS
    org.codehaus.jackson.JsonParser$Feature INTERN_FIELD_NAMES -> INTERN_FIELD_NAMES
    org.codehaus.jackson.JsonParser$Feature CANONICALIZE_FIELD_NAMES -> CANONICALIZE_FIELD_NAMES
    boolean _defaultState -> _defaultState
    org.codehaus.jackson.JsonParser$Feature[] $VALUES -> $VALUES
    org.codehaus.jackson.JsonParser$Feature[] values() -> values
    org.codehaus.jackson.JsonParser$Feature valueOf(java.lang.String) -> valueOf
    int collectDefaults() -> collectDefaults
    boolean enabledByDefault() -> enabledByDefault
    boolean enabledIn(int) -> enabledIn
    int getMask() -> getMask
org.codehaus.jackson.JsonParser$NumberType -> org.codehaus.jackson.JsonParser$NumberType:
    org.codehaus.jackson.JsonParser$NumberType INT -> INT
    org.codehaus.jackson.JsonParser$NumberType LONG -> LONG
    org.codehaus.jackson.JsonParser$NumberType BIG_INTEGER -> BIG_INTEGER
    org.codehaus.jackson.JsonParser$NumberType FLOAT -> FLOAT
    org.codehaus.jackson.JsonParser$NumberType DOUBLE -> DOUBLE
    org.codehaus.jackson.JsonParser$NumberType BIG_DECIMAL -> BIG_DECIMAL
    org.codehaus.jackson.JsonParser$NumberType[] $VALUES -> $VALUES
    org.codehaus.jackson.JsonParser$NumberType[] values() -> values
    org.codehaus.jackson.JsonParser$NumberType valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.JsonProcessingException -> org.codehaus.jackson.JsonProcessingException:
    long serialVersionUID -> serialVersionUID
    org.codehaus.jackson.JsonLocation mLocation -> mLocation
    org.codehaus.jackson.JsonLocation getLocation() -> getLocation
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
org.codehaus.jackson.JsonStreamContext -> org.codehaus.jackson.JsonStreamContext:
    int TYPE_ROOT -> TYPE_ROOT
    int TYPE_ARRAY -> TYPE_ARRAY
    int TYPE_OBJECT -> TYPE_OBJECT
    int _type -> _type
    int _index -> _index
    org.codehaus.jackson.JsonStreamContext getParent() -> getParent
    boolean inArray() -> inArray
    boolean inRoot() -> inRoot
    boolean inObject() -> inObject
    java.lang.String getTypeDesc() -> getTypeDesc
    int getEntryCount() -> getEntryCount
    int getCurrentIndex() -> getCurrentIndex
    java.lang.String getCurrentName() -> getCurrentName
org.codehaus.jackson.JsonToken -> org.codehaus.jackson.JsonToken:
    org.codehaus.jackson.JsonToken NOT_AVAILABLE -> NOT_AVAILABLE
    org.codehaus.jackson.JsonToken START_OBJECT -> START_OBJECT
    org.codehaus.jackson.JsonToken END_OBJECT -> END_OBJECT
    org.codehaus.jackson.JsonToken START_ARRAY -> START_ARRAY
    org.codehaus.jackson.JsonToken END_ARRAY -> END_ARRAY
    org.codehaus.jackson.JsonToken FIELD_NAME -> FIELD_NAME
    org.codehaus.jackson.JsonToken VALUE_EMBEDDED_OBJECT -> VALUE_EMBEDDED_OBJECT
    org.codehaus.jackson.JsonToken VALUE_STRING -> VALUE_STRING
    org.codehaus.jackson.JsonToken VALUE_NUMBER_INT -> VALUE_NUMBER_INT
    org.codehaus.jackson.JsonToken VALUE_NUMBER_FLOAT -> VALUE_NUMBER_FLOAT
    org.codehaus.jackson.JsonToken VALUE_TRUE -> VALUE_TRUE
    org.codehaus.jackson.JsonToken VALUE_FALSE -> VALUE_FALSE
    org.codehaus.jackson.JsonToken VALUE_NULL -> VALUE_NULL
    java.lang.String _serialized -> _serialized
    char[] _serializedChars -> _serializedChars
    byte[] _serializedBytes -> _serializedBytes
    org.codehaus.jackson.JsonToken[] $VALUES -> $VALUES
    org.codehaus.jackson.JsonToken[] values() -> values
    org.codehaus.jackson.JsonToken valueOf(java.lang.String) -> valueOf
    java.lang.String asString() -> asString
    char[] asCharArray() -> asCharArray
    byte[] asByteArray() -> asByteArray
    boolean isNumeric() -> isNumeric
    boolean isScalarValue() -> isScalarValue
org.codehaus.jackson.ObjectCodec -> org.codehaus.jackson.ObjectCodec:
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,java.lang.Class) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> readValue
    org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser) -> readTree
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,java.lang.Class) -> readValues
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference) -> readValues
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> readValues
    void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> writeValue
    void writeTree(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.JsonNode) -> writeTree
    org.codehaus.jackson.JsonNode createObjectNode() -> createObjectNode
    org.codehaus.jackson.JsonNode createArrayNode() -> createArrayNode
    org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode) -> treeAsTokens
    java.lang.Object treeToValue(org.codehaus.jackson.JsonNode,java.lang.Class) -> treeToValue
org.codehaus.jackson.PrettyPrinter -> org.codehaus.jackson.PrettyPrinter:
    void writeRootValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeRootValueSeparator
    void writeStartObject(org.codehaus.jackson.JsonGenerator) -> writeStartObject
    void writeEndObject(org.codehaus.jackson.JsonGenerator,int) -> writeEndObject
    void writeObjectEntrySeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectEntrySeparator
    void writeObjectFieldValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectFieldValueSeparator
    void writeStartArray(org.codehaus.jackson.JsonGenerator) -> writeStartArray
    void writeEndArray(org.codehaus.jackson.JsonGenerator,int) -> writeEndArray
    void writeArrayValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeArrayValueSeparator
    void beforeArrayValues(org.codehaus.jackson.JsonGenerator) -> beforeArrayValues
    void beforeObjectEntries(org.codehaus.jackson.JsonGenerator) -> beforeObjectEntries
org.codehaus.jackson.SerializableString -> org.codehaus.jackson.SerializableString:
    java.lang.String getValue() -> getValue
    int charLength() -> charLength
    char[] asQuotedChars() -> asQuotedChars
    byte[] asUnquotedUTF8() -> asUnquotedUTF8
    byte[] asQuotedUTF8() -> asQuotedUTF8
org.codehaus.jackson.Version -> org.codehaus.jackson.Version:
    org.codehaus.jackson.Version UNKNOWN_VERSION -> UNKNOWN_VERSION
    int _majorVersion -> _majorVersion
    int _minorVersion -> _minorVersion
    int _patchLevel -> _patchLevel
    java.lang.String _snapshotInfo -> _snapshotInfo
    org.codehaus.jackson.Version unknownVersion() -> unknownVersion
    boolean isUknownVersion() -> isUknownVersion
    boolean isSnapshot() -> isSnapshot
    int getMajorVersion() -> getMajorVersion
    int getMinorVersion() -> getMinorVersion
    int getPatchLevel() -> getPatchLevel
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(org.codehaus.jackson.Version) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
org.codehaus.jackson.Versioned -> org.codehaus.jackson.Versioned:
    org.codehaus.jackson.Version version() -> version
org.codehaus.jackson.annotate.JacksonAnnotation -> org.codehaus.jackson.annotate.JacksonAnnotation:
org.codehaus.jackson.annotate.JsonAnyGetter -> org.codehaus.jackson.annotate.JsonAnyGetter:
org.codehaus.jackson.annotate.JsonAnySetter -> org.codehaus.jackson.annotate.JsonAnySetter:
org.codehaus.jackson.annotate.JsonAutoDetect -> org.codehaus.jackson.annotate.JsonAutoDetect:
    org.codehaus.jackson.annotate.JsonMethod[] value() -> value
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility getterVisibility() -> getterVisibility
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility isGetterVisibility() -> isGetterVisibility
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility setterVisibility() -> setterVisibility
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility creatorVisibility() -> creatorVisibility
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility fieldVisibility() -> fieldVisibility
org.codehaus.jackson.annotate.JsonAutoDetect$1 -> org.codehaus.jackson.annotate.JsonAutoDetect$1:
    int[] $SwitchMap$org$codehaus$jackson$annotate$JsonAutoDetect$Visibility -> $SwitchMap$org$codehaus$jackson$annotate$JsonAutoDetect$Visibility
org.codehaus.jackson.annotate.JsonAutoDetect$Visibility -> org.codehaus.jackson.annotate.JsonAutoDetect$Visibility:
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility ANY -> ANY
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility NON_PRIVATE -> NON_PRIVATE
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility PROTECTED_AND_PUBLIC -> PROTECTED_AND_PUBLIC
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility PUBLIC_ONLY -> PUBLIC_ONLY
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility NONE -> NONE
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility DEFAULT -> DEFAULT
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility[] $VALUES -> $VALUES
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility[] values() -> values
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility valueOf(java.lang.String) -> valueOf
    boolean isVisible(java.lang.reflect.Member) -> isVisible
org.codehaus.jackson.annotate.JsonBackReference -> org.codehaus.jackson.annotate.JsonBackReference:
    java.lang.String value() -> value
org.codehaus.jackson.annotate.JsonCreator -> org.codehaus.jackson.annotate.JsonCreator:
org.codehaus.jackson.annotate.JsonGetter -> org.codehaus.jackson.annotate.JsonGetter:
    java.lang.String value() -> value
org.codehaus.jackson.annotate.JsonIgnore -> org.codehaus.jackson.annotate.JsonIgnore:
    boolean value() -> value
org.codehaus.jackson.annotate.JsonIgnoreProperties -> org.codehaus.jackson.annotate.JsonIgnoreProperties:
    java.lang.String[] value() -> value
    boolean ignoreUnknown() -> ignoreUnknown
org.codehaus.jackson.annotate.JsonIgnoreType -> org.codehaus.jackson.annotate.JsonIgnoreType:
    boolean value() -> value
org.codehaus.jackson.annotate.JsonManagedReference -> org.codehaus.jackson.annotate.JsonManagedReference:
    java.lang.String value() -> value
org.codehaus.jackson.annotate.JsonMethod -> org.codehaus.jackson.annotate.JsonMethod:
    org.codehaus.jackson.annotate.JsonMethod GETTER -> GETTER
    org.codehaus.jackson.annotate.JsonMethod SETTER -> SETTER
    org.codehaus.jackson.annotate.JsonMethod CREATOR -> CREATOR
    org.codehaus.jackson.annotate.JsonMethod FIELD -> FIELD
    org.codehaus.jackson.annotate.JsonMethod IS_GETTER -> IS_GETTER
    org.codehaus.jackson.annotate.JsonMethod NONE -> NONE
    org.codehaus.jackson.annotate.JsonMethod ALL -> ALL
    org.codehaus.jackson.annotate.JsonMethod[] $VALUES -> $VALUES
    org.codehaus.jackson.annotate.JsonMethod[] values() -> values
    org.codehaus.jackson.annotate.JsonMethod valueOf(java.lang.String) -> valueOf
    boolean creatorEnabled() -> creatorEnabled
    boolean getterEnabled() -> getterEnabled
    boolean isGetterEnabled() -> isGetterEnabled
    boolean setterEnabled() -> setterEnabled
    boolean fieldEnabled() -> fieldEnabled
org.codehaus.jackson.annotate.JsonProperty -> org.codehaus.jackson.annotate.JsonProperty:
    java.lang.String value() -> value
org.codehaus.jackson.annotate.JsonPropertyOrder -> org.codehaus.jackson.annotate.JsonPropertyOrder:
    java.lang.String[] value() -> value
    boolean alphabetic() -> alphabetic
org.codehaus.jackson.annotate.JsonRawValue -> org.codehaus.jackson.annotate.JsonRawValue:
    boolean value() -> value
org.codehaus.jackson.annotate.JsonSetter -> org.codehaus.jackson.annotate.JsonSetter:
    java.lang.String value() -> value
org.codehaus.jackson.annotate.JsonSubTypes -> org.codehaus.jackson.annotate.JsonSubTypes:
    org.codehaus.jackson.annotate.JsonSubTypes$Type[] value() -> value
org.codehaus.jackson.annotate.JsonSubTypes$Type -> org.codehaus.jackson.annotate.JsonSubTypes$Type:
    java.lang.Class value() -> value
    java.lang.String name() -> name
org.codehaus.jackson.annotate.JsonTypeInfo -> org.codehaus.jackson.annotate.JsonTypeInfo:
    org.codehaus.jackson.annotate.JsonTypeInfo$Id use() -> use
    org.codehaus.jackson.annotate.JsonTypeInfo$As include() -> include
    java.lang.String property() -> property
    java.lang.Class defaultImpl() -> defaultImpl
org.codehaus.jackson.annotate.JsonTypeInfo$As -> org.codehaus.jackson.annotate.JsonTypeInfo$As:
    org.codehaus.jackson.annotate.JsonTypeInfo$As PROPERTY -> PROPERTY
    org.codehaus.jackson.annotate.JsonTypeInfo$As WRAPPER_OBJECT -> WRAPPER_OBJECT
    org.codehaus.jackson.annotate.JsonTypeInfo$As WRAPPER_ARRAY -> WRAPPER_ARRAY
    org.codehaus.jackson.annotate.JsonTypeInfo$As EXTERNAL_PROPERTY -> EXTERNAL_PROPERTY
    org.codehaus.jackson.annotate.JsonTypeInfo$As[] $VALUES -> $VALUES
    org.codehaus.jackson.annotate.JsonTypeInfo$As[] values() -> values
    org.codehaus.jackson.annotate.JsonTypeInfo$As valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.annotate.JsonTypeInfo$Id -> org.codehaus.jackson.annotate.JsonTypeInfo$Id:
    org.codehaus.jackson.annotate.JsonTypeInfo$Id NONE -> NONE
    org.codehaus.jackson.annotate.JsonTypeInfo$Id CLASS -> CLASS
    org.codehaus.jackson.annotate.JsonTypeInfo$Id MINIMAL_CLASS -> MINIMAL_CLASS
    org.codehaus.jackson.annotate.JsonTypeInfo$Id NAME -> NAME
    org.codehaus.jackson.annotate.JsonTypeInfo$Id CUSTOM -> CUSTOM
    java.lang.String _defaultPropertyName -> _defaultPropertyName
    org.codehaus.jackson.annotate.JsonTypeInfo$Id[] $VALUES -> $VALUES
    org.codehaus.jackson.annotate.JsonTypeInfo$Id[] values() -> values
    org.codehaus.jackson.annotate.JsonTypeInfo$Id valueOf(java.lang.String) -> valueOf
    java.lang.String getDefaultPropertyName() -> getDefaultPropertyName
org.codehaus.jackson.annotate.JsonTypeInfo$None -> org.codehaus.jackson.annotate.JsonTypeInfo$None:
org.codehaus.jackson.annotate.JsonTypeName -> org.codehaus.jackson.annotate.JsonTypeName:
    java.lang.String value() -> value
org.codehaus.jackson.annotate.JsonUnwrapped -> org.codehaus.jackson.annotate.JsonUnwrapped:
    boolean enabled() -> enabled
org.codehaus.jackson.annotate.JsonValue -> org.codehaus.jackson.annotate.JsonValue:
    boolean value() -> value
org.codehaus.jackson.annotate.JsonWriteNullProperties -> org.codehaus.jackson.annotate.JsonWriteNullProperties:
    boolean value() -> value
org.codehaus.jackson.format.DataFormatDetector -> org.codehaus.jackson.format.DataFormatDetector:
    int DEFAULT_MAX_INPUT_LOOKAHEAD -> DEFAULT_MAX_INPUT_LOOKAHEAD
    org.codehaus.jackson.JsonFactory[] _detectors -> _detectors
    org.codehaus.jackson.format.MatchStrength _optimalMatch -> _optimalMatch
    org.codehaus.jackson.format.MatchStrength _minimalMatch -> _minimalMatch
    int _maxInputLookahead -> _maxInputLookahead
    org.codehaus.jackson.format.DataFormatDetector withOptimalMatch(org.codehaus.jackson.format.MatchStrength) -> withOptimalMatch
    org.codehaus.jackson.format.DataFormatDetector withMinimalMatch(org.codehaus.jackson.format.MatchStrength) -> withMinimalMatch
    org.codehaus.jackson.format.DataFormatDetector withMaxInputLookahead(int) -> withMaxInputLookahead
    org.codehaus.jackson.format.DataFormatMatcher findFormat(java.io.InputStream) -> findFormat
    org.codehaus.jackson.format.DataFormatMatcher findFormat(byte[]) -> findFormat
    org.codehaus.jackson.format.DataFormatMatcher _findFormat(org.codehaus.jackson.format.InputAccessor$Std) -> _findFormat
org.codehaus.jackson.format.DataFormatMatcher -> org.codehaus.jackson.format.DataFormatMatcher:
    java.io.InputStream _originalStream -> _originalStream
    byte[] _bufferedData -> _bufferedData
    int _bufferedLength -> _bufferedLength
    org.codehaus.jackson.JsonFactory _match -> _match
    org.codehaus.jackson.format.MatchStrength _matchStrength -> _matchStrength
    boolean hasMatch() -> hasMatch
    org.codehaus.jackson.format.MatchStrength getMatchStrength() -> getMatchStrength
    org.codehaus.jackson.JsonFactory getMatch() -> getMatch
    java.lang.String getMatchedFormatName() -> getMatchedFormatName
    org.codehaus.jackson.JsonParser createParserWithMatch() -> createParserWithMatch
    java.io.InputStream getDataStream() -> getDataStream
org.codehaus.jackson.format.InputAccessor -> org.codehaus.jackson.format.InputAccessor:
    boolean hasMoreBytes() -> hasMoreBytes
    byte nextByte() -> nextByte
    void reset() -> reset
org.codehaus.jackson.format.InputAccessor$Std -> org.codehaus.jackson.format.InputAccessor$Std:
    java.io.InputStream _in -> _in
    byte[] _buffer -> _buffer
    int _bufferedAmount -> _bufferedAmount
    int _ptr -> _ptr
    boolean hasMoreBytes() -> hasMoreBytes
    byte nextByte() -> nextByte
    void reset() -> reset
    org.codehaus.jackson.format.DataFormatMatcher createMatcher(org.codehaus.jackson.JsonFactory,org.codehaus.jackson.format.MatchStrength) -> createMatcher
org.codehaus.jackson.format.MatchStrength -> org.codehaus.jackson.format.MatchStrength:
    org.codehaus.jackson.format.MatchStrength NO_MATCH -> NO_MATCH
    org.codehaus.jackson.format.MatchStrength INCONCLUSIVE -> INCONCLUSIVE
    org.codehaus.jackson.format.MatchStrength WEAK_MATCH -> WEAK_MATCH
    org.codehaus.jackson.format.MatchStrength SOLID_MATCH -> SOLID_MATCH
    org.codehaus.jackson.format.MatchStrength FULL_MATCH -> FULL_MATCH
    org.codehaus.jackson.format.MatchStrength[] $VALUES -> $VALUES
    org.codehaus.jackson.format.MatchStrength[] values() -> values
    org.codehaus.jackson.format.MatchStrength valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.impl.ByteSourceBootstrapper -> org.codehaus.jackson.impl.ByteSourceBootstrapper:
    byte UTF8_BOM_1 -> UTF8_BOM_1
    byte UTF8_BOM_2 -> UTF8_BOM_2
    byte UTF8_BOM_3 -> UTF8_BOM_3
    org.codehaus.jackson.io.IOContext _context -> _context
    java.io.InputStream _in -> _in
    byte[] _inputBuffer -> _inputBuffer
    int _inputPtr -> _inputPtr
    int _inputEnd -> _inputEnd
    boolean _bufferRecyclable -> _bufferRecyclable
    int _inputProcessed -> _inputProcessed
    boolean _bigEndian -> _bigEndian
    int _bytesPerChar -> _bytesPerChar
    org.codehaus.jackson.JsonEncoding detectEncoding() -> detectEncoding
    java.io.Reader constructReader() -> constructReader
    org.codehaus.jackson.JsonParser constructParser(int,org.codehaus.jackson.ObjectCodec,org.codehaus.jackson.sym.BytesToNameCanonicalizer,org.codehaus.jackson.sym.CharsToNameCanonicalizer) -> constructParser
    org.codehaus.jackson.format.MatchStrength hasJSONFormat(org.codehaus.jackson.format.InputAccessor) -> hasJSONFormat
    org.codehaus.jackson.format.MatchStrength tryMatch(org.codehaus.jackson.format.InputAccessor,java.lang.String,org.codehaus.jackson.format.MatchStrength) -> tryMatch
    int skipSpace(org.codehaus.jackson.format.InputAccessor) -> skipSpace
    int skipSpace(org.codehaus.jackson.format.InputAccessor,byte) -> skipSpace
    boolean handleBOM(int) -> handleBOM
    boolean checkUTF32(int) -> checkUTF32
    boolean checkUTF16(int) -> checkUTF16
    void reportWeirdUCS4(java.lang.String) -> reportWeirdUCS4
    boolean ensureLoaded(int) -> ensureLoaded
org.codehaus.jackson.impl.ByteSourceBootstrapper$1 -> org.codehaus.jackson.impl.ByteSourceBootstrapper$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonEncoding -> $SwitchMap$org$codehaus$jackson$JsonEncoding
org.codehaus.jackson.impl.DefaultPrettyPrinter -> org.codehaus.jackson.impl.DefaultPrettyPrinter:
org.codehaus.jackson.impl.Indenter -> org.codehaus.jackson.impl.Indenter:
    void writeIndentation(org.codehaus.jackson.JsonGenerator,int) -> writeIndentation
    boolean isInline() -> isInline
org.codehaus.jackson.impl.JsonGeneratorBase -> org.codehaus.jackson.impl.JsonGeneratorBase:
    org.codehaus.jackson.ObjectCodec _objectCodec -> _objectCodec
    int _features -> _features
    boolean _cfgNumbersAsStrings -> _cfgNumbersAsStrings
    org.codehaus.jackson.impl.JsonWriteContext _writeContext -> _writeContext
    boolean _closed -> _closed
    org.codehaus.jackson.Version version() -> version
    org.codehaus.jackson.JsonGenerator enable(org.codehaus.jackson.JsonGenerator$Feature) -> enable
    org.codehaus.jackson.JsonGenerator disable(org.codehaus.jackson.JsonGenerator$Feature) -> disable
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    org.codehaus.jackson.JsonGenerator setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    org.codehaus.jackson.impl.JsonWriteContext getOutputContext() -> getOutputContext
    void writeStartArray() -> writeStartArray
    void _writeStartArray() -> _writeStartArray
    void writeEndArray() -> writeEndArray
    void _writeEndArray() -> _writeEndArray
    void writeStartObject() -> writeStartObject
    void _writeStartObject() -> _writeStartObject
    void writeEndObject() -> writeEndObject
    void _writeEndObject() -> _writeEndObject
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    void writeObject(java.lang.Object) -> writeObject
    void writeTree(org.codehaus.jackson.JsonNode) -> writeTree
    void flush() -> flush
    void close() -> close
    boolean isClosed() -> isClosed
    void copyCurrentEvent(org.codehaus.jackson.JsonParser) -> copyCurrentEvent
    void copyCurrentStructure(org.codehaus.jackson.JsonParser) -> copyCurrentStructure
    void _releaseBuffers() -> _releaseBuffers
    void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    void _reportError(java.lang.String) -> _reportError
    void _cantHappen() -> _cantHappen
    void _writeSimpleObject(java.lang.Object) -> _writeSimpleObject
    void _throwInternal() -> _throwInternal
    void _reportUnsupportedOperation() -> _reportUnsupportedOperation
    org.codehaus.jackson.JsonStreamContext getOutputContext() -> getOutputContext
org.codehaus.jackson.impl.JsonGeneratorBase$1 -> org.codehaus.jackson.impl.JsonGeneratorBase$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType -> $SwitchMap$org$codehaus$jackson$JsonParser$NumberType
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.impl.JsonNumericParserBase -> org.codehaus.jackson.impl.JsonNumericParserBase:
org.codehaus.jackson.impl.JsonParserBase -> org.codehaus.jackson.impl.JsonParserBase:
    org.codehaus.jackson.io.IOContext _ioContext -> _ioContext
    boolean _closed -> _closed
    int _inputPtr -> _inputPtr
    int _inputEnd -> _inputEnd
    long _currInputProcessed -> _currInputProcessed
    int _currInputRow -> _currInputRow
    int _currInputRowStart -> _currInputRowStart
    long _tokenInputTotal -> _tokenInputTotal
    int _tokenInputRow -> _tokenInputRow
    int _tokenInputCol -> _tokenInputCol
    org.codehaus.jackson.impl.JsonReadContext _parsingContext -> _parsingContext
    org.codehaus.jackson.JsonToken _nextToken -> _nextToken
    org.codehaus.jackson.util.TextBuffer _textBuffer -> _textBuffer
    char[] _nameCopyBuffer -> _nameCopyBuffer
    boolean _nameCopied -> _nameCopied
    org.codehaus.jackson.util.ByteArrayBuilder _byteArrayBuilder -> _byteArrayBuilder
    byte[] _binaryValue -> _binaryValue
    int NR_UNKNOWN -> NR_UNKNOWN
    int NR_INT -> NR_INT
    int NR_LONG -> NR_LONG
    int NR_BIGINT -> NR_BIGINT
    int NR_DOUBLE -> NR_DOUBLE
    int NR_BIGDECIMAL -> NR_BIGDECIMAL
    java.math.BigInteger BI_MIN_INT -> BI_MIN_INT
    java.math.BigInteger BI_MAX_INT -> BI_MAX_INT
    java.math.BigInteger BI_MIN_LONG -> BI_MIN_LONG
    java.math.BigInteger BI_MAX_LONG -> BI_MAX_LONG
    java.math.BigDecimal BD_MIN_LONG -> BD_MIN_LONG
    java.math.BigDecimal BD_MAX_LONG -> BD_MAX_LONG
    java.math.BigDecimal BD_MIN_INT -> BD_MIN_INT
    java.math.BigDecimal BD_MAX_INT -> BD_MAX_INT
    long MIN_INT_L -> MIN_INT_L
    long MAX_INT_L -> MAX_INT_L
    double MIN_LONG_D -> MIN_LONG_D
    double MAX_LONG_D -> MAX_LONG_D
    double MIN_INT_D -> MIN_INT_D
    double MAX_INT_D -> MAX_INT_D
    int INT_0 -> INT_0
    int INT_1 -> INT_1
    int INT_2 -> INT_2
    int INT_3 -> INT_3
    int INT_4 -> INT_4
    int INT_5 -> INT_5
    int INT_6 -> INT_6
    int INT_7 -> INT_7
    int INT_8 -> INT_8
    int INT_9 -> INT_9
    int INT_MINUS -> INT_MINUS
    int INT_PLUS -> INT_PLUS
    int INT_DECIMAL_POINT -> INT_DECIMAL_POINT
    int INT_e -> INT_e
    int INT_E -> INT_E
    char CHAR_NULL -> CHAR_NULL
    int _numTypesValid -> _numTypesValid
    int _numberInt -> _numberInt
    long _numberLong -> _numberLong
    double _numberDouble -> _numberDouble
    java.math.BigInteger _numberBigInt -> _numberBigInt
    java.math.BigDecimal _numberBigDecimal -> _numberBigDecimal
    boolean _numberNegative -> _numberNegative
    int _intLength -> _intLength
    int _fractLength -> _fractLength
    int _expLength -> _expLength
    org.codehaus.jackson.Version version() -> version
    java.lang.String getCurrentName() -> getCurrentName
    void close() -> close
    boolean isClosed() -> isClosed
    org.codehaus.jackson.impl.JsonReadContext getParsingContext() -> getParsingContext
    org.codehaus.jackson.JsonLocation getTokenLocation() -> getTokenLocation
    org.codehaus.jackson.JsonLocation getCurrentLocation() -> getCurrentLocation
    boolean hasTextCharacters() -> hasTextCharacters
    long getTokenCharacterOffset() -> getTokenCharacterOffset
    int getTokenLineNr() -> getTokenLineNr
    int getTokenColumnNr() -> getTokenColumnNr
    void loadMoreGuaranteed() -> loadMoreGuaranteed
    boolean loadMore() -> loadMore
    void _finishString() -> _finishString
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
    void _handleEOF() -> _handleEOF
    void _reportMismatchedEndMarker(int,char) -> _reportMismatchedEndMarker
    org.codehaus.jackson.util.ByteArrayBuilder _getByteArrayBuilder() -> _getByteArrayBuilder
    org.codehaus.jackson.JsonToken reset(boolean,int,int,int) -> reset
    org.codehaus.jackson.JsonToken resetInt(boolean,int) -> resetInt
    org.codehaus.jackson.JsonToken resetFloat(boolean,int,int,int) -> resetFloat
    org.codehaus.jackson.JsonToken resetAsNaN(java.lang.String,double) -> resetAsNaN
    java.lang.Number getNumberValue() -> getNumberValue
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    float getFloatValue() -> getFloatValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    void _parseNumericValue(int) -> _parseNumericValue
    void _parseSlowFloatValue(int) -> _parseSlowFloatValue
    void _parseSlowIntValue(int,char[],int,int) -> _parseSlowIntValue
    void convertNumberToInt() -> convertNumberToInt
    void convertNumberToLong() -> convertNumberToLong
    void convertNumberToBigInteger() -> convertNumberToBigInteger
    void convertNumberToDouble() -> convertNumberToDouble
    void convertNumberToBigDecimal() -> convertNumberToBigDecimal
    void reportUnexpectedNumberChar(int,java.lang.String) -> reportUnexpectedNumberChar
    void reportInvalidNumber(java.lang.String) -> reportInvalidNumber
    void reportOverflowInt() -> reportOverflowInt
    void reportOverflowLong() -> reportOverflowLong
    char _decodeEscaped() -> _decodeEscaped
    int _decodeBase64Escape(org.codehaus.jackson.Base64Variant,int,int) -> _decodeBase64Escape
    int _decodeBase64Escape(org.codehaus.jackson.Base64Variant,char,int) -> _decodeBase64Escape
    java.lang.IllegalArgumentException reportInvalidBase64Char(org.codehaus.jackson.Base64Variant,int,int) -> reportInvalidBase64Char
    java.lang.IllegalArgumentException reportInvalidBase64Char(org.codehaus.jackson.Base64Variant,int,int,java.lang.String) -> reportInvalidBase64Char
    org.codehaus.jackson.JsonStreamContext getParsingContext() -> getParsingContext
org.codehaus.jackson.impl.JsonParserMinimalBase -> org.codehaus.jackson.impl.JsonParserMinimalBase:
    int INT_TAB -> INT_TAB
    int INT_LF -> INT_LF
    int INT_CR -> INT_CR
    int INT_SPACE -> INT_SPACE
    int INT_LBRACKET -> INT_LBRACKET
    int INT_RBRACKET -> INT_RBRACKET
    int INT_LCURLY -> INT_LCURLY
    int INT_RCURLY -> INT_RCURLY
    int INT_QUOTE -> INT_QUOTE
    int INT_BACKSLASH -> INT_BACKSLASH
    int INT_SLASH -> INT_SLASH
    int INT_COLON -> INT_COLON
    int INT_COMMA -> INT_COMMA
    int INT_ASTERISK -> INT_ASTERISK
    int INT_APOSTROPHE -> INT_APOSTROPHE
    int INT_b -> INT_b
    int INT_f -> INT_f
    int INT_n -> INT_n
    int INT_r -> INT_r
    int INT_t -> INT_t
    int INT_u -> INT_u
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonParser skipChildren() -> skipChildren
    void _handleEOF() -> _handleEOF
    java.lang.String getCurrentName() -> getCurrentName
    void close() -> close
    boolean isClosed() -> isClosed
    org.codehaus.jackson.JsonStreamContext getParsingContext() -> getParsingContext
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    boolean hasTextCharacters() -> hasTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    boolean getValueAsBoolean(boolean) -> getValueAsBoolean
    int getValueAsInt(int) -> getValueAsInt
    long getValueAsLong(long) -> getValueAsLong
    double getValueAsDouble(double) -> getValueAsDouble
    void _decodeBase64(java.lang.String,org.codehaus.jackson.util.ByteArrayBuilder,org.codehaus.jackson.Base64Variant) -> _decodeBase64
    void _reportInvalidBase64(org.codehaus.jackson.Base64Variant,char,int,java.lang.String) -> _reportInvalidBase64
    void _reportBase64EOF() -> _reportBase64EOF
    void _reportUnexpectedChar(int,java.lang.String) -> _reportUnexpectedChar
    void _reportInvalidEOF() -> _reportInvalidEOF
    void _reportInvalidEOF(java.lang.String) -> _reportInvalidEOF
    void _reportInvalidEOFInValue() -> _reportInvalidEOFInValue
    void _throwInvalidSpace(int) -> _throwInvalidSpace
    void _throwUnquotedSpace(int,java.lang.String) -> _throwUnquotedSpace
    char _handleUnrecognizedCharacterEscape(char) -> _handleUnrecognizedCharacterEscape
    java.lang.String _getCharDesc(int) -> _getCharDesc
    void _reportError(java.lang.String) -> _reportError
    void _wrapError(java.lang.String,java.lang.Throwable) -> _wrapError
    void _throwInternal() -> _throwInternal
    org.codehaus.jackson.JsonParseException _constructError(java.lang.String,java.lang.Throwable) -> _constructError
org.codehaus.jackson.impl.JsonParserMinimalBase$1 -> org.codehaus.jackson.impl.JsonParserMinimalBase$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.impl.JsonReadContext -> org.codehaus.jackson.impl.JsonReadContext:
    org.codehaus.jackson.impl.JsonReadContext _parent -> _parent
    int _lineNr -> _lineNr
    int _columnNr -> _columnNr
    java.lang.String _currentName -> _currentName
    org.codehaus.jackson.impl.JsonReadContext _child -> _child
    void reset(int,int,int) -> reset
    org.codehaus.jackson.impl.JsonReadContext createRootContext(int,int) -> createRootContext
    org.codehaus.jackson.impl.JsonReadContext createRootContext() -> createRootContext
    org.codehaus.jackson.impl.JsonReadContext createChildArrayContext(int,int) -> createChildArrayContext
    org.codehaus.jackson.impl.JsonReadContext createChildObjectContext(int,int) -> createChildObjectContext
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.impl.JsonReadContext getParent() -> getParent
    org.codehaus.jackson.JsonLocation getStartLocation(java.lang.Object) -> getStartLocation
    boolean expectComma() -> expectComma
    void setCurrentName(java.lang.String) -> setCurrentName
    java.lang.String toString() -> toString
    org.codehaus.jackson.JsonStreamContext getParent() -> getParent
org.codehaus.jackson.impl.JsonWriteContext -> org.codehaus.jackson.impl.JsonWriteContext:
    int STATUS_OK_AS_IS -> STATUS_OK_AS_IS
    int STATUS_OK_AFTER_COMMA -> STATUS_OK_AFTER_COMMA
    int STATUS_OK_AFTER_COLON -> STATUS_OK_AFTER_COLON
    int STATUS_OK_AFTER_SPACE -> STATUS_OK_AFTER_SPACE
    int STATUS_EXPECT_VALUE -> STATUS_EXPECT_VALUE
    int STATUS_EXPECT_NAME -> STATUS_EXPECT_NAME
    org.codehaus.jackson.impl.JsonWriteContext _parent -> _parent
    java.lang.String _currentName -> _currentName
    org.codehaus.jackson.impl.JsonWriteContext _child -> _child
    org.codehaus.jackson.impl.JsonWriteContext createRootContext() -> createRootContext
    org.codehaus.jackson.impl.JsonWriteContext reset(int) -> reset
    org.codehaus.jackson.impl.JsonWriteContext createChildArrayContext() -> createChildArrayContext
    org.codehaus.jackson.impl.JsonWriteContext createChildObjectContext() -> createChildObjectContext
    org.codehaus.jackson.impl.JsonWriteContext getParent() -> getParent
    java.lang.String getCurrentName() -> getCurrentName
    int writeFieldName(java.lang.String) -> writeFieldName
    int writeValue() -> writeValue
    void appendDesc(java.lang.StringBuilder) -> appendDesc
    java.lang.String toString() -> toString
    org.codehaus.jackson.JsonStreamContext getParent() -> getParent
org.codehaus.jackson.impl.ReaderBasedParser -> org.codehaus.jackson.impl.ReaderBasedParser:
    java.io.Reader _reader -> _reader
    char[] _inputBuffer -> _inputBuffer
    org.codehaus.jackson.ObjectCodec _objectCodec -> _objectCodec
    org.codehaus.jackson.sym.CharsToNameCanonicalizer _symbols -> _symbols
    boolean _tokenIncomplete -> _tokenIncomplete
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    void setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    int releaseBuffered(java.io.Writer) -> releaseBuffered
    java.lang.Object getInputSource() -> getInputSource
    boolean loadMore() -> loadMore
    char getNextChar(java.lang.String) -> getNextChar
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
    java.lang.String getText() -> getText
    java.lang.String _getText2(org.codehaus.jackson.JsonToken) -> _getText2
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken _nextAfterName() -> _nextAfterName
    java.lang.String nextTextValue() -> nextTextValue
    int nextIntValue(int) -> nextIntValue
    long nextLongValue(long) -> nextLongValue
    java.lang.Boolean nextBooleanValue() -> nextBooleanValue
    void close() -> close
    org.codehaus.jackson.JsonToken parseNumberText(int) -> parseNumberText
    org.codehaus.jackson.JsonToken parseNumberText2(boolean) -> parseNumberText2
    char _verifyNoLeadingZeroes() -> _verifyNoLeadingZeroes
    org.codehaus.jackson.JsonToken _handleInvalidNumberStart(int,boolean) -> _handleInvalidNumberStart
    java.lang.String _parseFieldName(int) -> _parseFieldName
    java.lang.String _parseFieldName2(int,int,int) -> _parseFieldName2
    java.lang.String _handleUnusualFieldName(int) -> _handleUnusualFieldName
    java.lang.String _parseApostropheFieldName() -> _parseApostropheFieldName
    org.codehaus.jackson.JsonToken _handleUnexpectedValue(int) -> _handleUnexpectedValue
    org.codehaus.jackson.JsonToken _handleApostropheValue() -> _handleApostropheValue
    java.lang.String _parseUnusualFieldName2(int,int,int[]) -> _parseUnusualFieldName2
    void _finishString() -> _finishString
    void _finishString2() -> _finishString2
    void _skipString() -> _skipString
    void _skipCR() -> _skipCR
    void _skipLF() -> _skipLF
    int _skipWS() -> _skipWS
    int _skipWSOrEnd() -> _skipWSOrEnd
    void _skipComment() -> _skipComment
    void _skipCComment() -> _skipCComment
    void _skipCppComment() -> _skipCppComment
    char _decodeEscaped() -> _decodeEscaped
    void _matchToken(java.lang.String,int) -> _matchToken
    byte[] _decodeBase64(org.codehaus.jackson.Base64Variant) -> _decodeBase64
    void _reportInvalidToken(java.lang.String,java.lang.String) -> _reportInvalidToken
org.codehaus.jackson.impl.ReaderBasedParser$1 -> org.codehaus.jackson.impl.ReaderBasedParser$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.impl.ReaderBasedParserBase -> org.codehaus.jackson.impl.ReaderBasedParserBase:
    java.io.Reader _reader -> _reader
    char[] _inputBuffer -> _inputBuffer
    int releaseBuffered(java.io.Writer) -> releaseBuffered
    java.lang.Object getInputSource() -> getInputSource
    boolean loadMore() -> loadMore
    char getNextChar(java.lang.String) -> getNextChar
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
    boolean _matchToken(java.lang.String,int) -> _matchToken
    void _reportInvalidToken(java.lang.String,java.lang.String) -> _reportInvalidToken
org.codehaus.jackson.impl.StreamBasedParserBase -> org.codehaus.jackson.impl.StreamBasedParserBase:
    java.io.InputStream _inputStream -> _inputStream
    byte[] _inputBuffer -> _inputBuffer
    boolean _bufferRecyclable -> _bufferRecyclable
    int releaseBuffered(java.io.OutputStream) -> releaseBuffered
    java.lang.Object getInputSource() -> getInputSource
    boolean loadMore() -> loadMore
    boolean _loadToHaveAtLeast(int) -> _loadToHaveAtLeast
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
org.codehaus.jackson.impl.Utf8Generator -> org.codehaus.jackson.impl.Utf8Generator:
    byte BYTE_u -> BYTE_u
    byte BYTE_0 -> BYTE_0
    byte BYTE_LBRACKET -> BYTE_LBRACKET
    byte BYTE_RBRACKET -> BYTE_RBRACKET
    byte BYTE_LCURLY -> BYTE_LCURLY
    byte BYTE_RCURLY -> BYTE_RCURLY
    byte BYTE_BACKSLASH -> BYTE_BACKSLASH
    byte BYTE_SPACE -> BYTE_SPACE
    byte BYTE_COMMA -> BYTE_COMMA
    byte BYTE_COLON -> BYTE_COLON
    byte BYTE_QUOTE -> BYTE_QUOTE
    int SURR1_FIRST -> SURR1_FIRST
    int SURR1_LAST -> SURR1_LAST
    int SURR2_FIRST -> SURR2_FIRST
    int SURR2_LAST -> SURR2_LAST
    int MAX_BYTES_TO_BUFFER -> MAX_BYTES_TO_BUFFER
    byte[] HEX_CHARS -> HEX_CHARS
    byte[] NULL_BYTES -> NULL_BYTES
    byte[] TRUE_BYTES -> TRUE_BYTES
    byte[] FALSE_BYTES -> FALSE_BYTES
    int[] sOutputEscapes -> sOutputEscapes
    org.codehaus.jackson.io.IOContext _ioContext -> _ioContext
    java.io.OutputStream _outputStream -> _outputStream
    int[] _outputEscapes -> _outputEscapes
    int _maximumNonEscapedChar -> _maximumNonEscapedChar
    org.codehaus.jackson.io.CharacterEscapes _characterEscapes -> _characterEscapes
    byte[] _outputBuffer -> _outputBuffer
    int _outputTail -> _outputTail
    int _outputEnd -> _outputEnd
    int _outputMaxContiguous -> _outputMaxContiguous
    char[] _charBuffer -> _charBuffer
    int _charBufferLength -> _charBufferLength
    byte[] _entityBuffer -> _entityBuffer
    boolean _bufferRecyclable -> _bufferRecyclable
    org.codehaus.jackson.JsonGenerator setHighestNonEscapedChar(int) -> setHighestNonEscapedChar
    int getHighestEscapedChar() -> getHighestEscapedChar
    org.codehaus.jackson.JsonGenerator setCharacterEscapes(org.codehaus.jackson.io.CharacterEscapes) -> setCharacterEscapes
    org.codehaus.jackson.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    java.lang.Object getOutputTarget() -> getOutputTarget
    void writeStringField(java.lang.String,java.lang.String) -> writeStringField
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.io.SerializedString) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.SerializableString) -> writeFieldName
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void _writeFieldName(java.lang.String) -> _writeFieldName
    void _writeFieldName(org.codehaus.jackson.SerializableString) -> _writeFieldName
    void _writePPFieldName(java.lang.String,boolean) -> _writePPFieldName
    void _writePPFieldName(org.codehaus.jackson.SerializableString,boolean) -> _writePPFieldName
    void writeString(java.lang.String) -> writeString
    void _writeLongString(java.lang.String) -> _writeLongString
    void _writeLongString(char[],int,int) -> _writeLongString
    void writeString(char[],int,int) -> writeString
    void writeString(org.codehaus.jackson.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void _writeSegmentedRaw(char[],int,int) -> _writeSegmentedRaw
    void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> writeBinary
    void writeNumber(int) -> writeNumber
    void _writeQuotedInt(int) -> _writeQuotedInt
    void writeNumber(long) -> writeNumber
    void _writeQuotedLong(long) -> _writeQuotedLong
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void _writeQuotedRaw(java.lang.Object) -> _writeQuotedRaw
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    void _verifyPrettyValueWrite(java.lang.String,int) -> _verifyPrettyValueWrite
    void flush() -> flush
    void close() -> close
    void _releaseBuffers() -> _releaseBuffers
    void _writeBytes(byte[]) -> _writeBytes
    void _writeBytes(byte[],int,int) -> _writeBytes
    void _writeStringSegments(java.lang.String) -> _writeStringSegments
    void _writeStringSegments(char[],int,int) -> _writeStringSegments
    void _writeStringSegment(char[],int,int) -> _writeStringSegment
    void _writeStringSegment2(char[],int,int) -> _writeStringSegment2
    void _writeStringSegmentASCII2(char[],int,int) -> _writeStringSegmentASCII2
    void _writeCustomStringSegment2(char[],int,int) -> _writeCustomStringSegment2
    int _writeCustomEscape(byte[],int,org.codehaus.jackson.SerializableString,int) -> _writeCustomEscape
    int _handleLongCustomEscape(byte[],int,int,byte[],int) -> _handleLongCustomEscape
    void _writeUTF8Segments(byte[],int,int) -> _writeUTF8Segments
    void _writeUTF8Segment(byte[],int,int) -> _writeUTF8Segment
    void _writeUTF8Segment2(byte[],int,int) -> _writeUTF8Segment2
    void _writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> _writeBinary
    int _outputRawMultiByteChar(int,char[],int,int) -> _outputRawMultiByteChar
    void _outputSurrogates(int,int) -> _outputSurrogates
    int _outputMultiByteChar(int,int) -> _outputMultiByteChar
    int _decodeSurrogate(int,int) -> _decodeSurrogate
    void _writeNull() -> _writeNull
    int _writeGenericEscape(int,int) -> _writeGenericEscape
    void _flushBuffer() -> _flushBuffer
org.codehaus.jackson.impl.Utf8StreamParser -> org.codehaus.jackson.impl.Utf8StreamParser:
    byte BYTE_LF -> BYTE_LF
    int[] sInputCodesUtf8 -> sInputCodesUtf8
    int[] sInputCodesLatin1 -> sInputCodesLatin1
    org.codehaus.jackson.ObjectCodec _objectCodec -> _objectCodec
    org.codehaus.jackson.sym.BytesToNameCanonicalizer _symbols -> _symbols
    int[] _quadBuffer -> _quadBuffer
    boolean _tokenIncomplete -> _tokenIncomplete
    int _quad1 -> _quad1
    java.io.InputStream _inputStream -> _inputStream
    byte[] _inputBuffer -> _inputBuffer
    boolean _bufferRecyclable -> _bufferRecyclable
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    void setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    int releaseBuffered(java.io.OutputStream) -> releaseBuffered
    java.lang.Object getInputSource() -> getInputSource
    boolean loadMore() -> loadMore
    boolean _loadToHaveAtLeast(int) -> _loadToHaveAtLeast
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
    java.lang.String getText() -> getText
    java.lang.String _getText2(org.codehaus.jackson.JsonToken) -> _getText2
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken _nextTokenNotInObject(int) -> _nextTokenNotInObject
    org.codehaus.jackson.JsonToken _nextAfterName() -> _nextAfterName
    void close() -> close
    boolean nextFieldName(org.codehaus.jackson.SerializableString) -> nextFieldName
    void _isNextTokenNameYes() -> _isNextTokenNameYes
    void _isNextTokenNameNo(int) -> _isNextTokenNameNo
    java.lang.String nextTextValue() -> nextTextValue
    int nextIntValue(int) -> nextIntValue
    long nextLongValue(long) -> nextLongValue
    java.lang.Boolean nextBooleanValue() -> nextBooleanValue
    org.codehaus.jackson.JsonToken parseNumberText(int) -> parseNumberText
    org.codehaus.jackson.JsonToken _parserNumber2(char[],int,boolean,int) -> _parserNumber2
    int _verifyNoLeadingZeroes() -> _verifyNoLeadingZeroes
    org.codehaus.jackson.JsonToken _parseFloatText(char[],int,int,boolean,int) -> _parseFloatText
    org.codehaus.jackson.sym.Name _parseFieldName(int) -> _parseFieldName
    org.codehaus.jackson.sym.Name parseMediumFieldName(int,int[]) -> parseMediumFieldName
    org.codehaus.jackson.sym.Name parseLongFieldName(int) -> parseLongFieldName
    org.codehaus.jackson.sym.Name slowParseFieldName() -> slowParseFieldName
    org.codehaus.jackson.sym.Name parseFieldName(int,int,int) -> parseFieldName
    org.codehaus.jackson.sym.Name parseFieldName(int,int,int,int) -> parseFieldName
    org.codehaus.jackson.sym.Name parseEscapedFieldName(int[],int,int,int,int) -> parseEscapedFieldName
    org.codehaus.jackson.sym.Name _handleUnusualFieldName(int) -> _handleUnusualFieldName
    org.codehaus.jackson.sym.Name _parseApostropheFieldName() -> _parseApostropheFieldName
    org.codehaus.jackson.sym.Name findName(int,int) -> findName
    org.codehaus.jackson.sym.Name findName(int,int,int) -> findName
    org.codehaus.jackson.sym.Name findName(int[],int,int,int) -> findName
    org.codehaus.jackson.sym.Name addName(int[],int,int) -> addName
    void _finishString() -> _finishString
    void _finishString2(char[],int) -> _finishString2
    void _skipString() -> _skipString
    org.codehaus.jackson.JsonToken _handleUnexpectedValue(int) -> _handleUnexpectedValue
    org.codehaus.jackson.JsonToken _handleApostropheValue() -> _handleApostropheValue
    org.codehaus.jackson.JsonToken _handleInvalidNumberStart(int,boolean) -> _handleInvalidNumberStart
    void _matchToken(java.lang.String,int) -> _matchToken
    void _reportInvalidToken(java.lang.String,java.lang.String) -> _reportInvalidToken
    int _skipWS() -> _skipWS
    int _skipWSOrEnd() -> _skipWSOrEnd
    int _skipColon() -> _skipColon
    void _skipComment() -> _skipComment
    void _skipCComment() -> _skipCComment
    void _skipCppComment() -> _skipCppComment
    char _decodeEscaped() -> _decodeEscaped
    int _decodeCharForError(int) -> _decodeCharForError
    int _decodeUtf8_2(int) -> _decodeUtf8_2
    int _decodeUtf8_3(int) -> _decodeUtf8_3
    int _decodeUtf8_3fast(int) -> _decodeUtf8_3fast
    int _decodeUtf8_4(int) -> _decodeUtf8_4
    void _skipUtf8_2(int) -> _skipUtf8_2
    void _skipUtf8_3(int) -> _skipUtf8_3
    void _skipUtf8_4(int) -> _skipUtf8_4
    void _skipCR() -> _skipCR
    void _skipLF() -> _skipLF
    int nextByte() -> nextByte
    void _reportInvalidChar(int) -> _reportInvalidChar
    void _reportInvalidInitial(int) -> _reportInvalidInitial
    void _reportInvalidOther(int) -> _reportInvalidOther
    void _reportInvalidOther(int,int) -> _reportInvalidOther
    int[] growArrayBy(int[],int) -> growArrayBy
    byte[] _decodeBase64(org.codehaus.jackson.Base64Variant) -> _decodeBase64
org.codehaus.jackson.impl.Utf8StreamParser$1 -> org.codehaus.jackson.impl.Utf8StreamParser$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.impl.WriterBasedGenerator -> org.codehaus.jackson.impl.WriterBasedGenerator:
    int SHORT_WRITE -> SHORT_WRITE
    char[] HEX_CHARS -> HEX_CHARS
    int[] sOutputEscapes -> sOutputEscapes
    org.codehaus.jackson.io.IOContext _ioContext -> _ioContext
    java.io.Writer _writer -> _writer
    int[] _outputEscapes -> _outputEscapes
    int _maximumNonEscapedChar -> _maximumNonEscapedChar
    org.codehaus.jackson.io.CharacterEscapes _characterEscapes -> _characterEscapes
    org.codehaus.jackson.SerializableString _currentEscape -> _currentEscape
    char[] _outputBuffer -> _outputBuffer
    int _outputHead -> _outputHead
    int _outputTail -> _outputTail
    int _outputEnd -> _outputEnd
    char[] _entityBuffer -> _entityBuffer
    org.codehaus.jackson.JsonGenerator setHighestNonEscapedChar(int) -> setHighestNonEscapedChar
    int getHighestEscapedChar() -> getHighestEscapedChar
    org.codehaus.jackson.JsonGenerator setCharacterEscapes(org.codehaus.jackson.io.CharacterEscapes) -> setCharacterEscapes
    org.codehaus.jackson.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    java.lang.Object getOutputTarget() -> getOutputTarget
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeStringField(java.lang.String,java.lang.String) -> writeStringField
    void writeFieldName(org.codehaus.jackson.io.SerializedString) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.SerializableString) -> writeFieldName
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void _writeFieldName(java.lang.String,boolean) -> _writeFieldName
    void _writeFieldName(org.codehaus.jackson.SerializableString,boolean) -> _writeFieldName
    void _writePPFieldName(java.lang.String,boolean) -> _writePPFieldName
    void _writePPFieldName(org.codehaus.jackson.SerializableString,boolean) -> _writePPFieldName
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(org.codehaus.jackson.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawLong(java.lang.String) -> writeRawLong
    void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> writeBinary
    void writeNumber(int) -> writeNumber
    void _writeQuotedInt(int) -> _writeQuotedInt
    void writeNumber(long) -> writeNumber
    void _writeQuotedLong(long) -> _writeQuotedLong
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void _writeQuotedRaw(java.lang.Object) -> _writeQuotedRaw
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    void _verifyPrettyValueWrite(java.lang.String,int) -> _verifyPrettyValueWrite
    void flush() -> flush
    void close() -> close
    void _releaseBuffers() -> _releaseBuffers
    void _writeString(java.lang.String) -> _writeString
    void _writeString2(int) -> _writeString2
    void _writeLongString(java.lang.String) -> _writeLongString
    void _writeSegment(int) -> _writeSegment
    void _writeString(char[],int,int) -> _writeString
    void _writeStringASCII(int,int) -> _writeStringASCII
    void _writeSegmentASCII(int,int) -> _writeSegmentASCII
    void _writeStringASCII(char[],int,int,int) -> _writeStringASCII
    void _writeStringCustom(int) -> _writeStringCustom
    void _writeSegmentCustom(int) -> _writeSegmentCustom
    void _writeStringCustom(char[],int,int) -> _writeStringCustom
    void _writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> _writeBinary
    void _writeNull() -> _writeNull
    void _prependOrWriteCharacterEscape(char,int) -> _prependOrWriteCharacterEscape
    int _prependOrWriteCharacterEscape(char[],int,int,char,int) -> _prependOrWriteCharacterEscape
    void _appendCharacterEscape(char,int) -> _appendCharacterEscape
    char[] _allocateEntityBuffer() -> _allocateEntityBuffer
    void _flushBuffer() -> _flushBuffer
org.codehaus.jackson.io.BaseReader -> org.codehaus.jackson.io.BaseReader:
    int LAST_VALID_UNICODE_CHAR -> LAST_VALID_UNICODE_CHAR
    char NULL_CHAR -> NULL_CHAR
    char NULL_BYTE -> NULL_BYTE
    org.codehaus.jackson.io.IOContext _context -> _context
    java.io.InputStream _in -> _in
    byte[] _buffer -> _buffer
    int _ptr -> _ptr
    int _length -> _length
    char[] _tmpBuf -> _tmpBuf
    void close() -> close
    int read() -> read
    void freeBuffers() -> freeBuffers
    void reportBounds(char[],int,int) -> reportBounds
    void reportStrangeStream() -> reportStrangeStream
org.codehaus.jackson.io.CharacterEscapes -> org.codehaus.jackson.io.CharacterEscapes:
    int ESCAPE_NONE -> ESCAPE_NONE
    int ESCAPE_STANDARD -> ESCAPE_STANDARD
    int ESCAPE_CUSTOM -> ESCAPE_CUSTOM
    int[] getEscapeCodesForAscii() -> getEscapeCodesForAscii
    org.codehaus.jackson.SerializableString getEscapeSequence(int) -> getEscapeSequence
    int[] standardAsciiEscapesForJSON() -> standardAsciiEscapesForJSON
org.codehaus.jackson.io.IOContext -> org.codehaus.jackson.io.IOContext:
    java.lang.Object _sourceRef -> _sourceRef
    org.codehaus.jackson.JsonEncoding _encoding -> _encoding
    boolean _managedResource -> _managedResource
    org.codehaus.jackson.util.BufferRecycler _bufferRecycler -> _bufferRecycler
    byte[] _readIOBuffer -> _readIOBuffer
    byte[] _writeEncodingBuffer -> _writeEncodingBuffer
    char[] _tokenCBuffer -> _tokenCBuffer
    char[] _concatCBuffer -> _concatCBuffer
    char[] _nameCopyBuffer -> _nameCopyBuffer
    void setEncoding(org.codehaus.jackson.JsonEncoding) -> setEncoding
    java.lang.Object getSourceReference() -> getSourceReference
    org.codehaus.jackson.JsonEncoding getEncoding() -> getEncoding
    boolean isResourceManaged() -> isResourceManaged
    org.codehaus.jackson.util.TextBuffer constructTextBuffer() -> constructTextBuffer
    byte[] allocReadIOBuffer() -> allocReadIOBuffer
    byte[] allocWriteEncodingBuffer() -> allocWriteEncodingBuffer
    char[] allocTokenBuffer() -> allocTokenBuffer
    char[] allocConcatBuffer() -> allocConcatBuffer
    char[] allocNameCopyBuffer(int) -> allocNameCopyBuffer
    void releaseReadIOBuffer(byte[]) -> releaseReadIOBuffer
    void releaseWriteEncodingBuffer(byte[]) -> releaseWriteEncodingBuffer
    void releaseTokenBuffer(char[]) -> releaseTokenBuffer
    void releaseConcatBuffer(char[]) -> releaseConcatBuffer
    void releaseNameCopyBuffer(char[]) -> releaseNameCopyBuffer
org.codehaus.jackson.io.InputDecorator -> org.codehaus.jackson.io.InputDecorator:
    java.io.InputStream decorate(org.codehaus.jackson.io.IOContext,java.io.InputStream) -> decorate
    java.io.InputStream decorate(org.codehaus.jackson.io.IOContext,byte[],int,int) -> decorate
    java.io.Reader decorate(org.codehaus.jackson.io.IOContext,java.io.Reader) -> decorate
org.codehaus.jackson.io.JsonStringEncoder -> org.codehaus.jackson.io.JsonStringEncoder:
    char[] HEX_CHARS -> HEX_CHARS
    byte[] HEX_BYTES -> HEX_BYTES
    int SURR1_FIRST -> SURR1_FIRST
    int SURR1_LAST -> SURR1_LAST
    int SURR2_FIRST -> SURR2_FIRST
    int SURR2_LAST -> SURR2_LAST
    int INT_BACKSLASH -> INT_BACKSLASH
    int INT_U -> INT_U
    int INT_0 -> INT_0
    java.lang.ThreadLocal _threadEncoder -> _threadEncoder
    org.codehaus.jackson.util.TextBuffer _textBuffer -> _textBuffer
    org.codehaus.jackson.util.ByteArrayBuilder _byteBuilder -> _byteBuilder
    char[] _quoteBuffer -> _quoteBuffer
    org.codehaus.jackson.io.JsonStringEncoder getInstance() -> getInstance
    char[] quoteAsString(java.lang.String) -> quoteAsString
    byte[] quoteAsUTF8(java.lang.String) -> quoteAsUTF8
    byte[] encodeAsUTF8(java.lang.String) -> encodeAsUTF8
    int _appendSingleEscape(int,char[]) -> _appendSingleEscape
    int _appendByteEscape(int,int,org.codehaus.jackson.util.ByteArrayBuilder,int) -> _appendByteEscape
    int _convertSurrogate(int,int) -> _convertSurrogate
    void _throwIllegalSurrogate(int) -> _throwIllegalSurrogate
org.codehaus.jackson.io.MergedStream -> org.codehaus.jackson.io.MergedStream:
    org.codehaus.jackson.io.IOContext _context -> _context
    java.io.InputStream _in -> _in
    byte[] _buffer -> _buffer
    int _ptr -> _ptr
    int _end -> _end
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    void freeMergedBuffer() -> freeMergedBuffer
org.codehaus.jackson.io.NumberInput -> org.codehaus.jackson.io.NumberInput:
    java.lang.String NASTY_SMALL_DOUBLE -> NASTY_SMALL_DOUBLE
    long L_BILLION -> L_BILLION
    java.lang.String MIN_LONG_STR_NO_SIGN -> MIN_LONG_STR_NO_SIGN
    java.lang.String MAX_LONG_STR -> MAX_LONG_STR
    int parseInt(char[],int,int) -> parseInt
    int parseInt(java.lang.String) -> parseInt
    long parseLong(char[],int,int) -> parseLong
    long parseLong(java.lang.String) -> parseLong
    boolean inLongRange(char[],int,int,boolean) -> inLongRange
    boolean inLongRange(java.lang.String,boolean) -> inLongRange
    int parseAsInt(java.lang.String,int) -> parseAsInt
    long parseAsLong(java.lang.String,long) -> parseAsLong
    double parseAsDouble(java.lang.String,double) -> parseAsDouble
    double parseDouble(java.lang.String) -> parseDouble
org.codehaus.jackson.io.NumberOutput -> org.codehaus.jackson.io.NumberOutput:
    char NULL_CHAR -> NULL_CHAR
    int MILLION -> MILLION
    int BILLION -> BILLION
    long TEN_BILLION_L -> TEN_BILLION_L
    long THOUSAND_L -> THOUSAND_L
    long MIN_INT_AS_LONG -> MIN_INT_AS_LONG
    long MAX_INT_AS_LONG -> MAX_INT_AS_LONG
    java.lang.String SMALLEST_LONG -> SMALLEST_LONG
    char[] LEADING_TRIPLETS -> LEADING_TRIPLETS
    char[] FULL_TRIPLETS -> FULL_TRIPLETS
    byte[] FULL_TRIPLETS_B -> FULL_TRIPLETS_B
    java.lang.String[] sSmallIntStrs -> sSmallIntStrs
    java.lang.String[] sSmallIntStrs2 -> sSmallIntStrs2
    int outputInt(int,char[],int) -> outputInt
    int outputInt(int,byte[],int) -> outputInt
    int outputLong(long,char[],int) -> outputLong
    int outputLong(long,byte[],int) -> outputLong
    java.lang.String toString(int) -> toString
    java.lang.String toString(long) -> toString
    java.lang.String toString(double) -> toString
    int outputLeadingTriplet(int,char[],int) -> outputLeadingTriplet
    int outputLeadingTriplet(int,byte[],int) -> outputLeadingTriplet
    int outputFullTriplet(int,char[],int) -> outputFullTriplet
    int outputFullTriplet(int,byte[],int) -> outputFullTriplet
    int calcLongStrLength(long) -> calcLongStrLength
org.codehaus.jackson.io.OutputDecorator -> org.codehaus.jackson.io.OutputDecorator:
    java.io.OutputStream decorate(org.codehaus.jackson.io.IOContext,java.io.OutputStream) -> decorate
    java.io.Writer decorate(org.codehaus.jackson.io.IOContext,java.io.Writer) -> decorate
org.codehaus.jackson.io.SegmentedStringWriter -> org.codehaus.jackson.io.SegmentedStringWriter:
    org.codehaus.jackson.util.TextBuffer _buffer -> _buffer
    java.io.Writer append(char) -> append
    java.io.Writer append(java.lang.CharSequence) -> append
    java.io.Writer append(java.lang.CharSequence,int,int) -> append
    void close() -> close
    void flush() -> flush
    void write(char[]) -> write
    void write(char[],int,int) -> write
    void write(int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    java.lang.String getAndClear() -> getAndClear
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
org.codehaus.jackson.io.SerializedString -> org.codehaus.jackson.io.SerializedString:
    java.lang.String _value -> _value
    byte[] _quotedUTF8Ref -> _quotedUTF8Ref
    byte[] _unquotedUTF8Ref -> _unquotedUTF8Ref
    char[] _quotedChars -> _quotedChars
    java.lang.String getValue() -> getValue
    int charLength() -> charLength
    char[] asQuotedChars() -> asQuotedChars
    byte[] asUnquotedUTF8() -> asUnquotedUTF8
    byte[] asQuotedUTF8() -> asQuotedUTF8
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.io.UTF32Reader -> org.codehaus.jackson.io.UTF32Reader:
    boolean mBigEndian -> mBigEndian
    char mSurrogate -> mSurrogate
    int mCharCount -> mCharCount
    int mByteCount -> mByteCount
    int read(char[],int,int) -> read
    void reportUnexpectedEOF(int,int) -> reportUnexpectedEOF
    void reportInvalid(int,int,java.lang.String) -> reportInvalid
    boolean loadMore(int) -> loadMore
    int read() -> read
    void close() -> close
org.codehaus.jackson.io.UTF8Writer -> org.codehaus.jackson.io.UTF8Writer:
    int SURR1_FIRST -> SURR1_FIRST
    int SURR1_LAST -> SURR1_LAST
    int SURR2_FIRST -> SURR2_FIRST
    int SURR2_LAST -> SURR2_LAST
    org.codehaus.jackson.io.IOContext _context -> _context
    java.io.OutputStream _out -> _out
    byte[] _outBuffer -> _outBuffer
    int _outBufferEnd -> _outBufferEnd
    int _outPtr -> _outPtr
    int _surrogate -> _surrogate
    java.io.Writer append(char) -> append
    void close() -> close
    void flush() -> flush
    void write(char[]) -> write
    void write(char[],int,int) -> write
    void write(int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    int convertSurrogate(int) -> convertSurrogate
    void throwIllegal(int) -> throwIllegal
    java.lang.Appendable append(char) -> append
org.codehaus.jackson.map.AbstractTypeResolver -> org.codehaus.jackson.map.AbstractTypeResolver:
    org.codehaus.jackson.type.JavaType findTypeMapping(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> findTypeMapping
    org.codehaus.jackson.type.JavaType resolveAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> resolveAbstractType
org.codehaus.jackson.map.AnnotationIntrospector -> org.codehaus.jackson.map.AnnotationIntrospector:
    org.codehaus.jackson.map.AnnotationIntrospector nopInstance() -> nopInstance
    org.codehaus.jackson.map.AnnotationIntrospector pair(org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.AnnotationIntrospector) -> pair
    java.util.Collection allIntrospectors() -> allIntrospectors
    java.util.Collection allIntrospectors(java.util.Collection) -> allIntrospectors
    boolean isHandled(java.lang.annotation.Annotation) -> isHandled
    java.lang.Boolean findCachability(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findCachability
    java.lang.String findRootName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findRootName
    java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findPropertiesToIgnore
    java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findIgnoreUnknownProperties
    java.lang.Boolean isIgnorableType(org.codehaus.jackson.map.introspect.AnnotatedClass) -> isIgnorableType
    java.lang.Object findFilterId(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findFilterId
    org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker) -> findAutoDetectVisibility
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType) -> findTypeResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType) -> findPropertyTypeResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType) -> findPropertyContentTypeResolver
    java.util.List findSubtypes(org.codehaus.jackson.map.introspect.Annotated) -> findSubtypes
    java.lang.String findTypeName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findTypeName
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty findReferenceType(org.codehaus.jackson.map.introspect.AnnotatedMember) -> findReferenceType
    java.lang.Boolean shouldUnwrapProperty(org.codehaus.jackson.map.introspect.AnnotatedMember) -> shouldUnwrapProperty
    boolean hasIgnoreMarker(org.codehaus.jackson.map.introspect.AnnotatedMember) -> hasIgnoreMarker
    java.lang.Object findInjectableValueId(org.codehaus.jackson.map.introspect.AnnotatedMember) -> findInjectableValueId
    boolean isIgnorableMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isIgnorableMethod
    boolean isIgnorableConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor) -> isIgnorableConstructor
    boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField) -> isIgnorableField
    java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findSerializer
    java.lang.Class findKeySerializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeySerializer
    java.lang.Class findContentSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentSerializer
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion) -> findSerializationInclusion
    java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationType
    java.lang.Class findSerializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> findSerializationKeyType
    java.lang.Class findSerializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> findSerializationContentType
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationTyping
    java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationViews
    java.lang.String[] findSerializationPropertyOrder(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    java.lang.Boolean findSerializationSortAlphabetically(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationSortAlphabetically
    java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findGettablePropertyName
    boolean hasAsValueAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    java.lang.String findEnumValue(java.lang.Enum) -> findEnumValue
    java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findSerializablePropertyName
    java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findDeserializer
    java.lang.Class findKeyDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeyDeserializer
    java.lang.Class findContentDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentDeserializer
    java.lang.Class findDeserializationType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationType
    java.lang.Class findDeserializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationKeyType
    java.lang.Class findDeserializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationContentType
    java.lang.Object findValueInstantiator(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findValueInstantiator
    java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findSettablePropertyName
    boolean hasAnySetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAnySetterAnnotation
    boolean hasAnyGetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAnyGetterAnnotation
    boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated) -> hasCreatorAnnotation
    java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findDeserializablePropertyName
    java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter) -> findPropertyNameForParam
org.codehaus.jackson.map.AnnotationIntrospector$Pair -> org.codehaus.jackson.map.AnnotationIntrospector$Pair:
    org.codehaus.jackson.map.AnnotationIntrospector _primary -> _primary
    org.codehaus.jackson.map.AnnotationIntrospector _secondary -> _secondary
    org.codehaus.jackson.map.AnnotationIntrospector create(org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.AnnotationIntrospector) -> create
    java.util.Collection allIntrospectors() -> allIntrospectors
    java.util.Collection allIntrospectors(java.util.Collection) -> allIntrospectors
    boolean isHandled(java.lang.annotation.Annotation) -> isHandled
    java.lang.Boolean findCachability(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findCachability
    java.lang.String findRootName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findRootName
    java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findPropertiesToIgnore
    java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findIgnoreUnknownProperties
    java.lang.Boolean isIgnorableType(org.codehaus.jackson.map.introspect.AnnotatedClass) -> isIgnorableType
    java.lang.Object findFilterId(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findFilterId
    org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker) -> findAutoDetectVisibility
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType) -> findTypeResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType) -> findPropertyTypeResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType) -> findPropertyContentTypeResolver
    java.util.List findSubtypes(org.codehaus.jackson.map.introspect.Annotated) -> findSubtypes
    java.lang.String findTypeName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findTypeName
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty findReferenceType(org.codehaus.jackson.map.introspect.AnnotatedMember) -> findReferenceType
    java.lang.Boolean shouldUnwrapProperty(org.codehaus.jackson.map.introspect.AnnotatedMember) -> shouldUnwrapProperty
    java.lang.Object findInjectableValueId(org.codehaus.jackson.map.introspect.AnnotatedMember) -> findInjectableValueId
    boolean hasIgnoreMarker(org.codehaus.jackson.map.introspect.AnnotatedMember) -> hasIgnoreMarker
    boolean isIgnorableMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isIgnorableMethod
    boolean isIgnorableConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor) -> isIgnorableConstructor
    boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField) -> isIgnorableField
    java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findSerializer
    java.lang.Class findKeySerializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeySerializer
    java.lang.Class findContentSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentSerializer
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion) -> findSerializationInclusion
    java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationType
    java.lang.Class findSerializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> findSerializationKeyType
    java.lang.Class findSerializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> findSerializationContentType
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationTyping
    java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationViews
    java.lang.String[] findSerializationPropertyOrder(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    java.lang.Boolean findSerializationSortAlphabetically(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationSortAlphabetically
    java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findGettablePropertyName
    boolean hasAsValueAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    java.lang.String findEnumValue(java.lang.Enum) -> findEnumValue
    java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findSerializablePropertyName
    java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findDeserializer
    java.lang.Class findKeyDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeyDeserializer
    java.lang.Class findContentDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentDeserializer
    java.lang.Class findDeserializationType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationType
    java.lang.Class findDeserializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationKeyType
    java.lang.Class findDeserializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationContentType
    java.lang.Object findValueInstantiator(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findValueInstantiator
    java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findSettablePropertyName
    boolean hasAnySetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAnySetterAnnotation
    boolean hasAnyGetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAnyGetterAnnotation
    boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated) -> hasCreatorAnnotation
    java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findDeserializablePropertyName
    java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter) -> findPropertyNameForParam
org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty -> org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty:
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type _type -> _type
    java.lang.String _name -> _name
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty managed(java.lang.String) -> managed
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty back(java.lang.String) -> back
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type getType() -> getType
    java.lang.String getName() -> getName
    boolean isManagedReference() -> isManagedReference
    boolean isBackReference() -> isBackReference
org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type -> org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type:
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type MANAGED_REFERENCE -> MANAGED_REFERENCE
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type BACK_REFERENCE -> BACK_REFERENCE
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type[] $VALUES -> $VALUES
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type[] values() -> values
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.map.BeanDescription -> org.codehaus.jackson.map.BeanDescription:
    org.codehaus.jackson.type.JavaType _type -> _type
    org.codehaus.jackson.type.JavaType getType() -> getType
    java.lang.Class getBeanClass() -> getBeanClass
    org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo() -> getClassInfo
    boolean hasKnownClassAnnotations() -> hasKnownClassAnnotations
    org.codehaus.jackson.map.type.TypeBindings bindingsForBeanType() -> bindingsForBeanType
    org.codehaus.jackson.type.JavaType resolveType(java.lang.reflect.Type) -> resolveType
    org.codehaus.jackson.map.util.Annotations getClassAnnotations() -> getClassAnnotations
    java.util.List findProperties() -> findProperties
    java.util.Map findInjectables() -> findInjectables
    org.codehaus.jackson.map.introspect.AnnotatedMethod findAnyGetter() -> findAnyGetter
    org.codehaus.jackson.map.introspect.AnnotatedMethod findAnySetter() -> findAnySetter
    org.codehaus.jackson.map.introspect.AnnotatedMethod findJsonValueMethod() -> findJsonValueMethod
    org.codehaus.jackson.map.introspect.AnnotatedConstructor findDefaultConstructor() -> findDefaultConstructor
    java.util.Set getIgnoredPropertyNames() -> getIgnoredPropertyNames
    java.util.LinkedHashMap findGetters(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection) -> findGetters
    java.util.LinkedHashMap findSetters(org.codehaus.jackson.map.introspect.VisibilityChecker) -> findSetters
    java.util.LinkedHashMap findDeserializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection) -> findDeserializableFields
    java.util.Map findSerializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection) -> findSerializableFields
org.codehaus.jackson.map.BeanProperty -> org.codehaus.jackson.map.BeanProperty:
    java.lang.String getName() -> getName
    org.codehaus.jackson.type.JavaType getType() -> getType
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
org.codehaus.jackson.map.BeanProperty$Std -> org.codehaus.jackson.map.BeanProperty$Std:
    java.lang.String _name -> _name
    org.codehaus.jackson.type.JavaType _type -> _type
    org.codehaus.jackson.map.introspect.AnnotatedMember _member -> _member
    org.codehaus.jackson.map.util.Annotations _contextAnnotations -> _contextAnnotations
    org.codehaus.jackson.map.BeanProperty$Std withType(org.codehaus.jackson.type.JavaType) -> withType
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    java.lang.String getName() -> getName
    org.codehaus.jackson.type.JavaType getType() -> getType
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
org.codehaus.jackson.map.BeanPropertyDefinition -> org.codehaus.jackson.map.BeanPropertyDefinition:
    java.lang.String getName() -> getName
    java.lang.String getInternalName() -> getInternalName
    boolean isExplicitlyIncluded() -> isExplicitlyIncluded
    boolean hasGetter() -> hasGetter
    boolean hasSetter() -> hasSetter
    boolean hasField() -> hasField
    boolean hasConstructorParameter() -> hasConstructorParameter
    boolean couldDeserialize() -> couldDeserialize
    boolean couldSerialize() -> couldSerialize
    org.codehaus.jackson.map.introspect.AnnotatedMethod getGetter() -> getGetter
    org.codehaus.jackson.map.introspect.AnnotatedMethod getSetter() -> getSetter
    org.codehaus.jackson.map.introspect.AnnotatedField getField() -> getField
    org.codehaus.jackson.map.introspect.AnnotatedParameter getConstructorParameter() -> getConstructorParameter
    org.codehaus.jackson.map.introspect.AnnotatedMember getAccessor() -> getAccessor
    org.codehaus.jackson.map.introspect.AnnotatedMember getMutator() -> getMutator
org.codehaus.jackson.map.ClassIntrospector -> org.codehaus.jackson.map.ClassIntrospector:
    org.codehaus.jackson.map.BeanDescription forSerialization(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forSerialization
    org.codehaus.jackson.map.BeanDescription forDeserialization(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forDeserialization
    org.codehaus.jackson.map.BeanDescription forCreation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forCreation
    org.codehaus.jackson.map.BeanDescription forClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forClassAnnotations
    org.codehaus.jackson.map.BeanDescription forDirectClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forDirectClassAnnotations
    org.codehaus.jackson.map.BeanDescription forClassAnnotations(org.codehaus.jackson.map.MapperConfig,java.lang.Class,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forClassAnnotations
    org.codehaus.jackson.map.BeanDescription forDirectClassAnnotations(org.codehaus.jackson.map.MapperConfig,java.lang.Class,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forDirectClassAnnotations
org.codehaus.jackson.map.ClassIntrospector$MixInResolver -> org.codehaus.jackson.map.ClassIntrospector$MixInResolver:
    java.lang.Class findMixInClassFor(java.lang.Class) -> findMixInClassFor
org.codehaus.jackson.map.ContextualDeserializer -> org.codehaus.jackson.map.ContextualDeserializer:
    org.codehaus.jackson.map.JsonDeserializer createContextual(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> createContextual
org.codehaus.jackson.map.ContextualKeyDeserializer -> org.codehaus.jackson.map.ContextualKeyDeserializer:
    org.codehaus.jackson.map.KeyDeserializer createContextual(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> createContextual
org.codehaus.jackson.map.ContextualSerializer -> org.codehaus.jackson.map.ContextualSerializer:
    org.codehaus.jackson.map.JsonSerializer createContextual(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.BeanProperty) -> createContextual
org.codehaus.jackson.map.DeserializationConfig -> org.codehaus.jackson.map.DeserializationConfig:
    org.codehaus.jackson.map.util.LinkedNode _problemHandlers -> _problemHandlers
    org.codehaus.jackson.node.JsonNodeFactory _nodeFactory -> _nodeFactory
    boolean _sortPropertiesAlphabetically -> _sortPropertiesAlphabetically
    org.codehaus.jackson.map.DeserializationConfig passSerializationFeatures(int) -> passSerializationFeatures
    org.codehaus.jackson.map.DeserializationConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector) -> withClassIntrospector
    org.codehaus.jackson.map.DeserializationConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAnnotationIntrospector
    org.codehaus.jackson.map.DeserializationConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker) -> withVisibilityChecker
    org.codehaus.jackson.map.DeserializationConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.DeserializationConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder) -> withTypeResolverBuilder
    org.codehaus.jackson.map.DeserializationConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> withSubtypeResolver
    org.codehaus.jackson.map.DeserializationConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy) -> withPropertyNamingStrategy
    org.codehaus.jackson.map.DeserializationConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory) -> withTypeFactory
    org.codehaus.jackson.map.DeserializationConfig withDateFormat(java.text.DateFormat) -> withDateFormat
    org.codehaus.jackson.map.DeserializationConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator) -> withHandlerInstantiator
    org.codehaus.jackson.map.DeserializationConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    org.codehaus.jackson.map.DeserializationConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    org.codehaus.jackson.map.DeserializationConfig withNodeFactory(org.codehaus.jackson.node.JsonNodeFactory) -> withNodeFactory
    org.codehaus.jackson.map.DeserializationConfig with(org.codehaus.jackson.map.DeserializationConfig$Feature[]) -> with
    org.codehaus.jackson.map.DeserializationConfig without(org.codehaus.jackson.map.DeserializationConfig$Feature[]) -> without
    void fromAnnotations(java.lang.Class) -> fromAnnotations
    org.codehaus.jackson.map.DeserializationConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> createUnshared
    org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(org.codehaus.jackson.type.JavaType) -> introspectClassAnnotations
    org.codehaus.jackson.map.BeanDescription introspectDirectClassAnnotations(org.codehaus.jackson.type.JavaType) -> introspectDirectClassAnnotations
    boolean isAnnotationProcessingEnabled() -> isAnnotationProcessingEnabled
    boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    boolean shouldSortPropertiesAlphabetically() -> shouldSortPropertiesAlphabetically
    org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker() -> getDefaultVisibilityChecker
    boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature) -> isEnabled
    void enable(org.codehaus.jackson.map.DeserializationConfig$Feature) -> enable
    void disable(org.codehaus.jackson.map.DeserializationConfig$Feature) -> disable
    void set(org.codehaus.jackson.map.DeserializationConfig$Feature,boolean) -> set
    org.codehaus.jackson.map.util.LinkedNode getProblemHandlers() -> getProblemHandlers
    void addHandler(org.codehaus.jackson.map.DeserializationProblemHandler) -> addHandler
    void clearHandlers() -> clearHandlers
    org.codehaus.jackson.Base64Variant getBase64Variant() -> getBase64Variant
    org.codehaus.jackson.node.JsonNodeFactory getNodeFactory() -> getNodeFactory
    org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType) -> introspect
    org.codehaus.jackson.map.BeanDescription introspectForCreation(org.codehaus.jackson.type.JavaType) -> introspectForCreation
    org.codehaus.jackson.map.JsonDeserializer deserializerInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> deserializerInstance
    org.codehaus.jackson.map.KeyDeserializer keyDeserializerInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> keyDeserializerInstance
    org.codehaus.jackson.map.deser.ValueInstantiator valueInstantiatorInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> valueInstantiatorInstance
    void set(org.codehaus.jackson.map.MapperConfig$ConfigFeature,boolean) -> set
    void disable(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> disable
    void enable(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> enable
    boolean isEnabled(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> isEnabled
    org.codehaus.jackson.map.MapperConfig$Impl without(org.codehaus.jackson.map.MapperConfig$ConfigFeature[]) -> without
    org.codehaus.jackson.map.MapperConfig$Impl with(org.codehaus.jackson.map.MapperConfig$ConfigFeature[]) -> with
    org.codehaus.jackson.map.MapperConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator) -> withHandlerInstantiator
    org.codehaus.jackson.map.MapperConfig withDateFormat(java.text.DateFormat) -> withDateFormat
    org.codehaus.jackson.map.MapperConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory) -> withTypeFactory
    org.codehaus.jackson.map.MapperConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy) -> withPropertyNamingStrategy
    org.codehaus.jackson.map.MapperConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> withSubtypeResolver
    org.codehaus.jackson.map.MapperConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder) -> withTypeResolverBuilder
    org.codehaus.jackson.map.MapperConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.MapperConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker) -> withVisibilityChecker
    org.codehaus.jackson.map.MapperConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector) -> withClassIntrospector
    org.codehaus.jackson.map.MapperConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> createUnshared
org.codehaus.jackson.map.DeserializationConfig$Feature -> org.codehaus.jackson.map.DeserializationConfig$Feature:
    org.codehaus.jackson.map.DeserializationConfig$Feature USE_ANNOTATIONS -> USE_ANNOTATIONS
    org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_SETTERS -> AUTO_DETECT_SETTERS
    org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_CREATORS -> AUTO_DETECT_CREATORS
    org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_FIELDS -> AUTO_DETECT_FIELDS
    org.codehaus.jackson.map.DeserializationConfig$Feature USE_GETTERS_AS_SETTERS -> USE_GETTERS_AS_SETTERS
    org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS -> CAN_OVERRIDE_ACCESS_MODIFIERS
    org.codehaus.jackson.map.DeserializationConfig$Feature USE_BIG_DECIMAL_FOR_FLOATS -> USE_BIG_DECIMAL_FOR_FLOATS
    org.codehaus.jackson.map.DeserializationConfig$Feature USE_BIG_INTEGER_FOR_INTS -> USE_BIG_INTEGER_FOR_INTS
    org.codehaus.jackson.map.DeserializationConfig$Feature USE_JAVA_ARRAY_FOR_JSON_ARRAY -> USE_JAVA_ARRAY_FOR_JSON_ARRAY
    org.codehaus.jackson.map.DeserializationConfig$Feature READ_ENUMS_USING_TO_STRING -> READ_ENUMS_USING_TO_STRING
    org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_UNKNOWN_PROPERTIES -> FAIL_ON_UNKNOWN_PROPERTIES
    org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_NULL_FOR_PRIMITIVES -> FAIL_ON_NULL_FOR_PRIMITIVES
    org.codehaus.jackson.map.DeserializationConfig$Feature FAIL_ON_NUMBERS_FOR_ENUMS -> FAIL_ON_NUMBERS_FOR_ENUMS
    org.codehaus.jackson.map.DeserializationConfig$Feature WRAP_EXCEPTIONS -> WRAP_EXCEPTIONS
    org.codehaus.jackson.map.DeserializationConfig$Feature ACCEPT_SINGLE_VALUE_AS_ARRAY -> ACCEPT_SINGLE_VALUE_AS_ARRAY
    org.codehaus.jackson.map.DeserializationConfig$Feature UNWRAP_ROOT_VALUE -> UNWRAP_ROOT_VALUE
    org.codehaus.jackson.map.DeserializationConfig$Feature ACCEPT_EMPTY_STRING_AS_NULL_OBJECT -> ACCEPT_EMPTY_STRING_AS_NULL_OBJECT
    boolean _defaultState -> _defaultState
    org.codehaus.jackson.map.DeserializationConfig$Feature[] $VALUES -> $VALUES
    org.codehaus.jackson.map.DeserializationConfig$Feature[] values() -> values
    org.codehaus.jackson.map.DeserializationConfig$Feature valueOf(java.lang.String) -> valueOf
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
org.codehaus.jackson.map.DeserializationContext -> org.codehaus.jackson.map.DeserializationContext:
    org.codehaus.jackson.map.DeserializationConfig _config -> _config
    int _featureFlags -> _featureFlags
    org.codehaus.jackson.map.DeserializationConfig getConfig() -> getConfig
    org.codehaus.jackson.map.DeserializerProvider getDeserializerProvider() -> getDeserializerProvider
    boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature) -> isEnabled
    org.codehaus.jackson.Base64Variant getBase64Variant() -> getBase64Variant
    org.codehaus.jackson.JsonParser getParser() -> getParser
    org.codehaus.jackson.node.JsonNodeFactory getNodeFactory() -> getNodeFactory
    org.codehaus.jackson.type.JavaType constructType(java.lang.Class) -> constructType
    org.codehaus.jackson.map.type.TypeFactory getTypeFactory() -> getTypeFactory
    java.lang.Object findInjectableValue(java.lang.Object,org.codehaus.jackson.map.BeanProperty,java.lang.Object) -> findInjectableValue
    org.codehaus.jackson.map.util.ObjectBuffer leaseObjectBuffer() -> leaseObjectBuffer
    void returnObjectBuffer(org.codehaus.jackson.map.util.ObjectBuffer) -> returnObjectBuffer
    org.codehaus.jackson.map.util.ArrayBuilders getArrayBuilders() -> getArrayBuilders
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.util.Calendar constructCalendar(java.util.Date) -> constructCalendar
    boolean handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.JsonDeserializer,java.lang.Object,java.lang.String) -> handleUnknownProperty
    org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class) -> mappingException
    org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class,org.codehaus.jackson.JsonToken) -> mappingException
    org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.String) -> mappingException
    org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable) -> instantiationException
    org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.String) -> instantiationException
    org.codehaus.jackson.map.JsonMappingException weirdStringException(java.lang.Class,java.lang.String) -> weirdStringException
    org.codehaus.jackson.map.JsonMappingException weirdNumberException(java.lang.Class,java.lang.String) -> weirdNumberException
    org.codehaus.jackson.map.JsonMappingException weirdKeyException(java.lang.Class,java.lang.String,java.lang.String) -> weirdKeyException
    org.codehaus.jackson.map.JsonMappingException wrongTokenException(org.codehaus.jackson.JsonParser,org.codehaus.jackson.JsonToken,java.lang.String) -> wrongTokenException
    org.codehaus.jackson.map.JsonMappingException unknownFieldException(java.lang.Object,java.lang.String) -> unknownFieldException
    org.codehaus.jackson.map.JsonMappingException unknownTypeException(org.codehaus.jackson.type.JavaType,java.lang.String) -> unknownTypeException
org.codehaus.jackson.map.DeserializationProblemHandler -> org.codehaus.jackson.map.DeserializationProblemHandler:
    boolean handleUnknownProperty(org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.JsonDeserializer,java.lang.Object,java.lang.String) -> handleUnknownProperty
org.codehaus.jackson.map.DeserializerFactory -> org.codehaus.jackson.map.DeserializerFactory:
    org.codehaus.jackson.map.Deserializers[] NO_DESERIALIZERS -> NO_DESERIALIZERS
    org.codehaus.jackson.map.DeserializerFactory$Config getConfig() -> getConfig
    org.codehaus.jackson.map.DeserializerFactory withConfig(org.codehaus.jackson.map.DeserializerFactory$Config) -> withConfig
    org.codehaus.jackson.map.DeserializerFactory withAdditionalDeserializers(org.codehaus.jackson.map.Deserializers) -> withAdditionalDeserializers
    org.codehaus.jackson.map.DeserializerFactory withAdditionalKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers) -> withAdditionalKeyDeserializers
    org.codehaus.jackson.map.DeserializerFactory withDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier) -> withDeserializerModifier
    org.codehaus.jackson.map.DeserializerFactory withAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver) -> withAbstractTypeResolver
    org.codehaus.jackson.map.DeserializerFactory withValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators) -> withValueInstantiators
    org.codehaus.jackson.type.JavaType mapAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> mapAbstractType
    org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> findValueInstantiator
    org.codehaus.jackson.map.JsonDeserializer createBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createBeanDeserializer
    org.codehaus.jackson.map.JsonDeserializer createArrayDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.BeanProperty) -> createArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer createCollectionDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.BeanProperty) -> createCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer createCollectionLikeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.BeanProperty) -> createCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer createEnumDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer createMapDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.BeanProperty) -> createMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer createMapLikeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.BeanProperty) -> createMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer createTreeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createTreeDeserializer
    org.codehaus.jackson.map.KeyDeserializer createKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createKeyDeserializer
    org.codehaus.jackson.map.TypeDeserializer findTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findTypeDeserializer
org.codehaus.jackson.map.DeserializerFactory$Config -> org.codehaus.jackson.map.DeserializerFactory$Config:
    org.codehaus.jackson.map.DeserializerFactory$Config withAdditionalDeserializers(org.codehaus.jackson.map.Deserializers) -> withAdditionalDeserializers
    org.codehaus.jackson.map.DeserializerFactory$Config withAdditionalKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers) -> withAdditionalKeyDeserializers
    org.codehaus.jackson.map.DeserializerFactory$Config withDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier) -> withDeserializerModifier
    org.codehaus.jackson.map.DeserializerFactory$Config withAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver) -> withAbstractTypeResolver
    org.codehaus.jackson.map.DeserializerFactory$Config withValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators) -> withValueInstantiators
    java.lang.Iterable deserializers() -> deserializers
    java.lang.Iterable keyDeserializers() -> keyDeserializers
    java.lang.Iterable deserializerModifiers() -> deserializerModifiers
    java.lang.Iterable abstractTypeResolvers() -> abstractTypeResolvers
    java.lang.Iterable valueInstantiators() -> valueInstantiators
    boolean hasDeserializers() -> hasDeserializers
    boolean hasKeyDeserializers() -> hasKeyDeserializers
    boolean hasDeserializerModifiers() -> hasDeserializerModifiers
    boolean hasAbstractTypeResolvers() -> hasAbstractTypeResolvers
    boolean hasValueInstantiators() -> hasValueInstantiators
org.codehaus.jackson.map.DeserializerProvider -> org.codehaus.jackson.map.DeserializerProvider:
    org.codehaus.jackson.map.DeserializerProvider withFactory(org.codehaus.jackson.map.DeserializerFactory) -> withFactory
    org.codehaus.jackson.map.DeserializerProvider withAdditionalDeserializers(org.codehaus.jackson.map.Deserializers) -> withAdditionalDeserializers
    org.codehaus.jackson.map.DeserializerProvider withAdditionalKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers) -> withAdditionalKeyDeserializers
    org.codehaus.jackson.map.DeserializerProvider withDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier) -> withDeserializerModifier
    org.codehaus.jackson.map.DeserializerProvider withAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver) -> withAbstractTypeResolver
    org.codehaus.jackson.map.DeserializerProvider withValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators) -> withValueInstantiators
    org.codehaus.jackson.map.JsonDeserializer findValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findValueDeserializer
    org.codehaus.jackson.map.JsonDeserializer findTypedValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findTypedValueDeserializer
    org.codehaus.jackson.map.KeyDeserializer findKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findKeyDeserializer
    boolean hasValueDeserializerFor(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> hasValueDeserializerFor
    org.codehaus.jackson.type.JavaType mapAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> mapAbstractType
    org.codehaus.jackson.io.SerializedString findExpectedRootName(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> findExpectedRootName
    int cachedDeserializersCount() -> cachedDeserializersCount
    void flushCachedDeserializers() -> flushCachedDeserializers
org.codehaus.jackson.map.Deserializers -> org.codehaus.jackson.map.Deserializers:
    org.codehaus.jackson.map.JsonDeserializer findArrayDeserializer(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer findCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer findCollectionLikeDeserializer(org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findEnumDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer findMapDeserializer(org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer findMapLikeDeserializer(org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> findTreeNodeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findBeanDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findBeanDeserializer
org.codehaus.jackson.map.Deserializers$Base -> org.codehaus.jackson.map.Deserializers$Base:
    org.codehaus.jackson.map.JsonDeserializer findArrayDeserializer(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer findCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer findCollectionLikeDeserializer(org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findMapDeserializer(org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer findMapLikeDeserializer(org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findEnumDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> findTreeNodeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findBeanDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findBeanDeserializer
org.codehaus.jackson.map.Deserializers$None -> org.codehaus.jackson.map.Deserializers$None:
org.codehaus.jackson.map.HandlerInstantiator -> org.codehaus.jackson.map.HandlerInstantiator:
    org.codehaus.jackson.map.JsonDeserializer deserializerInstance(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> deserializerInstance
    org.codehaus.jackson.map.KeyDeserializer keyDeserializerInstance(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> keyDeserializerInstance
    org.codehaus.jackson.map.JsonSerializer serializerInstance(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> serializerInstance
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder typeResolverBuilderInstance(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> typeResolverBuilderInstance
    org.codehaus.jackson.map.jsontype.TypeIdResolver typeIdResolverInstance(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> typeIdResolverInstance
    org.codehaus.jackson.map.deser.ValueInstantiator valueInstantiatorInstance(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> valueInstantiatorInstance
org.codehaus.jackson.map.InjectableValues -> org.codehaus.jackson.map.InjectableValues:
    java.lang.Object findInjectableValue(java.lang.Object,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.BeanProperty,java.lang.Object) -> findInjectableValue
org.codehaus.jackson.map.InjectableValues$Std -> org.codehaus.jackson.map.InjectableValues$Std:
    java.util.Map _values -> _values
    org.codehaus.jackson.map.InjectableValues$Std addValue(java.lang.String,java.lang.Object) -> addValue
    org.codehaus.jackson.map.InjectableValues$Std addValue(java.lang.Class,java.lang.Object) -> addValue
    java.lang.Object findInjectableValue(java.lang.Object,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.BeanProperty,java.lang.Object) -> findInjectableValue
org.codehaus.jackson.map.JsonDeserializer -> org.codehaus.jackson.map.JsonDeserializer:
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    org.codehaus.jackson.map.JsonDeserializer unwrappingDeserializer() -> unwrappingDeserializer
    java.lang.Object getNullValue() -> getNullValue
    java.lang.Object getEmptyValue() -> getEmptyValue
org.codehaus.jackson.map.JsonDeserializer$None -> org.codehaus.jackson.map.JsonDeserializer$None:
org.codehaus.jackson.map.JsonMappingException -> org.codehaus.jackson.map.JsonMappingException:
    long serialVersionUID -> serialVersionUID
    int MAX_REFS_TO_LIST -> MAX_REFS_TO_LIST
    java.util.LinkedList _path -> _path
    org.codehaus.jackson.map.JsonMappingException from(org.codehaus.jackson.JsonParser,java.lang.String) -> from
    org.codehaus.jackson.map.JsonMappingException from(org.codehaus.jackson.JsonParser,java.lang.String,java.lang.Throwable) -> from
    org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapWithPath
    org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,int) -> wrapWithPath
    org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,org.codehaus.jackson.map.JsonMappingException$Reference) -> wrapWithPath
    java.util.List getPath() -> getPath
    void prependPath(java.lang.Object,java.lang.String) -> prependPath
    void prependPath(java.lang.Object,int) -> prependPath
    void prependPath(org.codehaus.jackson.map.JsonMappingException$Reference) -> prependPath
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
    void _appendPathDesc(java.lang.StringBuilder) -> _appendPathDesc
org.codehaus.jackson.map.JsonMappingException$Reference -> org.codehaus.jackson.map.JsonMappingException$Reference:
    long serialVersionUID -> serialVersionUID
    java.lang.Object _from -> _from
    java.lang.String _fieldName -> _fieldName
    int _index -> _index
    void setFrom(java.lang.Object) -> setFrom
    void setFieldName(java.lang.String) -> setFieldName
    void setIndex(int) -> setIndex
    java.lang.Object getFrom() -> getFrom
    java.lang.String getFieldName() -> getFieldName
    int getIndex() -> getIndex
    java.lang.String toString() -> toString
org.codehaus.jackson.map.JsonSerializable -> org.codehaus.jackson.map.JsonSerializable:
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.JsonSerializableWithType -> org.codehaus.jackson.map.JsonSerializableWithType:
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.JsonSerializer -> org.codehaus.jackson.map.JsonSerializer:
    org.codehaus.jackson.map.JsonSerializer unwrappingSerializer() -> unwrappingSerializer
    boolean isUnwrappingSerializer() -> isUnwrappingSerializer
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    java.lang.Class handledType() -> handledType
org.codehaus.jackson.map.JsonSerializer$None -> org.codehaus.jackson.map.JsonSerializer$None:
org.codehaus.jackson.map.KeyDeserializer -> org.codehaus.jackson.map.KeyDeserializer:
    java.lang.Object deserializeKey(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> deserializeKey
org.codehaus.jackson.map.KeyDeserializer$None -> org.codehaus.jackson.map.KeyDeserializer$None:
org.codehaus.jackson.map.KeyDeserializers -> org.codehaus.jackson.map.KeyDeserializers:
    org.codehaus.jackson.map.KeyDeserializer findKeyDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findKeyDeserializer
org.codehaus.jackson.map.MapperConfig -> org.codehaus.jackson.map.MapperConfig:
    java.text.DateFormat DEFAULT_DATE_FORMAT -> DEFAULT_DATE_FORMAT
    org.codehaus.jackson.map.MapperConfig$Base _base -> _base
    java.util.HashMap _mixInAnnotations -> _mixInAnnotations
    boolean _mixInAnnotationsShared -> _mixInAnnotationsShared
    org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver -> _subtypeResolver
    void fromAnnotations(java.lang.Class) -> fromAnnotations
    org.codehaus.jackson.map.MapperConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> createUnshared
    org.codehaus.jackson.map.MapperConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector) -> withClassIntrospector
    org.codehaus.jackson.map.MapperConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker) -> withVisibilityChecker
    org.codehaus.jackson.map.MapperConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.MapperConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder) -> withTypeResolverBuilder
    org.codehaus.jackson.map.MapperConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> withSubtypeResolver
    org.codehaus.jackson.map.MapperConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy) -> withPropertyNamingStrategy
    org.codehaus.jackson.map.MapperConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory) -> withTypeFactory
    org.codehaus.jackson.map.MapperConfig withDateFormat(java.text.DateFormat) -> withDateFormat
    org.codehaus.jackson.map.MapperConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator) -> withHandlerInstantiator
    org.codehaus.jackson.map.MapperConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    boolean isEnabled(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> isEnabled
    boolean isAnnotationProcessingEnabled() -> isAnnotationProcessingEnabled
    boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    boolean shouldSortPropertiesAlphabetically() -> shouldSortPropertiesAlphabetically
    org.codehaus.jackson.map.ClassIntrospector getClassIntrospector() -> getClassIntrospector
    org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    void insertAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> insertAnnotationIntrospector
    void appendAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> appendAnnotationIntrospector
    org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker() -> getDefaultVisibilityChecker
    org.codehaus.jackson.map.PropertyNamingStrategy getPropertyNamingStrategy() -> getPropertyNamingStrategy
    org.codehaus.jackson.map.HandlerInstantiator getHandlerInstantiator() -> getHandlerInstantiator
    void setMixInAnnotations(java.util.Map) -> setMixInAnnotations
    void addMixInAnnotations(java.lang.Class,java.lang.Class) -> addMixInAnnotations
    java.lang.Class findMixInClassFor(java.lang.Class) -> findMixInClassFor
    int mixInCount() -> mixInCount
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder getDefaultTyper(org.codehaus.jackson.type.JavaType) -> getDefaultTyper
    org.codehaus.jackson.map.jsontype.SubtypeResolver getSubtypeResolver() -> getSubtypeResolver
    org.codehaus.jackson.map.type.TypeFactory getTypeFactory() -> getTypeFactory
    org.codehaus.jackson.type.JavaType constructType(java.lang.Class) -> constructType
    org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference) -> constructType
    org.codehaus.jackson.type.JavaType constructSpecializedType(org.codehaus.jackson.type.JavaType,java.lang.Class) -> constructSpecializedType
    java.text.DateFormat getDateFormat() -> getDateFormat
    org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(java.lang.Class) -> introspectClassAnnotations
    org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(org.codehaus.jackson.type.JavaType) -> introspectClassAnnotations
    org.codehaus.jackson.map.BeanDescription introspectDirectClassAnnotations(java.lang.Class) -> introspectDirectClassAnnotations
    org.codehaus.jackson.map.BeanDescription introspectDirectClassAnnotations(org.codehaus.jackson.type.JavaType) -> introspectDirectClassAnnotations
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder typeResolverBuilderInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> typeResolverBuilderInstance
    org.codehaus.jackson.map.jsontype.TypeIdResolver typeIdResolverInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> typeIdResolverInstance
    void setAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> setAnnotationIntrospector
    void setDateFormat(java.text.DateFormat) -> setDateFormat
org.codehaus.jackson.map.MapperConfig$Base -> org.codehaus.jackson.map.MapperConfig$Base:
    org.codehaus.jackson.map.ClassIntrospector _classIntrospector -> _classIntrospector
    org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker -> _visibilityChecker
    org.codehaus.jackson.map.PropertyNamingStrategy _propertyNamingStrategy -> _propertyNamingStrategy
    org.codehaus.jackson.map.type.TypeFactory _typeFactory -> _typeFactory
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder _typeResolverBuilder -> _typeResolverBuilder
    java.text.DateFormat _dateFormat -> _dateFormat
    org.codehaus.jackson.map.HandlerInstantiator _handlerInstantiator -> _handlerInstantiator
    org.codehaus.jackson.map.MapperConfig$Base withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector) -> withClassIntrospector
    org.codehaus.jackson.map.MapperConfig$Base withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig$Base withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig$Base withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig$Base withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker) -> withVisibilityChecker
    org.codehaus.jackson.map.MapperConfig$Base withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.MapperConfig$Base withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy) -> withPropertyNamingStrategy
    org.codehaus.jackson.map.MapperConfig$Base withTypeFactory(org.codehaus.jackson.map.type.TypeFactory) -> withTypeFactory
    org.codehaus.jackson.map.MapperConfig$Base withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder) -> withTypeResolverBuilder
    org.codehaus.jackson.map.MapperConfig$Base withDateFormat(java.text.DateFormat) -> withDateFormat
    org.codehaus.jackson.map.MapperConfig$Base withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator) -> withHandlerInstantiator
    org.codehaus.jackson.map.ClassIntrospector getClassIntrospector() -> getClassIntrospector
    org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    org.codehaus.jackson.map.introspect.VisibilityChecker getVisibilityChecker() -> getVisibilityChecker
    org.codehaus.jackson.map.PropertyNamingStrategy getPropertyNamingStrategy() -> getPropertyNamingStrategy
    org.codehaus.jackson.map.type.TypeFactory getTypeFactory() -> getTypeFactory
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder getTypeResolverBuilder() -> getTypeResolverBuilder
    java.text.DateFormat getDateFormat() -> getDateFormat
    org.codehaus.jackson.map.HandlerInstantiator getHandlerInstantiator() -> getHandlerInstantiator
org.codehaus.jackson.map.MapperConfig$ConfigFeature -> org.codehaus.jackson.map.MapperConfig$ConfigFeature:
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
org.codehaus.jackson.map.MapperConfig$Impl -> org.codehaus.jackson.map.MapperConfig$Impl:
    int _featureFlags -> _featureFlags
    int collectFeatureDefaults(java.lang.Class) -> collectFeatureDefaults
    org.codehaus.jackson.map.MapperConfig$Impl with(org.codehaus.jackson.map.MapperConfig$ConfigFeature[]) -> with
    org.codehaus.jackson.map.MapperConfig$Impl without(org.codehaus.jackson.map.MapperConfig$ConfigFeature[]) -> without
    boolean isEnabled(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> isEnabled
    void enable(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> enable
    void disable(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> disable
    void set(org.codehaus.jackson.map.MapperConfig$ConfigFeature,boolean) -> set
org.codehaus.jackson.map.MappingIterator -> org.codehaus.jackson.map.MappingIterator:
    org.codehaus.jackson.map.MappingIterator EMPTY_ITERATOR -> EMPTY_ITERATOR
    org.codehaus.jackson.type.JavaType _type -> _type
    org.codehaus.jackson.map.DeserializationContext _context -> _context
    org.codehaus.jackson.map.JsonDeserializer _deserializer -> _deserializer
    org.codehaus.jackson.JsonParser _parser -> _parser
    boolean _closeParser -> _closeParser
    boolean _hasNextChecked -> _hasNextChecked
    java.lang.Object _updatedValue -> _updatedValue
    org.codehaus.jackson.map.MappingIterator emptyIterator() -> emptyIterator
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    boolean hasNextValue() -> hasNextValue
    java.lang.Object nextValue() -> nextValue
org.codehaus.jackson.map.MappingJsonFactory -> org.codehaus.jackson.map.MappingJsonFactory:
    org.codehaus.jackson.map.ObjectMapper getCodec() -> getCodec
    java.lang.String getFormatName() -> getFormatName
    org.codehaus.jackson.format.MatchStrength hasFormat(org.codehaus.jackson.format.InputAccessor) -> hasFormat
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
org.codehaus.jackson.map.Module -> org.codehaus.jackson.map.Module:
    java.lang.String getModuleName() -> getModuleName
    org.codehaus.jackson.Version version() -> version
    void setupModule(org.codehaus.jackson.map.Module$SetupContext) -> setupModule
org.codehaus.jackson.map.Module$SetupContext -> org.codehaus.jackson.map.Module$SetupContext:
    org.codehaus.jackson.Version getMapperVersion() -> getMapperVersion
    org.codehaus.jackson.map.DeserializationConfig getDeserializationConfig() -> getDeserializationConfig
    org.codehaus.jackson.map.SerializationConfig getSerializationConfig() -> getSerializationConfig
    boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.JsonParser$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    void addDeserializers(org.codehaus.jackson.map.Deserializers) -> addDeserializers
    void addKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers) -> addKeyDeserializers
    void addSerializers(org.codehaus.jackson.map.Serializers) -> addSerializers
    void addKeySerializers(org.codehaus.jackson.map.Serializers) -> addKeySerializers
    void addBeanDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier) -> addBeanDeserializerModifier
    void addBeanSerializerModifier(org.codehaus.jackson.map.ser.BeanSerializerModifier) -> addBeanSerializerModifier
    void addAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver) -> addAbstractTypeResolver
    void addTypeModifier(org.codehaus.jackson.map.type.TypeModifier) -> addTypeModifier
    void addValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators) -> addValueInstantiators
    void insertAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> insertAnnotationIntrospector
    void appendAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> appendAnnotationIntrospector
    void setMixInAnnotations(java.lang.Class,java.lang.Class) -> setMixInAnnotations
org.codehaus.jackson.map.ObjectMapper -> org.codehaus.jackson.map.ObjectMapper:
    org.codehaus.jackson.type.JavaType JSON_NODE_TYPE -> JSON_NODE_TYPE
    org.codehaus.jackson.map.ClassIntrospector DEFAULT_INTROSPECTOR -> DEFAULT_INTROSPECTOR
    org.codehaus.jackson.map.AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR -> DEFAULT_ANNOTATION_INTROSPECTOR
    org.codehaus.jackson.map.introspect.VisibilityChecker STD_VISIBILITY_CHECKER -> STD_VISIBILITY_CHECKER
    org.codehaus.jackson.JsonFactory _jsonFactory -> _jsonFactory
    org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver -> _subtypeResolver
    org.codehaus.jackson.map.type.TypeFactory _typeFactory -> _typeFactory
    org.codehaus.jackson.map.InjectableValues _injectableValues -> _injectableValues
    org.codehaus.jackson.map.SerializationConfig _serializationConfig -> _serializationConfig
    org.codehaus.jackson.map.SerializerProvider _serializerProvider -> _serializerProvider
    org.codehaus.jackson.map.SerializerFactory _serializerFactory -> _serializerFactory
    org.codehaus.jackson.map.DeserializationConfig _deserializationConfig -> _deserializationConfig
    org.codehaus.jackson.map.DeserializerProvider _deserializerProvider -> _deserializerProvider
    java.util.concurrent.ConcurrentHashMap _rootDeserializers -> _rootDeserializers
    org.codehaus.jackson.Version version() -> version
    void registerModule(org.codehaus.jackson.map.Module) -> registerModule
    org.codehaus.jackson.map.ObjectMapper withModule(org.codehaus.jackson.map.Module) -> withModule
    org.codehaus.jackson.map.SerializationConfig getSerializationConfig() -> getSerializationConfig
    org.codehaus.jackson.map.SerializationConfig copySerializationConfig() -> copySerializationConfig
    org.codehaus.jackson.map.ObjectMapper setSerializationConfig(org.codehaus.jackson.map.SerializationConfig) -> setSerializationConfig
    org.codehaus.jackson.map.DeserializationConfig getDeserializationConfig() -> getDeserializationConfig
    org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig() -> copyDeserializationConfig
    org.codehaus.jackson.map.ObjectMapper setDeserializationConfig(org.codehaus.jackson.map.DeserializationConfig) -> setDeserializationConfig
    org.codehaus.jackson.map.ObjectMapper setSerializerFactory(org.codehaus.jackson.map.SerializerFactory) -> setSerializerFactory
    org.codehaus.jackson.map.ObjectMapper setSerializerProvider(org.codehaus.jackson.map.SerializerProvider) -> setSerializerProvider
    org.codehaus.jackson.map.SerializerProvider getSerializerProvider() -> getSerializerProvider
    org.codehaus.jackson.map.ObjectMapper setDeserializerProvider(org.codehaus.jackson.map.DeserializerProvider) -> setDeserializerProvider
    org.codehaus.jackson.map.DeserializerProvider getDeserializerProvider() -> getDeserializerProvider
    org.codehaus.jackson.map.introspect.VisibilityChecker getVisibilityChecker() -> getVisibilityChecker
    void setVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker) -> setVisibilityChecker
    org.codehaus.jackson.map.ObjectMapper setVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> setVisibility
    org.codehaus.jackson.map.jsontype.SubtypeResolver getSubtypeResolver() -> getSubtypeResolver
    void setSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> setSubtypeResolver
    org.codehaus.jackson.map.ObjectMapper setAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> setAnnotationIntrospector
    org.codehaus.jackson.map.ObjectMapper setPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy) -> setPropertyNamingStrategy
    org.codehaus.jackson.map.ObjectMapper setSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion) -> setSerializationInclusion
    org.codehaus.jackson.map.ObjectMapper enableDefaultTyping() -> enableDefaultTyping
    org.codehaus.jackson.map.ObjectMapper enableDefaultTyping(org.codehaus.jackson.map.ObjectMapper$DefaultTyping) -> enableDefaultTyping
    org.codehaus.jackson.map.ObjectMapper enableDefaultTyping(org.codehaus.jackson.map.ObjectMapper$DefaultTyping,org.codehaus.jackson.annotate.JsonTypeInfo$As) -> enableDefaultTyping
    org.codehaus.jackson.map.ObjectMapper enableDefaultTypingAsProperty(org.codehaus.jackson.map.ObjectMapper$DefaultTyping,java.lang.String) -> enableDefaultTypingAsProperty
    org.codehaus.jackson.map.ObjectMapper disableDefaultTyping() -> disableDefaultTyping
    org.codehaus.jackson.map.ObjectMapper setDefaultTyping(org.codehaus.jackson.map.jsontype.TypeResolverBuilder) -> setDefaultTyping
    void registerSubtypes(java.lang.Class[]) -> registerSubtypes
    void registerSubtypes(org.codehaus.jackson.map.jsontype.NamedType[]) -> registerSubtypes
    org.codehaus.jackson.map.type.TypeFactory getTypeFactory() -> getTypeFactory
    org.codehaus.jackson.map.ObjectMapper setTypeFactory(org.codehaus.jackson.map.type.TypeFactory) -> setTypeFactory
    org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type) -> constructType
    org.codehaus.jackson.map.ObjectMapper setNodeFactory(org.codehaus.jackson.node.JsonNodeFactory) -> setNodeFactory
    void setFilters(org.codehaus.jackson.map.ser.FilterProvider) -> setFilters
    org.codehaus.jackson.JsonFactory getJsonFactory() -> getJsonFactory
    void setDateFormat(java.text.DateFormat) -> setDateFormat
    void setHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator) -> setHandlerInstantiator
    org.codehaus.jackson.map.ObjectMapper setInjectableValues(org.codehaus.jackson.map.InjectableValues) -> setInjectableValues
    org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.map.SerializationConfig$Feature,boolean) -> configure
    org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.map.DeserializationConfig$Feature,boolean) -> configure
    org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.JsonParser$Feature,boolean) -> configure
    org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.JsonGenerator$Feature,boolean) -> configure
    org.codehaus.jackson.map.ObjectMapper enable(org.codehaus.jackson.map.DeserializationConfig$Feature[]) -> enable
    org.codehaus.jackson.map.ObjectMapper disable(org.codehaus.jackson.map.DeserializationConfig$Feature[]) -> disable
    org.codehaus.jackson.map.ObjectMapper enable(org.codehaus.jackson.map.SerializationConfig$Feature[]) -> enable
    org.codehaus.jackson.map.ObjectMapper disable(org.codehaus.jackson.map.SerializationConfig$Feature[]) -> disable
    boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.JsonParser$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    org.codehaus.jackson.node.JsonNodeFactory getNodeFactory() -> getNodeFactory
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,java.lang.Class) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> readValue
    org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser) -> readTree
    org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser,java.lang.Class) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference) -> readValues
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,java.lang.Class,org.codehaus.jackson.map.DeserializationConfig) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference,org.codehaus.jackson.map.DeserializationConfig) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig) -> readValue
    org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig) -> readTree
    org.codehaus.jackson.JsonNode readTree(java.io.InputStream) -> readTree
    org.codehaus.jackson.JsonNode readTree(java.io.Reader) -> readTree
    org.codehaus.jackson.JsonNode readTree(java.lang.String) -> readTree
    org.codehaus.jackson.JsonNode readTree(byte[]) -> readTree
    org.codehaus.jackson.JsonNode readTree(java.io.File) -> readTree
    org.codehaus.jackson.JsonNode readTree(java.net.URL) -> readTree
    void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> writeValue
    void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig) -> writeValue
    void writeTree(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.JsonNode) -> writeTree
    void writeTree(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.JsonNode,org.codehaus.jackson.map.SerializationConfig) -> writeTree
    org.codehaus.jackson.node.ObjectNode createObjectNode() -> createObjectNode
    org.codehaus.jackson.node.ArrayNode createArrayNode() -> createArrayNode
    org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode) -> treeAsTokens
    java.lang.Object treeToValue(org.codehaus.jackson.JsonNode,java.lang.Class) -> treeToValue
    org.codehaus.jackson.JsonNode valueToTree(java.lang.Object) -> valueToTree
    boolean canSerialize(java.lang.Class) -> canSerialize
    boolean canDeserialize(org.codehaus.jackson.type.JavaType) -> canDeserialize
    java.lang.Object readValue(java.io.File,java.lang.Class) -> readValue
    java.lang.Object readValue(java.io.File,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(java.io.File,org.codehaus.jackson.type.JavaType) -> readValue
    java.lang.Object readValue(java.net.URL,java.lang.Class) -> readValue
    java.lang.Object readValue(java.net.URL,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(java.net.URL,org.codehaus.jackson.type.JavaType) -> readValue
    java.lang.Object readValue(java.lang.String,java.lang.Class) -> readValue
    java.lang.Object readValue(java.lang.String,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(java.lang.String,org.codehaus.jackson.type.JavaType) -> readValue
    java.lang.Object readValue(java.io.Reader,java.lang.Class) -> readValue
    java.lang.Object readValue(java.io.Reader,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(java.io.Reader,org.codehaus.jackson.type.JavaType) -> readValue
    java.lang.Object readValue(java.io.InputStream,java.lang.Class) -> readValue
    java.lang.Object readValue(java.io.InputStream,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(java.io.InputStream,org.codehaus.jackson.type.JavaType) -> readValue
    java.lang.Object readValue(byte[],java.lang.Class) -> readValue
    java.lang.Object readValue(byte[],int,int,java.lang.Class) -> readValue
    java.lang.Object readValue(byte[],org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(byte[],int,int,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(byte[],org.codehaus.jackson.type.JavaType) -> readValue
    java.lang.Object readValue(byte[],int,int,org.codehaus.jackson.type.JavaType) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonNode,java.lang.Class) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonNode,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonNode,org.codehaus.jackson.type.JavaType) -> readValue
    void writeValue(java.io.File,java.lang.Object) -> writeValue
    void writeValue(java.io.OutputStream,java.lang.Object) -> writeValue
    void writeValue(java.io.Writer,java.lang.Object) -> writeValue
    java.lang.String writeValueAsString(java.lang.Object) -> writeValueAsString
    byte[] writeValueAsBytes(java.lang.Object) -> writeValueAsBytes
    org.codehaus.jackson.map.ObjectWriter writer() -> writer
    org.codehaus.jackson.map.ObjectWriter writer(java.text.DateFormat) -> writer
    org.codehaus.jackson.map.ObjectWriter writerWithView(java.lang.Class) -> writerWithView
    org.codehaus.jackson.map.ObjectWriter writerWithType(java.lang.Class) -> writerWithType
    org.codehaus.jackson.map.ObjectWriter writerWithType(org.codehaus.jackson.type.JavaType) -> writerWithType
    org.codehaus.jackson.map.ObjectWriter writerWithType(org.codehaus.jackson.type.TypeReference) -> writerWithType
    org.codehaus.jackson.map.ObjectWriter writer(org.codehaus.jackson.PrettyPrinter) -> writer
    org.codehaus.jackson.map.ObjectWriter writerWithDefaultPrettyPrinter() -> writerWithDefaultPrettyPrinter
    org.codehaus.jackson.map.ObjectWriter writer(org.codehaus.jackson.map.ser.FilterProvider) -> writer
    org.codehaus.jackson.map.ObjectWriter writer(org.codehaus.jackson.FormatSchema) -> writer
    org.codehaus.jackson.map.ObjectWriter typedWriter(java.lang.Class) -> typedWriter
    org.codehaus.jackson.map.ObjectWriter typedWriter(org.codehaus.jackson.type.JavaType) -> typedWriter
    org.codehaus.jackson.map.ObjectWriter typedWriter(org.codehaus.jackson.type.TypeReference) -> typedWriter
    org.codehaus.jackson.map.ObjectWriter viewWriter(java.lang.Class) -> viewWriter
    org.codehaus.jackson.map.ObjectWriter prettyPrintingWriter(org.codehaus.jackson.PrettyPrinter) -> prettyPrintingWriter
    org.codehaus.jackson.map.ObjectWriter defaultPrettyPrintingWriter() -> defaultPrettyPrintingWriter
    org.codehaus.jackson.map.ObjectWriter filteredWriter(org.codehaus.jackson.map.ser.FilterProvider) -> filteredWriter
    org.codehaus.jackson.map.ObjectWriter schemaBasedWriter(org.codehaus.jackson.FormatSchema) -> schemaBasedWriter
    org.codehaus.jackson.map.ObjectReader reader() -> reader
    org.codehaus.jackson.map.ObjectReader readerForUpdating(java.lang.Object) -> readerForUpdating
    org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.type.JavaType) -> reader
    org.codehaus.jackson.map.ObjectReader reader(java.lang.Class) -> reader
    org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.type.TypeReference) -> reader
    org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.node.JsonNodeFactory) -> reader
    org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.FormatSchema) -> reader
    org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.map.InjectableValues) -> reader
    org.codehaus.jackson.map.ObjectReader updatingReader(java.lang.Object) -> updatingReader
    org.codehaus.jackson.map.ObjectReader schemaBasedReader(org.codehaus.jackson.FormatSchema) -> schemaBasedReader
    java.lang.Object convertValue(java.lang.Object,java.lang.Class) -> convertValue
    java.lang.Object convertValue(java.lang.Object,org.codehaus.jackson.type.TypeReference) -> convertValue
    java.lang.Object convertValue(java.lang.Object,org.codehaus.jackson.type.JavaType) -> convertValue
    java.lang.Object _convert(java.lang.Object,org.codehaus.jackson.type.JavaType) -> _convert
    org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class) -> generateJsonSchema
    org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class,org.codehaus.jackson.map.SerializationConfig) -> generateJsonSchema
    org.codehaus.jackson.PrettyPrinter _defaultPrettyPrinter() -> _defaultPrettyPrinter
    void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> _configAndWriteValue
    void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,java.lang.Class) -> _configAndWriteValue
    void _configAndWriteCloseable(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig) -> _configAndWriteCloseable
    void _writeCloseableValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig) -> _writeCloseableValue
    java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> _readValue
    java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> _readMapAndClose
    org.codehaus.jackson.JsonToken _initForReading(org.codehaus.jackson.JsonParser) -> _initForReading
    java.lang.Object _unwrapAndDeserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.JsonDeserializer) -> _unwrapAndDeserialize
    org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> _findRootDeserializer
    org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig) -> _createDeserializationContext
    org.codehaus.jackson.JsonNode createArrayNode() -> createArrayNode
    org.codehaus.jackson.JsonNode createObjectNode() -> createObjectNode
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> readValues
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference) -> readValues
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,java.lang.Class) -> readValues
org.codehaus.jackson.map.ObjectMapper$1 -> org.codehaus.jackson.map.ObjectMapper$1:
    org.codehaus.jackson.map.ObjectMapper val$mapper -> val$mapper
    org.codehaus.jackson.map.ObjectMapper this$0 -> this$0
    org.codehaus.jackson.Version getMapperVersion() -> getMapperVersion
    org.codehaus.jackson.map.DeserializationConfig getDeserializationConfig() -> getDeserializationConfig
    org.codehaus.jackson.map.SerializationConfig getSerializationConfig() -> getSerializationConfig
    boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.JsonParser$Feature) -> isEnabled
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    void addDeserializers(org.codehaus.jackson.map.Deserializers) -> addDeserializers
    void addKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers) -> addKeyDeserializers
    void addSerializers(org.codehaus.jackson.map.Serializers) -> addSerializers
    void addKeySerializers(org.codehaus.jackson.map.Serializers) -> addKeySerializers
    void addBeanSerializerModifier(org.codehaus.jackson.map.ser.BeanSerializerModifier) -> addBeanSerializerModifier
    void addBeanDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier) -> addBeanDeserializerModifier
    void addAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver) -> addAbstractTypeResolver
    void addTypeModifier(org.codehaus.jackson.map.type.TypeModifier) -> addTypeModifier
    void addValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators) -> addValueInstantiators
    void insertAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> insertAnnotationIntrospector
    void appendAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> appendAnnotationIntrospector
    void setMixInAnnotations(java.lang.Class,java.lang.Class) -> setMixInAnnotations
org.codehaus.jackson.map.ObjectMapper$2 -> org.codehaus.jackson.map.ObjectMapper$2:
    int[] $SwitchMap$org$codehaus$jackson$map$ObjectMapper$DefaultTyping -> $SwitchMap$org$codehaus$jackson$map$ObjectMapper$DefaultTyping
org.codehaus.jackson.map.ObjectMapper$DefaultTypeResolverBuilder -> org.codehaus.jackson.map.ObjectMapper$DefaultTypeResolverBuilder:
    org.codehaus.jackson.map.ObjectMapper$DefaultTyping _appliesFor -> _appliesFor
    org.codehaus.jackson.map.TypeDeserializer buildTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty) -> buildTypeDeserializer
    org.codehaus.jackson.map.TypeSerializer buildTypeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty) -> buildTypeSerializer
    boolean useForType(org.codehaus.jackson.type.JavaType) -> useForType
org.codehaus.jackson.map.ObjectMapper$DefaultTyping -> org.codehaus.jackson.map.ObjectMapper$DefaultTyping:
    org.codehaus.jackson.map.ObjectMapper$DefaultTyping JAVA_LANG_OBJECT -> JAVA_LANG_OBJECT
    org.codehaus.jackson.map.ObjectMapper$DefaultTyping OBJECT_AND_NON_CONCRETE -> OBJECT_AND_NON_CONCRETE
    org.codehaus.jackson.map.ObjectMapper$DefaultTyping NON_CONCRETE_AND_ARRAYS -> NON_CONCRETE_AND_ARRAYS
    org.codehaus.jackson.map.ObjectMapper$DefaultTyping NON_FINAL -> NON_FINAL
    org.codehaus.jackson.map.ObjectMapper$DefaultTyping[] $VALUES -> $VALUES
    org.codehaus.jackson.map.ObjectMapper$DefaultTyping[] values() -> values
    org.codehaus.jackson.map.ObjectMapper$DefaultTyping valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.map.ObjectReader -> org.codehaus.jackson.map.ObjectReader:
    org.codehaus.jackson.type.JavaType JSON_NODE_TYPE -> JSON_NODE_TYPE
    org.codehaus.jackson.map.DeserializationConfig _config -> _config
    boolean _unwrapRoot -> _unwrapRoot
    java.util.concurrent.ConcurrentHashMap _rootDeserializers -> _rootDeserializers
    org.codehaus.jackson.map.DeserializerProvider _provider -> _provider
    org.codehaus.jackson.JsonFactory _jsonFactory -> _jsonFactory
    org.codehaus.jackson.type.JavaType _valueType -> _valueType
    java.lang.Object _valueToUpdate -> _valueToUpdate
    org.codehaus.jackson.FormatSchema _schema -> _schema
    org.codehaus.jackson.map.InjectableValues _injectableValues -> _injectableValues
    org.codehaus.jackson.Version version() -> version
    org.codehaus.jackson.map.ObjectReader withType(org.codehaus.jackson.type.JavaType) -> withType
    org.codehaus.jackson.map.ObjectReader withType(java.lang.Class) -> withType
    org.codehaus.jackson.map.ObjectReader withType(java.lang.reflect.Type) -> withType
    org.codehaus.jackson.map.ObjectReader withType(org.codehaus.jackson.type.TypeReference) -> withType
    org.codehaus.jackson.map.ObjectReader withNodeFactory(org.codehaus.jackson.node.JsonNodeFactory) -> withNodeFactory
    org.codehaus.jackson.map.ObjectReader withValueToUpdate(java.lang.Object) -> withValueToUpdate
    org.codehaus.jackson.map.ObjectReader withSchema(org.codehaus.jackson.FormatSchema) -> withSchema
    org.codehaus.jackson.map.ObjectReader withInjectableValues(org.codehaus.jackson.map.InjectableValues) -> withInjectableValues
    java.lang.Object readValue(org.codehaus.jackson.JsonParser) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,java.lang.Class) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> readValue
    org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser) -> readTree
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,java.lang.Class) -> readValues
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference) -> readValues
    java.util.Iterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> readValues
    java.lang.Object readValue(java.io.InputStream) -> readValue
    java.lang.Object readValue(java.io.Reader) -> readValue
    java.lang.Object readValue(java.lang.String) -> readValue
    java.lang.Object readValue(byte[]) -> readValue
    java.lang.Object readValue(byte[],int,int) -> readValue
    java.lang.Object readValue(java.io.File) -> readValue
    java.lang.Object readValue(java.net.URL) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonNode) -> readValue
    org.codehaus.jackson.JsonNode readTree(java.io.InputStream) -> readTree
    org.codehaus.jackson.JsonNode readTree(java.io.Reader) -> readTree
    org.codehaus.jackson.JsonNode readTree(java.lang.String) -> readTree
    org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(java.io.InputStream) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(java.io.Reader) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(java.lang.String) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(byte[],int,int) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(byte[]) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(java.io.File) -> readValues
    org.codehaus.jackson.map.MappingIterator readValues(java.net.URL) -> readValues
    java.lang.Object _bind(org.codehaus.jackson.JsonParser) -> _bind
    java.lang.Object _bindAndClose(org.codehaus.jackson.JsonParser) -> _bindAndClose
    org.codehaus.jackson.JsonNode _bindAsTree(org.codehaus.jackson.JsonParser) -> _bindAsTree
    org.codehaus.jackson.JsonNode _bindAndCloseAsTree(org.codehaus.jackson.JsonParser) -> _bindAndCloseAsTree
    org.codehaus.jackson.JsonToken _initForReading(org.codehaus.jackson.JsonParser) -> _initForReading
    org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> _findRootDeserializer
    org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig) -> _createDeserializationContext
    java.lang.Object _unwrapAndDeserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonDeserializer) -> _unwrapAndDeserialize
    org.codehaus.jackson.JsonNode createArrayNode() -> createArrayNode
    org.codehaus.jackson.JsonNode createObjectNode() -> createObjectNode
    org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode) -> treeAsTokens
    java.lang.Object treeToValue(org.codehaus.jackson.JsonNode,java.lang.Class) -> treeToValue
    void writeTree(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.JsonNode) -> writeTree
    void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> writeValue
org.codehaus.jackson.map.ObjectWriter -> org.codehaus.jackson.map.ObjectWriter:
    org.codehaus.jackson.PrettyPrinter NULL_PRETTY_PRINTER -> NULL_PRETTY_PRINTER
    org.codehaus.jackson.map.SerializationConfig _config -> _config
    org.codehaus.jackson.map.SerializerProvider _provider -> _provider
    org.codehaus.jackson.map.SerializerFactory _serializerFactory -> _serializerFactory
    org.codehaus.jackson.JsonFactory _jsonFactory -> _jsonFactory
    org.codehaus.jackson.type.JavaType _rootType -> _rootType
    org.codehaus.jackson.PrettyPrinter _prettyPrinter -> _prettyPrinter
    org.codehaus.jackson.FormatSchema _schema -> _schema
    org.codehaus.jackson.Version version() -> version
    org.codehaus.jackson.map.ObjectWriter withView(java.lang.Class) -> withView
    org.codehaus.jackson.map.ObjectWriter withType(org.codehaus.jackson.type.JavaType) -> withType
    org.codehaus.jackson.map.ObjectWriter withType(java.lang.Class) -> withType
    org.codehaus.jackson.map.ObjectWriter withType(org.codehaus.jackson.type.TypeReference) -> withType
    org.codehaus.jackson.map.ObjectWriter withPrettyPrinter(org.codehaus.jackson.PrettyPrinter) -> withPrettyPrinter
    org.codehaus.jackson.map.ObjectWriter withDefaultPrettyPrinter() -> withDefaultPrettyPrinter
    org.codehaus.jackson.map.ObjectWriter withFilters(org.codehaus.jackson.map.ser.FilterProvider) -> withFilters
    org.codehaus.jackson.map.ObjectWriter withSchema(org.codehaus.jackson.FormatSchema) -> withSchema
    org.codehaus.jackson.map.ObjectWriter withDateFormat(java.text.DateFormat) -> withDateFormat
    void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> writeValue
    void writeValue(java.io.File,java.lang.Object) -> writeValue
    void writeValue(java.io.OutputStream,java.lang.Object) -> writeValue
    void writeValue(java.io.Writer,java.lang.Object) -> writeValue
    java.lang.String writeValueAsString(java.lang.Object) -> writeValueAsString
    byte[] writeValueAsBytes(java.lang.Object) -> writeValueAsBytes
    boolean canSerialize(java.lang.Class) -> canSerialize
    void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> _configAndWriteValue
    void _configAndWriteCloseable(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig) -> _configAndWriteCloseable
    void _writeCloseableValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig) -> _writeCloseableValue
org.codehaus.jackson.map.PropertyNamingStrategy -> org.codehaus.jackson.map.PropertyNamingStrategy:
    org.codehaus.jackson.map.PropertyNamingStrategy CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES -> CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES
    java.lang.String nameForField(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedField,java.lang.String) -> nameForField
    java.lang.String nameForGetterMethod(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String) -> nameForGetterMethod
    java.lang.String nameForSetterMethod(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String) -> nameForSetterMethod
    java.lang.String nameForConstructorParameter(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedParameter,java.lang.String) -> nameForConstructorParameter
org.codehaus.jackson.map.PropertyNamingStrategy$LowerCaseWithUnderscoresStrategy -> org.codehaus.jackson.map.PropertyNamingStrategy$LowerCaseWithUnderscoresStrategy:
    java.lang.String translate(java.lang.String) -> translate
org.codehaus.jackson.map.PropertyNamingStrategy$PropertyNamingStrategyBase -> org.codehaus.jackson.map.PropertyNamingStrategy$PropertyNamingStrategyBase:
    java.lang.String nameForField(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedField,java.lang.String) -> nameForField
    java.lang.String nameForGetterMethod(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String) -> nameForGetterMethod
    java.lang.String nameForSetterMethod(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String) -> nameForSetterMethod
    java.lang.String nameForConstructorParameter(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedParameter,java.lang.String) -> nameForConstructorParameter
    java.lang.String translate(java.lang.String) -> translate
org.codehaus.jackson.map.ResolvableDeserializer -> org.codehaus.jackson.map.ResolvableDeserializer:
    void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> resolve
org.codehaus.jackson.map.ResolvableSerializer -> org.codehaus.jackson.map.ResolvableSerializer:
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
org.codehaus.jackson.map.RuntimeJsonMappingException -> org.codehaus.jackson.map.RuntimeJsonMappingException:
org.codehaus.jackson.map.SerializationConfig -> org.codehaus.jackson.map.SerializationConfig:
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _serializationInclusion -> _serializationInclusion
    java.lang.Class _serializationView -> _serializationView
    org.codehaus.jackson.map.ser.FilterProvider _filterProvider -> _filterProvider
    org.codehaus.jackson.map.SerializationConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector) -> withClassIntrospector
    org.codehaus.jackson.map.SerializationConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAnnotationIntrospector
    org.codehaus.jackson.map.SerializationConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    org.codehaus.jackson.map.SerializationConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    org.codehaus.jackson.map.SerializationConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker) -> withVisibilityChecker
    org.codehaus.jackson.map.SerializationConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.SerializationConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder) -> withTypeResolverBuilder
    org.codehaus.jackson.map.SerializationConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> withSubtypeResolver
    org.codehaus.jackson.map.SerializationConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy) -> withPropertyNamingStrategy
    org.codehaus.jackson.map.SerializationConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory) -> withTypeFactory
    org.codehaus.jackson.map.SerializationConfig withDateFormat(java.text.DateFormat) -> withDateFormat
    org.codehaus.jackson.map.SerializationConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator) -> withHandlerInstantiator
    org.codehaus.jackson.map.SerializationConfig withFilters(org.codehaus.jackson.map.ser.FilterProvider) -> withFilters
    org.codehaus.jackson.map.SerializationConfig withView(java.lang.Class) -> withView
    org.codehaus.jackson.map.SerializationConfig withSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion) -> withSerializationInclusion
    org.codehaus.jackson.map.SerializationConfig with(org.codehaus.jackson.map.SerializationConfig$Feature[]) -> with
    org.codehaus.jackson.map.SerializationConfig without(org.codehaus.jackson.map.SerializationConfig$Feature[]) -> without
    void fromAnnotations(java.lang.Class) -> fromAnnotations
    org.codehaus.jackson.map.SerializationConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> createUnshared
    org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(org.codehaus.jackson.type.JavaType) -> introspectClassAnnotations
    org.codehaus.jackson.map.BeanDescription introspectDirectClassAnnotations(org.codehaus.jackson.type.JavaType) -> introspectDirectClassAnnotations
    boolean isAnnotationProcessingEnabled() -> isAnnotationProcessingEnabled
    boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    boolean shouldSortPropertiesAlphabetically() -> shouldSortPropertiesAlphabetically
    org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker() -> getDefaultVisibilityChecker
    boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature) -> isEnabled
    void enable(org.codehaus.jackson.map.SerializationConfig$Feature) -> enable
    void disable(org.codehaus.jackson.map.SerializationConfig$Feature) -> disable
    void set(org.codehaus.jackson.map.SerializationConfig$Feature,boolean) -> set
    java.lang.Class getSerializationView() -> getSerializationView
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion getSerializationInclusion() -> getSerializationInclusion
    void setSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion) -> setSerializationInclusion
    org.codehaus.jackson.map.ser.FilterProvider getFilterProvider() -> getFilterProvider
    org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType) -> introspect
    org.codehaus.jackson.map.JsonSerializer serializerInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class) -> serializerInstance
    void setDateFormat(java.text.DateFormat) -> setDateFormat
    void setSerializationView(java.lang.Class) -> setSerializationView
    java.lang.String toString() -> toString
    void set(org.codehaus.jackson.map.MapperConfig$ConfigFeature,boolean) -> set
    void disable(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> disable
    void enable(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> enable
    boolean isEnabled(org.codehaus.jackson.map.MapperConfig$ConfigFeature) -> isEnabled
    org.codehaus.jackson.map.MapperConfig$Impl without(org.codehaus.jackson.map.MapperConfig$ConfigFeature[]) -> without
    org.codehaus.jackson.map.MapperConfig$Impl with(org.codehaus.jackson.map.MapperConfig$ConfigFeature[]) -> with
    org.codehaus.jackson.map.MapperConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator) -> withHandlerInstantiator
    org.codehaus.jackson.map.MapperConfig withDateFormat(java.text.DateFormat) -> withDateFormat
    org.codehaus.jackson.map.MapperConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory) -> withTypeFactory
    org.codehaus.jackson.map.MapperConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy) -> withPropertyNamingStrategy
    org.codehaus.jackson.map.MapperConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> withSubtypeResolver
    org.codehaus.jackson.map.MapperConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder) -> withTypeResolverBuilder
    org.codehaus.jackson.map.MapperConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.MapperConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker) -> withVisibilityChecker
    org.codehaus.jackson.map.MapperConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector) -> withAnnotationIntrospector
    org.codehaus.jackson.map.MapperConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector) -> withClassIntrospector
    org.codehaus.jackson.map.MapperConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver) -> createUnshared
org.codehaus.jackson.map.SerializationConfig$Feature -> org.codehaus.jackson.map.SerializationConfig$Feature:
    org.codehaus.jackson.map.SerializationConfig$Feature USE_ANNOTATIONS -> USE_ANNOTATIONS
    org.codehaus.jackson.map.SerializationConfig$Feature AUTO_DETECT_GETTERS -> AUTO_DETECT_GETTERS
    org.codehaus.jackson.map.SerializationConfig$Feature AUTO_DETECT_IS_GETTERS -> AUTO_DETECT_IS_GETTERS
    org.codehaus.jackson.map.SerializationConfig$Feature AUTO_DETECT_FIELDS -> AUTO_DETECT_FIELDS
    org.codehaus.jackson.map.SerializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS -> CAN_OVERRIDE_ACCESS_MODIFIERS
    org.codehaus.jackson.map.SerializationConfig$Feature REQUIRE_SETTERS_FOR_GETTERS -> REQUIRE_SETTERS_FOR_GETTERS
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_NULL_PROPERTIES -> WRITE_NULL_PROPERTIES
    org.codehaus.jackson.map.SerializationConfig$Feature USE_STATIC_TYPING -> USE_STATIC_TYPING
    org.codehaus.jackson.map.SerializationConfig$Feature DEFAULT_VIEW_INCLUSION -> DEFAULT_VIEW_INCLUSION
    org.codehaus.jackson.map.SerializationConfig$Feature WRAP_ROOT_VALUE -> WRAP_ROOT_VALUE
    org.codehaus.jackson.map.SerializationConfig$Feature INDENT_OUTPUT -> INDENT_OUTPUT
    org.codehaus.jackson.map.SerializationConfig$Feature SORT_PROPERTIES_ALPHABETICALLY -> SORT_PROPERTIES_ALPHABETICALLY
    org.codehaus.jackson.map.SerializationConfig$Feature FAIL_ON_EMPTY_BEANS -> FAIL_ON_EMPTY_BEANS
    org.codehaus.jackson.map.SerializationConfig$Feature WRAP_EXCEPTIONS -> WRAP_EXCEPTIONS
    org.codehaus.jackson.map.SerializationConfig$Feature CLOSE_CLOSEABLE -> CLOSE_CLOSEABLE
    org.codehaus.jackson.map.SerializationConfig$Feature FLUSH_AFTER_WRITE_VALUE -> FLUSH_AFTER_WRITE_VALUE
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_DATES_AS_TIMESTAMPS -> WRITE_DATES_AS_TIMESTAMPS
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_DATE_KEYS_AS_TIMESTAMPS -> WRITE_DATE_KEYS_AS_TIMESTAMPS
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS -> WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_ENUMS_USING_TO_STRING -> WRITE_ENUMS_USING_TO_STRING
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_ENUMS_USING_INDEX -> WRITE_ENUMS_USING_INDEX
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_NULL_MAP_VALUES -> WRITE_NULL_MAP_VALUES
    org.codehaus.jackson.map.SerializationConfig$Feature WRITE_EMPTY_JSON_ARRAYS -> WRITE_EMPTY_JSON_ARRAYS
    boolean _defaultState -> _defaultState
    org.codehaus.jackson.map.SerializationConfig$Feature[] $VALUES -> $VALUES
    org.codehaus.jackson.map.SerializationConfig$Feature[] values() -> values
    org.codehaus.jackson.map.SerializationConfig$Feature valueOf(java.lang.String) -> valueOf
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
org.codehaus.jackson.map.SerializerFactory -> org.codehaus.jackson.map.SerializerFactory:
    org.codehaus.jackson.map.SerializerFactory$Config getConfig() -> getConfig
    org.codehaus.jackson.map.SerializerFactory withConfig(org.codehaus.jackson.map.SerializerFactory$Config) -> withConfig
    org.codehaus.jackson.map.SerializerFactory withAdditionalSerializers(org.codehaus.jackson.map.Serializers) -> withAdditionalSerializers
    org.codehaus.jackson.map.SerializerFactory withAdditionalKeySerializers(org.codehaus.jackson.map.Serializers) -> withAdditionalKeySerializers
    org.codehaus.jackson.map.SerializerFactory withSerializerModifier(org.codehaus.jackson.map.ser.BeanSerializerModifier) -> withSerializerModifier
    org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createSerializer
    org.codehaus.jackson.map.TypeSerializer createTypeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createTypeSerializer
    org.codehaus.jackson.map.JsonSerializer createKeySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createKeySerializer
    org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig) -> createSerializer
    org.codehaus.jackson.map.TypeSerializer createTypeSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig) -> createTypeSerializer
org.codehaus.jackson.map.SerializerFactory$Config -> org.codehaus.jackson.map.SerializerFactory$Config:
    org.codehaus.jackson.map.SerializerFactory$Config withAdditionalSerializers(org.codehaus.jackson.map.Serializers) -> withAdditionalSerializers
    org.codehaus.jackson.map.SerializerFactory$Config withAdditionalKeySerializers(org.codehaus.jackson.map.Serializers) -> withAdditionalKeySerializers
    org.codehaus.jackson.map.SerializerFactory$Config withSerializerModifier(org.codehaus.jackson.map.ser.BeanSerializerModifier) -> withSerializerModifier
    boolean hasSerializers() -> hasSerializers
    boolean hasKeySerializers() -> hasKeySerializers
    boolean hasSerializerModifiers() -> hasSerializerModifiers
    java.lang.Iterable serializers() -> serializers
    java.lang.Iterable keySerializers() -> keySerializers
    java.lang.Iterable serializerModifiers() -> serializerModifiers
org.codehaus.jackson.map.SerializerProvider -> org.codehaus.jackson.map.SerializerProvider:
    org.codehaus.jackson.type.JavaType TYPE_OBJECT -> TYPE_OBJECT
    org.codehaus.jackson.map.SerializationConfig _config -> _config
    java.lang.Class _serializationView -> _serializationView
    void setNullKeySerializer(org.codehaus.jackson.map.JsonSerializer) -> setNullKeySerializer
    void setNullValueSerializer(org.codehaus.jackson.map.JsonSerializer) -> setNullValueSerializer
    void setDefaultKeySerializer(org.codehaus.jackson.map.JsonSerializer) -> setDefaultKeySerializer
    void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory) -> serializeValue
    void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerFactory) -> serializeValue
    org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.SerializerFactory) -> generateJsonSchema
    boolean hasSerializerFor(org.codehaus.jackson.map.SerializationConfig,java.lang.Class,org.codehaus.jackson.map.SerializerFactory) -> hasSerializerFor
    org.codehaus.jackson.map.SerializationConfig getConfig() -> getConfig
    boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature) -> isEnabled
    java.lang.Class getSerializationView() -> getSerializationView
    org.codehaus.jackson.map.ser.FilterProvider getFilterProvider() -> getFilterProvider
    org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type) -> constructType
    org.codehaus.jackson.type.JavaType constructSpecializedType(org.codehaus.jackson.type.JavaType,java.lang.Class) -> constructSpecializedType
    org.codehaus.jackson.map.JsonSerializer findValueSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty) -> findValueSerializer
    org.codehaus.jackson.map.JsonSerializer findValueSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findValueSerializer
    org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,org.codehaus.jackson.map.BeanProperty) -> findTypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.BeanProperty) -> findTypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer findKeySerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findKeySerializer
    org.codehaus.jackson.map.JsonSerializer findValueSerializer(java.lang.Class) -> findValueSerializer
    org.codehaus.jackson.map.JsonSerializer findValueSerializer(org.codehaus.jackson.type.JavaType) -> findValueSerializer
    org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean) -> findTypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(org.codehaus.jackson.type.JavaType,boolean) -> findTypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer getKeySerializer() -> getKeySerializer
    org.codehaus.jackson.map.JsonSerializer getKeySerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> getKeySerializer
    org.codehaus.jackson.map.JsonSerializer getNullKeySerializer() -> getNullKeySerializer
    org.codehaus.jackson.map.JsonSerializer getNullValueSerializer() -> getNullValueSerializer
    org.codehaus.jackson.map.JsonSerializer getUnknownTypeSerializer(java.lang.Class) -> getUnknownTypeSerializer
    void defaultSerializeValue(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> defaultSerializeValue
    void defaultSerializeField(java.lang.String,java.lang.Object,org.codehaus.jackson.JsonGenerator) -> defaultSerializeField
    void defaultSerializeDateValue(long,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateValue
    void defaultSerializeDateValue(java.util.Date,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateValue
    void defaultSerializeDateKey(long,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateKey
    void defaultSerializeDateKey(java.util.Date,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateKey
    void defaultSerializeNull(org.codehaus.jackson.JsonGenerator) -> defaultSerializeNull
    int cachedSerializersCount() -> cachedSerializersCount
    void flushCachedSerializers() -> flushCachedSerializers
org.codehaus.jackson.map.Serializers -> org.codehaus.jackson.map.Serializers:
    org.codehaus.jackson.map.JsonSerializer findSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findSerializer
    org.codehaus.jackson.map.JsonSerializer findArraySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findArraySerializer
    org.codehaus.jackson.map.JsonSerializer findCollectionSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findCollectionSerializer
    org.codehaus.jackson.map.JsonSerializer findCollectionLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findCollectionLikeSerializer
    org.codehaus.jackson.map.JsonSerializer findMapSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findMapSerializer
    org.codehaus.jackson.map.JsonSerializer findMapLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findMapLikeSerializer
org.codehaus.jackson.map.Serializers$Base -> org.codehaus.jackson.map.Serializers$Base:
    org.codehaus.jackson.map.JsonSerializer findSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findSerializer
    org.codehaus.jackson.map.JsonSerializer findArraySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findArraySerializer
    org.codehaus.jackson.map.JsonSerializer findCollectionSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findCollectionSerializer
    org.codehaus.jackson.map.JsonSerializer findCollectionLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findCollectionLikeSerializer
    org.codehaus.jackson.map.JsonSerializer findMapSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findMapSerializer
    org.codehaus.jackson.map.JsonSerializer findMapLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findMapLikeSerializer
org.codehaus.jackson.map.Serializers$None -> org.codehaus.jackson.map.Serializers$None:
org.codehaus.jackson.map.TypeDeserializer -> org.codehaus.jackson.map.TypeDeserializer:
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    org.codehaus.jackson.map.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object deserializeTypedFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromArray
    java.lang.Object deserializeTypedFromScalar(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromScalar
    java.lang.Object deserializeTypedFromAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromAny
org.codehaus.jackson.map.TypeSerializer -> org.codehaus.jackson.map.TypeSerializer:
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    org.codehaus.jackson.map.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForScalar
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForArray
    void writeTypeSuffixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForScalar
    void writeTypeSuffixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForObject
    void writeTypeSuffixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForArray
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForScalar
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForArray
org.codehaus.jackson.map.annotate.JacksonInject -> org.codehaus.jackson.map.annotate.JacksonInject:
    java.lang.String value() -> value
org.codehaus.jackson.map.annotate.JacksonStdImpl -> org.codehaus.jackson.map.annotate.JacksonStdImpl:
org.codehaus.jackson.map.annotate.JsonCachable -> org.codehaus.jackson.map.annotate.JsonCachable:
    boolean value() -> value
org.codehaus.jackson.map.annotate.JsonDeserialize -> org.codehaus.jackson.map.annotate.JsonDeserialize:
    java.lang.Class using() -> using
    java.lang.Class contentUsing() -> contentUsing
    java.lang.Class keyUsing() -> keyUsing
    java.lang.Class as() -> as
    java.lang.Class keyAs() -> keyAs
    java.lang.Class contentAs() -> contentAs
org.codehaus.jackson.map.annotate.JsonFilter -> org.codehaus.jackson.map.annotate.JsonFilter:
    java.lang.String value() -> value
org.codehaus.jackson.map.annotate.JsonRootName -> org.codehaus.jackson.map.annotate.JsonRootName:
    java.lang.String value() -> value
org.codehaus.jackson.map.annotate.JsonSerialize -> org.codehaus.jackson.map.annotate.JsonSerialize:
    java.lang.Class using() -> using
    java.lang.Class contentUsing() -> contentUsing
    java.lang.Class keyUsing() -> keyUsing
    java.lang.Class as() -> as
    java.lang.Class keyAs() -> keyAs
    java.lang.Class contentAs() -> contentAs
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing typing() -> typing
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion include() -> include
org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion -> org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion:
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion ALWAYS -> ALWAYS
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion NON_NULL -> NON_NULL
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion NON_DEFAULT -> NON_DEFAULT
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion NON_EMPTY -> NON_EMPTY
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion[] $VALUES -> $VALUES
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion[] values() -> values
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.map.annotate.JsonSerialize$Typing -> org.codehaus.jackson.map.annotate.JsonSerialize$Typing:
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing DYNAMIC -> DYNAMIC
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing STATIC -> STATIC
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing[] $VALUES -> $VALUES
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing[] values() -> values
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.map.annotate.JsonTypeIdResolver -> org.codehaus.jackson.map.annotate.JsonTypeIdResolver:
    java.lang.Class value() -> value
org.codehaus.jackson.map.annotate.JsonTypeResolver -> org.codehaus.jackson.map.annotate.JsonTypeResolver:
    java.lang.Class value() -> value
org.codehaus.jackson.map.annotate.JsonValueInstantiator -> org.codehaus.jackson.map.annotate.JsonValueInstantiator:
    java.lang.Class value() -> value
org.codehaus.jackson.map.annotate.JsonView -> org.codehaus.jackson.map.annotate.JsonView:
    java.lang.Class[] value() -> value
org.codehaus.jackson.map.annotate.NoClass -> org.codehaus.jackson.map.annotate.NoClass:
org.codehaus.jackson.map.deser.AbstractDeserializer -> org.codehaus.jackson.map.deser.AbstractDeserializer:
    org.codehaus.jackson.type.JavaType _baseType -> _baseType
    boolean _acceptString -> _acceptString
    boolean _acceptBoolean -> _acceptBoolean
    boolean _acceptInt -> _acceptInt
    boolean _acceptDouble -> _acceptDouble
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object _deserializeIfNatural(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _deserializeIfNatural
org.codehaus.jackson.map.deser.AbstractDeserializer$1 -> org.codehaus.jackson.map.deser.AbstractDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.map.deser.ArrayDeserializer -> org.codehaus.jackson.map.deser.ArrayDeserializer:
org.codehaus.jackson.map.deser.ArrayDeserializers -> org.codehaus.jackson.map.deser.ArrayDeserializers:
org.codehaus.jackson.map.deser.BasicDeserializerFactory -> org.codehaus.jackson.map.deser.BasicDeserializerFactory:
    java.util.HashMap _simpleDeserializers -> _simpleDeserializers
    java.util.HashMap _keyDeserializers -> _keyDeserializers
    java.util.HashMap _mapFallbacks -> _mapFallbacks
    java.util.HashMap _collectionFallbacks -> _collectionFallbacks
    java.util.HashMap _arrayDeserializers -> _arrayDeserializers
    org.codehaus.jackson.map.ext.OptionalHandlerFactory optionalHandlers -> optionalHandlers
    org.codehaus.jackson.map.DeserializerFactory withConfig(org.codehaus.jackson.map.DeserializerFactory$Config) -> withConfig
    org.codehaus.jackson.map.JsonDeserializer _findCustomArrayDeserializer(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomCollectionLikeDeserializer(org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomEnumDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> _findCustomEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomMapDeserializer(org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomMapLikeDeserializer(org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomTreeNodeDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> _findCustomTreeNodeDeserializer
    org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> findValueInstantiator
    org.codehaus.jackson.type.JavaType mapAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> mapAbstractType
    org.codehaus.jackson.map.JsonDeserializer createArrayDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.BeanProperty) -> createArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer createCollectionDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.BeanProperty) -> createCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer createCollectionLikeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.BeanProperty) -> createCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer createMapDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.BeanProperty) -> createMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer createMapLikeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.BeanProperty) -> createMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer createEnumDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer createTreeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createTreeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findStdBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findStdBeanDeserializer
    org.codehaus.jackson.map.TypeDeserializer findTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findTypeDeserializer
    org.codehaus.jackson.map.TypeDeserializer findPropertyTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty) -> findPropertyTypeDeserializer
    org.codehaus.jackson.map.TypeDeserializer findPropertyContentTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty) -> findPropertyContentTypeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findDeserializerFromAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty) -> findDeserializerFromAnnotation
    org.codehaus.jackson.map.JsonDeserializer _constructDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty,java.lang.Object) -> _constructDeserializer
    org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> modifyTypeByAnnotation
    org.codehaus.jackson.type.JavaType resolveType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty) -> resolveType
    org.codehaus.jackson.map.util.EnumResolver constructEnumResolver(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig) -> constructEnumResolver
org.codehaus.jackson.map.deser.BeanDeserializer -> org.codehaus.jackson.map.deser.BeanDeserializer:
    org.codehaus.jackson.map.introspect.AnnotatedClass _forClass -> _forClass
    org.codehaus.jackson.type.JavaType _beanType -> _beanType
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator -> _propertyBasedCreator
    boolean _nonStandardCreation -> _nonStandardCreation
    org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties -> _beanProperties
    org.codehaus.jackson.map.deser.impl.ValueInjector[] _injectables -> _injectables
    org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter -> _anySetter
    java.util.HashSet _ignorableProps -> _ignorableProps
    boolean _ignoreAllUnknown -> _ignoreAllUnknown
    java.util.Map _backRefs -> _backRefs
    java.util.HashMap _subDeserializers -> _subDeserializers
    org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler -> _unwrappedPropertyHandler
    org.codehaus.jackson.map.deser.impl.ExternalTypeHandler _externalTypeIdHandler -> _externalTypeIdHandler
    org.codehaus.jackson.map.JsonDeserializer unwrappingDeserializer() -> unwrappingDeserializer
    boolean hasProperty(java.lang.String) -> hasProperty
    int getPropertyCount() -> getPropertyCount
    java.lang.Class getBeanClass() -> getBeanClass
    org.codehaus.jackson.type.JavaType getValueType() -> getValueType
    java.util.Iterator properties() -> properties
    org.codehaus.jackson.map.deser.SettableBeanProperty findBackReference(java.lang.String) -> findBackReference
    org.codehaus.jackson.map.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> resolve
    org.codehaus.jackson.map.deser.SettableBeanProperty _resolveManagedReferenceProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.deser.SettableBeanProperty) -> _resolveManagedReferenceProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty _resolveUnwrappedProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.deser.SettableBeanProperty) -> _resolveUnwrappedProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty _resolveInnerClassValuedProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.deser.SettableBeanProperty) -> _resolveInnerClassValuedProperty
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromObject
    void _handleUnknown(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String) -> _handleUnknown
    java.lang.Object deserializeFromObjectUsingNonDefault(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromObjectUsingNonDefault
    java.lang.Object deserializeFromString(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromString
    java.lang.Object deserializeFromNumber(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromNumber
    java.lang.Object deserializeFromDouble(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromDouble
    java.lang.Object deserializeFromBoolean(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromBoolean
    java.lang.Object deserializeFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromArray
    java.lang.Object _deserializeUsingPropertyBased(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _deserializeUsingPropertyBased
    java.lang.Object handlePolymorphic(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer) -> handlePolymorphic
    java.lang.Object deserializeWithUnwrapped(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeWithUnwrapped
    java.lang.Object deserializeWithUnwrapped(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeWithUnwrapped
    java.lang.Object deserializeUsingPropertyBasedWithUnwrapped(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeUsingPropertyBasedWithUnwrapped
    java.lang.Object deserializeWithExternalTypeId(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeWithExternalTypeId
    java.lang.Object deserializeWithExternalTypeId(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeWithExternalTypeId
    java.lang.Object deserializeUsingPropertyBasedWithExternalTypeId(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeUsingPropertyBasedWithExternalTypeId
    void injectValues(org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> injectValues
    void handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String) -> handleUnknownProperty
    java.lang.Object handleUnknownProperties(org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer) -> handleUnknownProperties
    org.codehaus.jackson.map.JsonDeserializer _findSubclassDeserializer(org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer) -> _findSubclassDeserializer
    void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> wrapAndThrow
    void wrapAndThrow(java.lang.Throwable,java.lang.Object,int,org.codehaus.jackson.map.DeserializationContext) -> wrapAndThrow
    void wrapInstantiationProblem(java.lang.Throwable,org.codehaus.jackson.map.DeserializationContext) -> wrapInstantiationProblem
    void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapAndThrow
    void wrapAndThrow(java.lang.Throwable,java.lang.Object,int) -> wrapAndThrow
org.codehaus.jackson.map.deser.BeanDeserializer$1 -> org.codehaus.jackson.map.deser.BeanDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
    int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType -> $SwitchMap$org$codehaus$jackson$JsonParser$NumberType
org.codehaus.jackson.map.deser.BeanDeserializerBuilder -> org.codehaus.jackson.map.deser.BeanDeserializerBuilder:
    org.codehaus.jackson.map.introspect.BasicBeanDescription _beanDesc -> _beanDesc
    java.util.HashMap _properties -> _properties
    java.util.List _injectables -> _injectables
    java.util.HashMap _backRefProperties -> _backRefProperties
    java.util.HashSet _ignorableProps -> _ignorableProps
    org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter -> _anySetter
    boolean _ignoreAllUnknown -> _ignoreAllUnknown
    java.util.HashMap _copy(java.util.HashMap) -> _copy
    void addOrReplaceProperty(org.codehaus.jackson.map.deser.SettableBeanProperty,boolean) -> addOrReplaceProperty
    void addProperty(org.codehaus.jackson.map.deser.SettableBeanProperty) -> addProperty
    void addBackReferenceProperty(java.lang.String,org.codehaus.jackson.map.deser.SettableBeanProperty) -> addBackReferenceProperty
    void addInjectable(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMember,java.lang.Object) -> addInjectable
    void addIgnorable(java.lang.String) -> addIgnorable
    void addCreatorProperty(org.codehaus.jackson.map.BeanPropertyDefinition) -> addCreatorProperty
    void setAnySetter(org.codehaus.jackson.map.deser.SettableAnyProperty) -> setAnySetter
    void setIgnoreUnknownProperties(boolean) -> setIgnoreUnknownProperties
    void setValueInstantiator(org.codehaus.jackson.map.deser.ValueInstantiator) -> setValueInstantiator
    java.util.Iterator getProperties() -> getProperties
    boolean hasProperty(java.lang.String) -> hasProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty removeProperty(java.lang.String) -> removeProperty
    org.codehaus.jackson.map.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    org.codehaus.jackson.map.JsonDeserializer build(org.codehaus.jackson.map.BeanProperty) -> build
org.codehaus.jackson.map.deser.BeanDeserializerFactory -> org.codehaus.jackson.map.deser.BeanDeserializerFactory:
    java.lang.Class[] INIT_CAUSE_PARAMS -> INIT_CAUSE_PARAMS
    org.codehaus.jackson.map.deser.BeanDeserializerFactory instance -> instance
    org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig -> _factoryConfig
    org.codehaus.jackson.map.DeserializerFactory$Config getConfig() -> getConfig
    org.codehaus.jackson.map.DeserializerFactory withConfig(org.codehaus.jackson.map.DeserializerFactory$Config) -> withConfig
    org.codehaus.jackson.map.KeyDeserializer createKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createKeyDeserializer
    org.codehaus.jackson.map.KeyDeserializer _createEnumKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> _createEnumKeyDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomArrayDeserializer(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomCollectionLikeDeserializer(org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomEnumDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> _findCustomEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomMapDeserializer(org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomMapLikeDeserializer(org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> _findCustomMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomTreeNodeDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> _findCustomTreeNodeDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findCustomBeanDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> _findCustomBeanDeserializer
    org.codehaus.jackson.type.JavaType mapAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> mapAbstractType
    org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> findValueInstantiator
    org.codehaus.jackson.map.JsonDeserializer createBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createBeanDeserializer
    org.codehaus.jackson.type.JavaType _mapAbstractType2(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> _mapAbstractType2
    org.codehaus.jackson.type.JavaType materializeAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> materializeAbstractType
    org.codehaus.jackson.map.JsonDeserializer buildBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> buildBeanDeserializer
    org.codehaus.jackson.map.JsonDeserializer buildThrowableDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> buildThrowableDeserializer
    org.codehaus.jackson.map.deser.BeanDeserializerBuilder constructBeanDeserializerBuilder(org.codehaus.jackson.map.introspect.BasicBeanDescription) -> constructBeanDeserializerBuilder
    org.codehaus.jackson.map.deser.ValueInstantiator constructDefaultValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> constructDefaultValueInstantiator
    void _addDeserializerConstructors(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.deser.impl.CreatorCollector) -> _addDeserializerConstructors
    boolean _handleSingleArgumentConstructor(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.deser.impl.CreatorCollector,org.codehaus.jackson.map.introspect.AnnotatedConstructor,boolean,boolean) -> _handleSingleArgumentConstructor
    void _addDeserializerFactoryMethods(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.deser.impl.CreatorCollector) -> _addDeserializerFactoryMethods
    boolean _handleSingleArgumentFactory(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.deser.impl.CreatorCollector,org.codehaus.jackson.map.introspect.AnnotatedMethod,boolean) -> _handleSingleArgumentFactory
    org.codehaus.jackson.map.deser.impl.CreatorProperty constructCreatorProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,int,org.codehaus.jackson.map.introspect.AnnotatedParameter,java.lang.Object) -> constructCreatorProperty
    void addBeanProps(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder) -> addBeanProps
    void addReferenceProperties(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder) -> addReferenceProperties
    void addInjectables(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder) -> addInjectables
    org.codehaus.jackson.map.deser.SettableAnyProperty constructAnySetter(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.AnnotatedMethod) -> constructAnySetter
    org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMethod) -> constructSettableProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedField) -> constructSettableProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty constructSetterlessProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMethod) -> constructSetterlessProperty
    boolean isPotentialBeanType(java.lang.Class) -> isPotentialBeanType
    boolean isIgnorableType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.Class,java.util.Map) -> isIgnorableType
    org.codehaus.jackson.map.Deserializers[] access$000() -> access$000
org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl -> org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl:
    org.codehaus.jackson.map.KeyDeserializers[] NO_KEY_DESERIALIZERS -> NO_KEY_DESERIALIZERS
    org.codehaus.jackson.map.deser.BeanDeserializerModifier[] NO_MODIFIERS -> NO_MODIFIERS
    org.codehaus.jackson.map.AbstractTypeResolver[] NO_ABSTRACT_TYPE_RESOLVERS -> NO_ABSTRACT_TYPE_RESOLVERS
    org.codehaus.jackson.map.deser.ValueInstantiators[] NO_VALUE_INSTANTIATORS -> NO_VALUE_INSTANTIATORS
    org.codehaus.jackson.map.Deserializers[] _additionalDeserializers -> _additionalDeserializers
    org.codehaus.jackson.map.KeyDeserializers[] _additionalKeyDeserializers -> _additionalKeyDeserializers
    org.codehaus.jackson.map.deser.BeanDeserializerModifier[] _modifiers -> _modifiers
    org.codehaus.jackson.map.AbstractTypeResolver[] _abstractTypeResolvers -> _abstractTypeResolvers
    org.codehaus.jackson.map.deser.ValueInstantiators[] _valueInstantiators -> _valueInstantiators
    org.codehaus.jackson.map.DeserializerFactory$Config withAdditionalDeserializers(org.codehaus.jackson.map.Deserializers) -> withAdditionalDeserializers
    org.codehaus.jackson.map.DeserializerFactory$Config withAdditionalKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers) -> withAdditionalKeyDeserializers
    org.codehaus.jackson.map.DeserializerFactory$Config withDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier) -> withDeserializerModifier
    org.codehaus.jackson.map.DeserializerFactory$Config withAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver) -> withAbstractTypeResolver
    org.codehaus.jackson.map.DeserializerFactory$Config withValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators) -> withValueInstantiators
    boolean hasDeserializers() -> hasDeserializers
    boolean hasKeyDeserializers() -> hasKeyDeserializers
    boolean hasDeserializerModifiers() -> hasDeserializerModifiers
    boolean hasAbstractTypeResolvers() -> hasAbstractTypeResolvers
    boolean hasValueInstantiators() -> hasValueInstantiators
    java.lang.Iterable deserializers() -> deserializers
    java.lang.Iterable keyDeserializers() -> keyDeserializers
    java.lang.Iterable deserializerModifiers() -> deserializerModifiers
    java.lang.Iterable abstractTypeResolvers() -> abstractTypeResolvers
    java.lang.Iterable valueInstantiators() -> valueInstantiators
org.codehaus.jackson.map.deser.BeanDeserializerModifier -> org.codehaus.jackson.map.deser.BeanDeserializerModifier:
    org.codehaus.jackson.map.deser.BeanDeserializerBuilder updateBuilder(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder) -> updateBuilder
    org.codehaus.jackson.map.JsonDeserializer modifyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.JsonDeserializer) -> modifyDeserializer
org.codehaus.jackson.map.deser.CollectionDeserializer -> org.codehaus.jackson.map.deser.CollectionDeserializer:
org.codehaus.jackson.map.deser.ContainerDeserializer -> org.codehaus.jackson.map.deser.ContainerDeserializer:
org.codehaus.jackson.map.deser.CustomDeserializerFactory -> org.codehaus.jackson.map.deser.CustomDeserializerFactory:
    java.util.HashMap _directClassMappings -> _directClassMappings
    java.util.HashMap _mixInAnnotations -> _mixInAnnotations
    org.codehaus.jackson.map.DeserializerFactory withConfig(org.codehaus.jackson.map.DeserializerFactory$Config) -> withConfig
    void addSpecificMapping(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer) -> addSpecificMapping
    void addMixInAnnotationMapping(java.lang.Class,java.lang.Class) -> addMixInAnnotationMapping
    org.codehaus.jackson.map.JsonDeserializer createBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createBeanDeserializer
    org.codehaus.jackson.map.JsonDeserializer createArrayDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.BeanProperty) -> createArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer createEnumDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createEnumDeserializer
org.codehaus.jackson.map.deser.DateDeserializer -> org.codehaus.jackson.map.deser.DateDeserializer:
org.codehaus.jackson.map.deser.EnumDeserializer -> org.codehaus.jackson.map.deser.EnumDeserializer:
org.codehaus.jackson.map.deser.EnumResolver -> org.codehaus.jackson.map.deser.EnumResolver:
org.codehaus.jackson.map.deser.FromStringDeserializer -> org.codehaus.jackson.map.deser.FromStringDeserializer:
org.codehaus.jackson.map.deser.JsonNodeDeserializer -> org.codehaus.jackson.map.deser.JsonNodeDeserializer:
    org.codehaus.jackson.map.deser.JsonNodeDeserializer instance -> instance
    org.codehaus.jackson.node.ObjectNode deserializeObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeObject
    org.codehaus.jackson.node.ArrayNode deserializeArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeArray
    org.codehaus.jackson.JsonNode deserializeAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeAny
org.codehaus.jackson.map.deser.MapDeserializer -> org.codehaus.jackson.map.deser.MapDeserializer:
org.codehaus.jackson.map.deser.SettableAnyProperty -> org.codehaus.jackson.map.deser.SettableAnyProperty:
    org.codehaus.jackson.map.BeanProperty _property -> _property
    java.lang.reflect.Method _setter -> _setter
    org.codehaus.jackson.type.JavaType _type -> _type
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    org.codehaus.jackson.map.deser.SettableAnyProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    void setValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> setValueDeserializer
    org.codehaus.jackson.map.BeanProperty getProperty() -> getProperty
    boolean hasValueDeserializer() -> hasValueDeserializer
    org.codehaus.jackson.type.JavaType getType() -> getType
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String) -> deserializeAndSet
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    void set(java.lang.Object,java.lang.String,java.lang.Object) -> set
    void _throwAsIOE(java.lang.Exception,java.lang.String,java.lang.Object) -> _throwAsIOE
    java.lang.String getClassName() -> getClassName
    java.lang.String toString() -> toString
org.codehaus.jackson.map.deser.SettableBeanProperty -> org.codehaus.jackson.map.deser.SettableBeanProperty:
    java.lang.String _propName -> _propName
    org.codehaus.jackson.type.JavaType _type -> _type
    org.codehaus.jackson.map.util.Annotations _contextAnnotations -> _contextAnnotations
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    org.codehaus.jackson.map.deser.SettableBeanProperty$NullProvider _nullProvider -> _nullProvider
    java.lang.String _managedReferenceName -> _managedReferenceName
    int _propertyIndex -> _propertyIndex
    void setValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> setValueDeserializer
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    void setManagedReferenceName(java.lang.String) -> setManagedReferenceName
    void assignIndex(int) -> assignIndex
    java.lang.String getName() -> getName
    org.codehaus.jackson.type.JavaType getType() -> getType
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.String getPropertyName() -> getPropertyName
    java.lang.String getManagedReferenceName() -> getManagedReferenceName
    boolean hasValueDeserializer() -> hasValueDeserializer
    boolean hasValueTypeDeserializer() -> hasValueTypeDeserializer
    org.codehaus.jackson.map.JsonDeserializer getValueDeserializer() -> getValueDeserializer
    org.codehaus.jackson.map.TypeDeserializer getValueTypeDeserializer() -> getValueTypeDeserializer
    int getPropertyIndex() -> getPropertyIndex
    int getProperytIndex() -> getProperytIndex
    java.lang.Object getInjectableValueId() -> getInjectableValueId
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    void _throwAsIOE(java.lang.Exception,java.lang.Object) -> _throwAsIOE
    java.io.IOException _throwAsIOE(java.lang.Exception) -> _throwAsIOE
    java.lang.String toString() -> toString
org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty -> org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty:
    org.codehaus.jackson.map.introspect.AnnotatedField _annotated -> _annotated
    java.lang.reflect.Field _field -> _field
    org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
org.codehaus.jackson.map.deser.SettableBeanProperty$InnerClassProperty -> org.codehaus.jackson.map.deser.SettableBeanProperty$InnerClassProperty:
    org.codehaus.jackson.map.deser.SettableBeanProperty _delegate -> _delegate
    java.lang.reflect.Constructor _creator -> _creator
    org.codehaus.jackson.map.deser.SettableBeanProperty$InnerClassProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty -> org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty:
    java.lang.String _referenceName -> _referenceName
    boolean _isContainer -> _isContainer
    org.codehaus.jackson.map.deser.SettableBeanProperty _managedProperty -> _managedProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty _backProperty -> _backProperty
    org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty -> org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty:
    org.codehaus.jackson.map.introspect.AnnotatedMethod _annotated -> _annotated
    java.lang.reflect.Method _setter -> _setter
    org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
org.codehaus.jackson.map.deser.SettableBeanProperty$NullProvider -> org.codehaus.jackson.map.deser.SettableBeanProperty$NullProvider:
    java.lang.Object _nullValue -> _nullValue
    boolean _isPrimitive -> _isPrimitive
    java.lang.Class _rawType -> _rawType
    java.lang.Object nullValue(org.codehaus.jackson.map.DeserializationContext) -> nullValue
org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty -> org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty:
    org.codehaus.jackson.map.introspect.AnnotatedMethod _annotated -> _annotated
    java.lang.reflect.Method _getter -> _getter
    org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
org.codehaus.jackson.map.deser.StdDeserializationContext -> org.codehaus.jackson.map.deser.StdDeserializationContext:
    int MAX_ERROR_STR_LEN -> MAX_ERROR_STR_LEN
    org.codehaus.jackson.JsonParser _parser -> _parser
    org.codehaus.jackson.map.DeserializerProvider _deserProvider -> _deserProvider
    org.codehaus.jackson.map.InjectableValues _injectableValues -> _injectableValues
    org.codehaus.jackson.map.util.ArrayBuilders _arrayBuilders -> _arrayBuilders
    org.codehaus.jackson.map.util.ObjectBuffer _objectBuffer -> _objectBuffer
    java.text.DateFormat _dateFormat -> _dateFormat
    org.codehaus.jackson.map.DeserializerProvider getDeserializerProvider() -> getDeserializerProvider
    org.codehaus.jackson.JsonParser getParser() -> getParser
    java.lang.Object findInjectableValue(java.lang.Object,org.codehaus.jackson.map.BeanProperty,java.lang.Object) -> findInjectableValue
    org.codehaus.jackson.map.util.ObjectBuffer leaseObjectBuffer() -> leaseObjectBuffer
    void returnObjectBuffer(org.codehaus.jackson.map.util.ObjectBuffer) -> returnObjectBuffer
    org.codehaus.jackson.map.util.ArrayBuilders getArrayBuilders() -> getArrayBuilders
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.util.Calendar constructCalendar(java.util.Date) -> constructCalendar
    boolean handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.JsonDeserializer,java.lang.Object,java.lang.String) -> handleUnknownProperty
    org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class) -> mappingException
    org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class,org.codehaus.jackson.JsonToken) -> mappingException
    org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable) -> instantiationException
    org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.String) -> instantiationException
    org.codehaus.jackson.map.JsonMappingException weirdStringException(java.lang.Class,java.lang.String) -> weirdStringException
    org.codehaus.jackson.map.JsonMappingException weirdNumberException(java.lang.Class,java.lang.String) -> weirdNumberException
    org.codehaus.jackson.map.JsonMappingException weirdKeyException(java.lang.Class,java.lang.String,java.lang.String) -> weirdKeyException
    org.codehaus.jackson.map.JsonMappingException wrongTokenException(org.codehaus.jackson.JsonParser,org.codehaus.jackson.JsonToken,java.lang.String) -> wrongTokenException
    org.codehaus.jackson.map.JsonMappingException unknownFieldException(java.lang.Object,java.lang.String) -> unknownFieldException
    org.codehaus.jackson.map.JsonMappingException unknownTypeException(org.codehaus.jackson.type.JavaType,java.lang.String) -> unknownTypeException
    java.text.DateFormat getDateFormat() -> getDateFormat
    java.lang.String determineClassName(java.lang.Object) -> determineClassName
    java.lang.String _calcName(java.lang.Class) -> _calcName
    java.lang.String _valueDesc() -> _valueDesc
    java.lang.String _desc(java.lang.String) -> _desc
org.codehaus.jackson.map.deser.StdDeserializer -> org.codehaus.jackson.map.deser.StdDeserializer:
org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer -> org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer:
    org.codehaus.jackson.map.deser.StdDeserializer this$0 -> this$0
org.codehaus.jackson.map.deser.StdDeserializer$ClassDeserializer -> org.codehaus.jackson.map.deser.StdDeserializer$ClassDeserializer:
    org.codehaus.jackson.map.deser.StdDeserializer this$0 -> this$0
org.codehaus.jackson.map.deser.StdDeserializer$StringDeserializer -> org.codehaus.jackson.map.deser.StdDeserializer$StringDeserializer:
    java.lang.String deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.String deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.StdDeserializerProvider -> org.codehaus.jackson.map.deser.StdDeserializerProvider:
    java.util.concurrent.ConcurrentHashMap _cachedDeserializers -> _cachedDeserializers
    java.util.HashMap _incompleteDeserializers -> _incompleteDeserializers
    org.codehaus.jackson.map.util.RootNameLookup _rootNames -> _rootNames
    org.codehaus.jackson.map.DeserializerFactory _factory -> _factory
    org.codehaus.jackson.map.DeserializerProvider withAdditionalDeserializers(org.codehaus.jackson.map.Deserializers) -> withAdditionalDeserializers
    org.codehaus.jackson.map.DeserializerProvider withAdditionalKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers) -> withAdditionalKeyDeserializers
    org.codehaus.jackson.map.DeserializerProvider withDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier) -> withDeserializerModifier
    org.codehaus.jackson.map.DeserializerProvider withAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver) -> withAbstractTypeResolver
    org.codehaus.jackson.map.DeserializerProvider withValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators) -> withValueInstantiators
    org.codehaus.jackson.map.deser.StdDeserializerProvider withFactory(org.codehaus.jackson.map.DeserializerFactory) -> withFactory
    org.codehaus.jackson.type.JavaType mapAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> mapAbstractType
    org.codehaus.jackson.io.SerializedString findExpectedRootName(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> findExpectedRootName
    org.codehaus.jackson.map.JsonDeserializer findValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findValueDeserializer
    org.codehaus.jackson.map.JsonDeserializer findTypedValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findTypedValueDeserializer
    org.codehaus.jackson.map.KeyDeserializer findKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findKeyDeserializer
    boolean hasValueDeserializerFor(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> hasValueDeserializerFor
    int cachedDeserializersCount() -> cachedDeserializersCount
    void flushCachedDeserializers() -> flushCachedDeserializers
    org.codehaus.jackson.map.JsonDeserializer _findCachedDeserializer(org.codehaus.jackson.type.JavaType) -> _findCachedDeserializer
    org.codehaus.jackson.map.JsonDeserializer _createAndCacheValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> _createAndCacheValueDeserializer
    org.codehaus.jackson.map.JsonDeserializer _createAndCache2(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> _createAndCache2
    org.codehaus.jackson.map.JsonDeserializer _createDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> _createDeserializer
    void _resolveDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.ResolvableDeserializer) -> _resolveDeserializer
    org.codehaus.jackson.map.JsonDeserializer _handleUnknownValueDeserializer(org.codehaus.jackson.type.JavaType) -> _handleUnknownValueDeserializer
    org.codehaus.jackson.map.KeyDeserializer _handleUnknownKeyDeserializer(org.codehaus.jackson.type.JavaType) -> _handleUnknownKeyDeserializer
    org.codehaus.jackson.map.DeserializerProvider withFactory(org.codehaus.jackson.map.DeserializerFactory) -> withFactory
org.codehaus.jackson.map.deser.StdDeserializerProvider$WrappedDeserializer -> org.codehaus.jackson.map.deser.StdDeserializerProvider$WrappedDeserializer:
    org.codehaus.jackson.map.TypeDeserializer _typeDeserializer -> _typeDeserializer
    org.codehaus.jackson.map.JsonDeserializer _deserializer -> _deserializer
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
org.codehaus.jackson.map.deser.StdDeserializers -> org.codehaus.jackson.map.deser.StdDeserializers:
    java.util.HashMap _deserializers -> _deserializers
    java.util.HashMap constructAll() -> constructAll
    void add(org.codehaus.jackson.map.deser.std.StdDeserializer) -> add
    void add(org.codehaus.jackson.map.deser.std.StdDeserializer,java.lang.Class) -> add
org.codehaus.jackson.map.deser.StdKeyDeserializer -> org.codehaus.jackson.map.deser.StdKeyDeserializer:
org.codehaus.jackson.map.deser.StdKeyDeserializers -> org.codehaus.jackson.map.deser.StdKeyDeserializers:
org.codehaus.jackson.map.deser.StdScalarDeserializer -> org.codehaus.jackson.map.deser.StdScalarDeserializer:
org.codehaus.jackson.map.deser.ThrowableDeserializer -> org.codehaus.jackson.map.deser.ThrowableDeserializer:
org.codehaus.jackson.map.deser.UntypedObjectDeserializer -> org.codehaus.jackson.map.deser.UntypedObjectDeserializer:
org.codehaus.jackson.map.deser.ValueInstantiator -> org.codehaus.jackson.map.deser.ValueInstantiator:
    java.lang.String getValueTypeDesc() -> getValueTypeDesc
    boolean canInstantiate() -> canInstantiate
    boolean canCreateFromString() -> canCreateFromString
    boolean canCreateFromInt() -> canCreateFromInt
    boolean canCreateFromLong() -> canCreateFromLong
    boolean canCreateFromDouble() -> canCreateFromDouble
    boolean canCreateFromBoolean() -> canCreateFromBoolean
    boolean canCreateUsingDefault() -> canCreateUsingDefault
    boolean canCreateUsingDelegate() -> canCreateUsingDelegate
    boolean canCreateFromObjectWith() -> canCreateFromObjectWith
    org.codehaus.jackson.map.deser.SettableBeanProperty[] getFromObjectArguments() -> getFromObjectArguments
    org.codehaus.jackson.type.JavaType getDelegateType() -> getDelegateType
    java.lang.Object createUsingDefault() -> createUsingDefault
    java.lang.Object createFromObjectWith(java.lang.Object[]) -> createFromObjectWith
    java.lang.Object createUsingDelegate(java.lang.Object) -> createUsingDelegate
    java.lang.Object createFromString(java.lang.String) -> createFromString
    java.lang.Object createFromInt(int) -> createFromInt
    java.lang.Object createFromLong(long) -> createFromLong
    java.lang.Object createFromDouble(double) -> createFromDouble
    java.lang.Object createFromBoolean(boolean) -> createFromBoolean
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getDefaultCreator() -> getDefaultCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getDelegateCreator() -> getDelegateCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getWithArgsCreator() -> getWithArgsCreator
org.codehaus.jackson.map.deser.ValueInstantiators -> org.codehaus.jackson.map.deser.ValueInstantiators:
    org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.deser.ValueInstantiator) -> findValueInstantiator
org.codehaus.jackson.map.deser.ValueInstantiators$Base -> org.codehaus.jackson.map.deser.ValueInstantiators$Base:
    org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.deser.ValueInstantiator) -> findValueInstantiator
org.codehaus.jackson.map.deser.impl.BeanPropertyMap -> org.codehaus.jackson.map.deser.impl.BeanPropertyMap:
    org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets -> _buckets
    int _hashMask -> _hashMask
    int _size -> _size
    void assignIndexes() -> assignIndexes
    int findSize(int) -> findSize
    int size() -> size
    java.util.Iterator allProperties() -> allProperties
    org.codehaus.jackson.map.deser.SettableBeanProperty find(java.lang.String) -> find
    void replace(org.codehaus.jackson.map.deser.SettableBeanProperty) -> replace
    void remove(org.codehaus.jackson.map.deser.SettableBeanProperty) -> remove
    org.codehaus.jackson.map.deser.SettableBeanProperty _findWithEquals(java.lang.String,int) -> _findWithEquals
org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket -> org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket:
    org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket next -> next
    java.lang.String key -> key
    org.codehaus.jackson.map.deser.SettableBeanProperty value -> value
org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl -> org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl:
    org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[] _buckets -> _buckets
    org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket _currentBucket -> _currentBucket
    int _nextBucketIndex -> _nextBucketIndex
    boolean hasNext() -> hasNext
    org.codehaus.jackson.map.deser.SettableBeanProperty next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.codehaus.jackson.map.deser.impl.CreatorCollector -> org.codehaus.jackson.map.deser.impl.CreatorCollector:
    org.codehaus.jackson.map.introspect.BasicBeanDescription _beanDesc -> _beanDesc
    boolean _canFixAccess -> _canFixAccess
    org.codehaus.jackson.map.introspect.AnnotatedConstructor _defaultConstructor -> _defaultConstructor
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _stringCreator -> _stringCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _intCreator -> _intCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _longCreator -> _longCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _doubleCreator -> _doubleCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _booleanCreator -> _booleanCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _delegateCreator -> _delegateCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _propertyBasedCreator -> _propertyBasedCreator
    org.codehaus.jackson.map.deser.impl.CreatorProperty[] _propertyBasedArgs -> _propertyBasedArgs
    org.codehaus.jackson.map.deser.ValueInstantiator constructValueInstantiator(org.codehaus.jackson.map.DeserializationConfig) -> constructValueInstantiator
    void setDefaultConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor) -> setDefaultConstructor
    void addStringCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> addStringCreator
    void addIntCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> addIntCreator
    void addLongCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> addLongCreator
    void addDoubleCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> addDoubleCreator
    void addBooleanCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> addBooleanCreator
    void addDelegatingCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> addDelegatingCreator
    void addPropertyCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.map.deser.impl.CreatorProperty[]) -> addPropertyCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.map.introspect.AnnotatedWithParams,java.lang.String) -> verifyNonDup
org.codehaus.jackson.map.deser.impl.CreatorProperty -> org.codehaus.jackson.map.deser.impl.CreatorProperty:
    org.codehaus.jackson.map.introspect.AnnotatedParameter _annotated -> _annotated
    java.lang.Object _injectableValueId -> _injectableValueId
    org.codehaus.jackson.map.deser.impl.CreatorProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
    java.lang.Object findInjectableValue(org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> findInjectableValue
    void inject(org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> inject
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserializeAndSet
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object getInjectableValueId() -> getInjectableValueId
    org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer) -> withValueDeserializer
org.codehaus.jackson.map.deser.impl.ExternalTypeHandler -> org.codehaus.jackson.map.deser.impl.ExternalTypeHandler:
    org.codehaus.jackson.map.deser.impl.ExternalTypeHandler$ExtTypedProperty[] _properties -> _properties
    java.util.HashMap _nameToPropertyIndex -> _nameToPropertyIndex
    java.lang.String[] _typeIds -> _typeIds
    org.codehaus.jackson.util.TokenBuffer[] _tokens -> _tokens
    org.codehaus.jackson.map.deser.impl.ExternalTypeHandler start() -> start
    boolean handleTypePropertyValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.String,java.lang.Object) -> handleTypePropertyValue
    boolean handleToken(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.String,java.lang.Object) -> handleToken
    java.lang.Object complete(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> complete
    void _deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,int) -> _deserialize
org.codehaus.jackson.map.deser.impl.ExternalTypeHandler$Builder -> org.codehaus.jackson.map.deser.impl.ExternalTypeHandler$Builder:
    java.util.ArrayList _properties -> _properties
    java.util.HashMap _nameToPropertyIndex -> _nameToPropertyIndex
    void addExternal(org.codehaus.jackson.map.deser.SettableBeanProperty,java.lang.String) -> addExternal
    org.codehaus.jackson.map.deser.impl.ExternalTypeHandler build() -> build
org.codehaus.jackson.map.deser.impl.ExternalTypeHandler$ExtTypedProperty -> org.codehaus.jackson.map.deser.impl.ExternalTypeHandler$ExtTypedProperty:
    org.codehaus.jackson.map.deser.SettableBeanProperty _property -> _property
    java.lang.String _typePropertyName -> _typePropertyName
    boolean hasTypePropertyName(java.lang.String) -> hasTypePropertyName
    java.lang.String getTypePropertyName() -> getTypePropertyName
    org.codehaus.jackson.map.deser.SettableBeanProperty getProperty() -> getProperty
org.codehaus.jackson.map.deser.impl.PropertyBasedCreator -> org.codehaus.jackson.map.deser.impl.PropertyBasedCreator:
    org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    java.util.HashMap _properties -> _properties
    int _propertyCount -> _propertyCount
    java.lang.Object[] _defaultValues -> _defaultValues
    org.codehaus.jackson.map.deser.SettableBeanProperty[] _propertiesWithInjectables -> _propertiesWithInjectables
    java.util.Collection getCreatorProperties() -> getCreatorProperties
    org.codehaus.jackson.map.deser.SettableBeanProperty findCreatorProperty(java.lang.String) -> findCreatorProperty
    void assignDeserializer(org.codehaus.jackson.map.deser.SettableBeanProperty,org.codehaus.jackson.map.JsonDeserializer) -> assignDeserializer
    org.codehaus.jackson.map.deser.impl.PropertyValueBuffer startBuilding(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> startBuilding
    java.lang.Object build(org.codehaus.jackson.map.deser.impl.PropertyValueBuffer) -> build
org.codehaus.jackson.map.deser.impl.PropertyValue -> org.codehaus.jackson.map.deser.impl.PropertyValue:
    org.codehaus.jackson.map.deser.impl.PropertyValue next -> next
    java.lang.Object value -> value
    void assign(java.lang.Object) -> assign
org.codehaus.jackson.map.deser.impl.PropertyValue$Any -> org.codehaus.jackson.map.deser.impl.PropertyValue$Any:
    org.codehaus.jackson.map.deser.SettableAnyProperty _property -> _property
    java.lang.String _propertyName -> _propertyName
    void assign(java.lang.Object) -> assign
org.codehaus.jackson.map.deser.impl.PropertyValue$Map -> org.codehaus.jackson.map.deser.impl.PropertyValue$Map:
    java.lang.Object _key -> _key
    void assign(java.lang.Object) -> assign
org.codehaus.jackson.map.deser.impl.PropertyValue$Regular -> org.codehaus.jackson.map.deser.impl.PropertyValue$Regular:
    org.codehaus.jackson.map.deser.SettableBeanProperty _property -> _property
    void assign(java.lang.Object) -> assign
org.codehaus.jackson.map.deser.impl.PropertyValueBuffer -> org.codehaus.jackson.map.deser.impl.PropertyValueBuffer:
    org.codehaus.jackson.JsonParser _parser -> _parser
    org.codehaus.jackson.map.DeserializationContext _context -> _context
    java.lang.Object[] _creatorParameters -> _creatorParameters
    int _paramsNeeded -> _paramsNeeded
    org.codehaus.jackson.map.deser.impl.PropertyValue _buffered -> _buffered
    void inject(org.codehaus.jackson.map.deser.SettableBeanProperty[]) -> inject
    java.lang.Object[] getParameters(java.lang.Object[]) -> getParameters
    org.codehaus.jackson.map.deser.impl.PropertyValue buffered() -> buffered
    boolean assignParameter(int,java.lang.Object) -> assignParameter
    void bufferProperty(org.codehaus.jackson.map.deser.SettableBeanProperty,java.lang.Object) -> bufferProperty
    void bufferAnyProperty(org.codehaus.jackson.map.deser.SettableAnyProperty,java.lang.String,java.lang.Object) -> bufferAnyProperty
    void bufferMapProperty(java.lang.Object,java.lang.Object) -> bufferMapProperty
org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler -> org.codehaus.jackson.map.deser.impl.UnwrappedPropertyHandler:
    java.util.ArrayList _properties -> _properties
    void addProperty(org.codehaus.jackson.map.deser.SettableBeanProperty) -> addProperty
    java.lang.Object processUnwrapped(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer) -> processUnwrapped
org.codehaus.jackson.map.deser.impl.ValueInjector -> org.codehaus.jackson.map.deser.impl.ValueInjector:
    java.lang.Object _valueId -> _valueId
    java.lang.Object findValue(org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> findValue
    void inject(org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> inject
org.codehaus.jackson.map.deser.std.AtomicBooleanDeserializer -> org.codehaus.jackson.map.deser.std.AtomicBooleanDeserializer:
    java.util.concurrent.atomic.AtomicBoolean deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.AtomicReferenceDeserializer -> org.codehaus.jackson.map.deser.std.AtomicReferenceDeserializer:
    org.codehaus.jackson.type.JavaType _referencedType -> _referencedType
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    java.util.concurrent.atomic.AtomicReference deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> resolve
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.BaseNodeDeserializer -> org.codehaus.jackson.map.deser.std.BaseNodeDeserializer:
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    void _reportProblem(org.codehaus.jackson.JsonParser,java.lang.String) -> _reportProblem
    void _handleDuplicateField(java.lang.String,org.codehaus.jackson.node.ObjectNode,org.codehaus.jackson.JsonNode,org.codehaus.jackson.JsonNode) -> _handleDuplicateField
    org.codehaus.jackson.node.ObjectNode deserializeObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.node.JsonNodeFactory) -> deserializeObject
    org.codehaus.jackson.node.ArrayNode deserializeArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.node.JsonNodeFactory) -> deserializeArray
    org.codehaus.jackson.JsonNode deserializeAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.node.JsonNodeFactory) -> deserializeAny
org.codehaus.jackson.map.deser.std.BaseNodeDeserializer$1 -> org.codehaus.jackson.map.deser.std.BaseNodeDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.map.deser.std.CalendarDeserializer -> org.codehaus.jackson.map.deser.std.CalendarDeserializer:
    java.lang.Class _calendarClass -> _calendarClass
    java.util.Calendar deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.ClassDeserializer -> org.codehaus.jackson.map.deser.std.ClassDeserializer:
    java.lang.Class deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.CollectionDeserializer -> org.codehaus.jackson.map.deser.std.CollectionDeserializer:
    org.codehaus.jackson.type.JavaType _collectionType -> _collectionType
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> resolve
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    org.codehaus.jackson.map.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    java.util.Collection deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.util.Collection deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.util.Collection handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.ContainerDeserializerBase -> org.codehaus.jackson.map.deser.std.ContainerDeserializerBase:
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    org.codehaus.jackson.map.JsonDeserializer getContentDeserializer() -> getContentDeserializer
org.codehaus.jackson.map.deser.std.DateDeserializer -> org.codehaus.jackson.map.deser.std.DateDeserializer:
    java.util.Date deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.EnumDeserializer -> org.codehaus.jackson.map.deser.std.EnumDeserializer:
    org.codehaus.jackson.map.util.EnumResolver _resolver -> _resolver
    org.codehaus.jackson.map.JsonDeserializer deserializerForCreator(org.codehaus.jackson.map.DeserializationConfig,java.lang.Class,org.codehaus.jackson.map.introspect.AnnotatedMethod) -> deserializerForCreator
    java.lang.Enum deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.EnumDeserializer$FactoryBasedDeserializer -> org.codehaus.jackson.map.deser.std.EnumDeserializer$FactoryBasedDeserializer:
    java.lang.Class _enumClass -> _enumClass
    java.lang.Class _inputType -> _inputType
    java.lang.reflect.Method _factory -> _factory
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.EnumMapDeserializer -> org.codehaus.jackson.map.deser.std.EnumMapDeserializer:
    java.lang.Class _enumClass -> _enumClass
    org.codehaus.jackson.map.JsonDeserializer _keyDeserializer -> _keyDeserializer
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    java.util.EnumMap deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.util.EnumMap constructMap() -> constructMap
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.EnumSetDeserializer -> org.codehaus.jackson.map.deser.std.EnumSetDeserializer:
    java.lang.Class _enumClass -> _enumClass
    org.codehaus.jackson.map.JsonDeserializer _enumDeserializer -> _enumDeserializer
    java.util.EnumSet deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.util.EnumSet constructSet() -> constructSet
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer:
    java.lang.Iterable all() -> all
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserializeEmbedded(java.lang.Object,org.codehaus.jackson.map.DeserializationContext) -> _deserializeEmbedded
org.codehaus.jackson.map.deser.std.FromStringDeserializer$CharsetDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$CharsetDeserializer:
    java.nio.charset.Charset _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$CurrencyDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$CurrencyDeserializer:
    java.util.Currency _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$InetAddressDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$InetAddressDeserializer:
    java.net.InetAddress _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$LocaleDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$LocaleDeserializer:
    java.util.Locale _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$PatternDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$PatternDeserializer:
    java.util.regex.Pattern _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$TimeZoneDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$TimeZoneDeserializer:
    java.util.TimeZone _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$URIDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$URIDeserializer:
    java.net.URI _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$URLDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$URLDeserializer:
    java.net.URL _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.FromStringDeserializer$UUIDDeserializer -> org.codehaus.jackson.map.deser.std.FromStringDeserializer$UUIDDeserializer:
    java.util.UUID _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.util.UUID _deserializeEmbedded(java.lang.Object,org.codehaus.jackson.map.DeserializationContext) -> _deserializeEmbedded
    java.lang.Object _deserializeEmbedded(java.lang.Object,org.codehaus.jackson.map.DeserializationContext) -> _deserializeEmbedded
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.deser.std.JavaTypeDeserializer -> org.codehaus.jackson.map.deser.std.JavaTypeDeserializer:
    org.codehaus.jackson.type.JavaType deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.JsonNodeDeserializer -> org.codehaus.jackson.map.deser.std.JsonNodeDeserializer:
    org.codehaus.jackson.map.deser.std.JsonNodeDeserializer instance -> instance
    org.codehaus.jackson.map.JsonDeserializer getDeserializer(java.lang.Class) -> getDeserializer
    org.codehaus.jackson.JsonNode deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$1 -> org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ArrayDeserializer -> org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ArrayDeserializer:
    org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ArrayDeserializer _instance -> _instance
    org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ArrayDeserializer getInstance() -> getInstance
    org.codehaus.jackson.node.ArrayNode deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer -> org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer:
    org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer _instance -> _instance
    org.codehaus.jackson.map.deser.std.JsonNodeDeserializer$ObjectDeserializer getInstance() -> getInstance
    org.codehaus.jackson.node.ObjectNode deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.MapDeserializer -> org.codehaus.jackson.map.deser.std.MapDeserializer:
    org.codehaus.jackson.type.JavaType _mapType -> _mapType
    org.codehaus.jackson.map.KeyDeserializer _keyDeserializer -> _keyDeserializer
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    boolean _hasDefaultCreator -> _hasDefaultCreator
    org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator -> _propertyBasedCreator
    org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    java.util.HashSet _ignorableProperties -> _ignorableProperties
    void setIgnorableProperties(java.lang.String[]) -> setIgnorableProperties
    void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> resolve
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    org.codehaus.jackson.map.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    java.util.Map deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.util.Map deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Map) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Class getMapClass() -> getMapClass
    org.codehaus.jackson.type.JavaType getValueType() -> getValueType
    void _readAndBind(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Map) -> _readAndBind
    java.util.Map _deserializeUsingCreator(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _deserializeUsingCreator
    void wrapAndThrow(java.lang.Throwable,java.lang.Object) -> wrapAndThrow
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.ObjectArrayDeserializer -> org.codehaus.jackson.map.deser.std.ObjectArrayDeserializer:
    org.codehaus.jackson.type.JavaType _arrayType -> _arrayType
    boolean _untyped -> _untyped
    java.lang.Class _elementClass -> _elementClass
    org.codehaus.jackson.map.JsonDeserializer _elementDeserializer -> _elementDeserializer
    org.codehaus.jackson.map.TypeDeserializer _elementTypeDeserializer -> _elementTypeDeserializer
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    org.codehaus.jackson.map.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    java.lang.Object[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object[] deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Byte[] deserializeFromBase64(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromBase64
    java.lang.Object[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers:
    java.util.HashMap _allDeserializers -> _allDeserializers
    org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers instance -> instance
    java.util.HashMap getAll() -> getAll
    void add(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer) -> add
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$Base -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$Base:
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$BooleanDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$BooleanDeser:
    boolean[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    boolean[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ByteDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ByteDeser:
    byte[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    byte[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$CharDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$CharDeser:
    char[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$DoubleDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$DoubleDeser:
    double[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    double[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$FloatDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$FloatDeser:
    float[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    float[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$IntDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$IntDeser:
    int[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    int[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$LongDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$LongDeser:
    long[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    long[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ShortDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ShortDeser:
    short[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    short[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$StringDeser -> org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$StringDeser:
    java.lang.String[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.String[] handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer:
    java.lang.Class _valueClass -> _valueClass
    java.lang.Class getValueClass() -> getValueClass
    org.codehaus.jackson.type.JavaType getValueType() -> getValueType
    boolean isDefaultSerializer(org.codehaus.jackson.map.JsonDeserializer) -> isDefaultSerializer
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    boolean _parseBooleanPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseBooleanPrimitive
    java.lang.Boolean _parseBoolean(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseBoolean
    boolean _parseBooleanFromNumber(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseBooleanFromNumber
    java.lang.Byte _parseByte(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseByte
    java.lang.Short _parseShort(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseShort
    short _parseShortPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseShortPrimitive
    int _parseIntPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseIntPrimitive
    java.lang.Integer _parseInteger(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseInteger
    java.lang.Long _parseLong(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseLong
    long _parseLongPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseLongPrimitive
    java.lang.Float _parseFloat(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseFloat
    float _parseFloatPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseFloatPrimitive
    java.lang.Double _parseDouble(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseDouble
    double _parseDoublePrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseDoublePrimitive
    java.util.Date _parseDate(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _parseDate
    double parseDouble(java.lang.String) -> parseDouble
    org.codehaus.jackson.map.JsonDeserializer findDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findDeserializer
    void handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String) -> handleUnknownProperty
    void reportUnknownProperty(org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String) -> reportUnknownProperty
org.codehaus.jackson.map.deser.std.StdDeserializer$1 -> org.codehaus.jackson.map.deser.std.StdDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
    int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType -> $SwitchMap$org$codehaus$jackson$JsonParser$NumberType
org.codehaus.jackson.map.deser.std.StdDeserializer$BigDecimalDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$BigDecimalDeserializer:
    java.math.BigDecimal deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$BigIntegerDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$BigIntegerDeserializer:
    java.math.BigInteger deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$BooleanDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$BooleanDeserializer:
    java.lang.Boolean deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Boolean deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$ByteDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$ByteDeserializer:
    java.lang.Byte deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$CharacterDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$CharacterDeserializer:
    java.lang.Character deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$DoubleDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$DoubleDeserializer:
    java.lang.Double deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Double deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$FloatDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$FloatDeserializer:
    java.lang.Float deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$IntegerDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$IntegerDeserializer:
    java.lang.Integer deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Integer deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$LongDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$LongDeserializer:
    java.lang.Long deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$NumberDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$NumberDeserializer:
    java.lang.Number deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$PrimitiveOrWrapperDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$PrimitiveOrWrapperDeserializer:
    java.lang.Object _nullValue -> _nullValue
    java.lang.Object getNullValue() -> getNullValue
org.codehaus.jackson.map.deser.std.StdDeserializer$ShortDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$ShortDeserializer:
    java.lang.Short deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$SqlDateDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$SqlDateDeserializer:
    java.sql.Date deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdDeserializer$StackTraceElementDeserializer -> org.codehaus.jackson.map.deser.std.StdDeserializer$StackTraceElementDeserializer:
    java.lang.StackTraceElement deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StdKeyDeserializer -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer:
    java.lang.Class _keyClass -> _keyClass
    java.lang.Object deserializeKey(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> deserializeKey
    java.lang.Class getKeyClass() -> getKeyClass
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    int _parseInt(java.lang.String) -> _parseInt
    long _parseLong(java.lang.String) -> _parseLong
    double _parseDouble(java.lang.String) -> _parseDouble
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$BoolKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$BoolKD:
    java.lang.Boolean _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ByteKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ByteKD:
    java.lang.Byte _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CalendarKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CalendarKD:
    java.util.Calendar _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CharKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CharKD:
    java.lang.Character _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DateKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DateKD:
    java.util.Date _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DoubleKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DoubleKD:
    java.lang.Double _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$EnumKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$EnumKD:
    org.codehaus.jackson.map.util.EnumResolver _resolver -> _resolver
    org.codehaus.jackson.map.introspect.AnnotatedMethod _factory -> _factory
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$FloatKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$FloatKD:
    java.lang.Float _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$IntKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$IntKD:
    java.lang.Integer _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$LongKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$LongKD:
    java.lang.Long _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ShortKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ShortKD:
    java.lang.Short _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer:
    java.lang.reflect.Constructor _ctor -> _ctor
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer:
    java.lang.reflect.Method _factoryMethod -> _factoryMethod
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringKD:
    org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringKD sString -> sString
    org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringKD sObject -> sObject
    org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringKD forType(java.lang.Class) -> forType
    java.lang.String _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializer$UuidKD -> org.codehaus.jackson.map.deser.std.StdKeyDeserializer$UuidKD:
    java.util.UUID _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
    java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _parse
org.codehaus.jackson.map.deser.std.StdKeyDeserializers -> org.codehaus.jackson.map.deser.std.StdKeyDeserializers:
    java.util.HashMap _keyDeserializers -> _keyDeserializers
    void add(org.codehaus.jackson.map.deser.std.StdKeyDeserializer) -> add
    java.util.HashMap constructAll() -> constructAll
    org.codehaus.jackson.map.KeyDeserializer constructStringKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> constructStringKeyDeserializer
    org.codehaus.jackson.map.KeyDeserializer constructEnumKeyDeserializer(org.codehaus.jackson.map.util.EnumResolver) -> constructEnumKeyDeserializer
    org.codehaus.jackson.map.KeyDeserializer constructEnumKeyDeserializer(org.codehaus.jackson.map.util.EnumResolver,org.codehaus.jackson.map.introspect.AnnotatedMethod) -> constructEnumKeyDeserializer
    org.codehaus.jackson.map.KeyDeserializer findStringBasedKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> findStringBasedKeyDeserializer
org.codehaus.jackson.map.deser.std.StdScalarDeserializer -> org.codehaus.jackson.map.deser.std.StdScalarDeserializer:
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
org.codehaus.jackson.map.deser.std.StdValueInstantiator -> org.codehaus.jackson.map.deser.std.StdValueInstantiator:
    java.lang.String _valueTypeDesc -> _valueTypeDesc
    boolean _cfgEmptyStringsAsObjects -> _cfgEmptyStringsAsObjects
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _defaultCreator -> _defaultCreator
    org.codehaus.jackson.map.deser.impl.CreatorProperty[] _constructorArguments -> _constructorArguments
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _withArgsCreator -> _withArgsCreator
    org.codehaus.jackson.type.JavaType _delegateType -> _delegateType
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _delegateCreator -> _delegateCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromStringCreator -> _fromStringCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromIntCreator -> _fromIntCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromLongCreator -> _fromLongCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromDoubleCreator -> _fromDoubleCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _fromBooleanCreator -> _fromBooleanCreator
    void configureFromObjectSettings(org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.map.deser.impl.CreatorProperty[]) -> configureFromObjectSettings
    void configureFromStringCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> configureFromStringCreator
    void configureFromIntCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> configureFromIntCreator
    void configureFromLongCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> configureFromLongCreator
    void configureFromDoubleCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> configureFromDoubleCreator
    void configureFromBooleanCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams) -> configureFromBooleanCreator
    java.lang.String getValueTypeDesc() -> getValueTypeDesc
    boolean canCreateFromString() -> canCreateFromString
    boolean canCreateFromInt() -> canCreateFromInt
    boolean canCreateFromLong() -> canCreateFromLong
    boolean canCreateFromDouble() -> canCreateFromDouble
    boolean canCreateFromBoolean() -> canCreateFromBoolean
    boolean canCreateUsingDefault() -> canCreateUsingDefault
    boolean canCreateFromObjectWith() -> canCreateFromObjectWith
    org.codehaus.jackson.type.JavaType getDelegateType() -> getDelegateType
    org.codehaus.jackson.map.deser.SettableBeanProperty[] getFromObjectArguments() -> getFromObjectArguments
    java.lang.Object createUsingDefault() -> createUsingDefault
    java.lang.Object createFromObjectWith(java.lang.Object[]) -> createFromObjectWith
    java.lang.Object createUsingDelegate(java.lang.Object) -> createUsingDelegate
    java.lang.Object createFromString(java.lang.String) -> createFromString
    java.lang.Object createFromInt(int) -> createFromInt
    java.lang.Object createFromLong(long) -> createFromLong
    java.lang.Object createFromDouble(double) -> createFromDouble
    java.lang.Object createFromBoolean(boolean) -> createFromBoolean
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getDelegateCreator() -> getDelegateCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getDefaultCreator() -> getDefaultCreator
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getWithArgsCreator() -> getWithArgsCreator
    java.lang.Object _createFromStringFallbacks(java.lang.String) -> _createFromStringFallbacks
    org.codehaus.jackson.map.JsonMappingException wrapException(java.lang.Throwable) -> wrapException
org.codehaus.jackson.map.deser.std.StringCollectionDeserializer -> org.codehaus.jackson.map.deser.std.StringCollectionDeserializer:
    org.codehaus.jackson.type.JavaType _collectionType -> _collectionType
    org.codehaus.jackson.map.JsonDeserializer _valueDeserializer -> _valueDeserializer
    boolean _isDefaultDeserializer -> _isDefaultDeserializer
    org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> resolve
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    org.codehaus.jackson.map.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    java.util.Collection deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.util.Collection deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection) -> deserialize
    java.util.Collection deserializeUsingCustom(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection) -> deserializeUsingCustom
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.util.Collection handleNonArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection) -> handleNonArray
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.StringDeserializer -> org.codehaus.jackson.map.deser.std.StringDeserializer:
    java.lang.String deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.String deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.ThrowableDeserializer -> org.codehaus.jackson.map.deser.std.ThrowableDeserializer:
    java.lang.String PROP_NAME_MESSAGE -> PROP_NAME_MESSAGE
    org.codehaus.jackson.map.JsonDeserializer unwrappingDeserializer() -> unwrappingDeserializer
    java.lang.Object deserializeFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeFromObject
org.codehaus.jackson.map.deser.std.TimestampDeserializer -> org.codehaus.jackson.map.deser.std.TimestampDeserializer:
    java.sql.Timestamp deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.TokenBufferDeserializer -> org.codehaus.jackson.map.deser.std.TokenBufferDeserializer:
    org.codehaus.jackson.util.TokenBuffer deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer -> org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer:
    java.lang.Object[] NO_OBJECTS -> NO_OBJECTS
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer) -> deserializeWithType
    java.lang.Object mapArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> mapArray
    java.lang.Object mapObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> mapObject
    java.lang.Object[] mapArrayToArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> mapArrayToArray
org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer$1 -> org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.map.exc.UnrecognizedPropertyException -> org.codehaus.jackson.map.exc.UnrecognizedPropertyException:
    long serialVersionUID -> serialVersionUID
    java.lang.Class _referringClass -> _referringClass
    java.lang.String _unrecognizedPropertyName -> _unrecognizedPropertyName
    org.codehaus.jackson.map.exc.UnrecognizedPropertyException from(org.codehaus.jackson.JsonParser,java.lang.Object,java.lang.String) -> from
    java.lang.Class getReferringClass() -> getReferringClass
    java.lang.String getUnrecognizedPropertyName() -> getUnrecognizedPropertyName
org.codehaus.jackson.map.ext.CoreXMLDeserializers -> org.codehaus.jackson.map.ext.CoreXMLDeserializers:
    javax.xml.datatype.DatatypeFactory _dataTypeFactory -> _dataTypeFactory
    java.util.Collection provide() -> provide
org.codehaus.jackson.map.ext.CoreXMLDeserializers$DurationDeserializer -> org.codehaus.jackson.map.ext.CoreXMLDeserializers$DurationDeserializer:
    javax.xml.datatype.Duration _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.ext.CoreXMLDeserializers$GregorianCalendarDeserializer -> org.codehaus.jackson.map.ext.CoreXMLDeserializers$GregorianCalendarDeserializer:
    javax.xml.datatype.XMLGregorianCalendar deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.ext.CoreXMLDeserializers$QNameDeserializer -> org.codehaus.jackson.map.ext.CoreXMLDeserializers$QNameDeserializer:
    javax.xml.namespace.QName _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.ext.CoreXMLSerializers -> org.codehaus.jackson.map.ext.CoreXMLSerializers:
    java.util.HashMap _serializers -> _serializers
    java.util.Collection provide() -> provide
org.codehaus.jackson.map.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer -> org.codehaus.jackson.map.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer:
    void serialize(javax.xml.datatype.XMLGregorianCalendar,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ext.DOMDeserializer -> org.codehaus.jackson.map.ext.DOMDeserializer:
    javax.xml.parsers.DocumentBuilderFactory _parserFactory -> _parserFactory
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    org.w3c.dom.Document parse(java.lang.String) -> parse
org.codehaus.jackson.map.ext.DOMDeserializer$DocumentDeserializer -> org.codehaus.jackson.map.ext.DOMDeserializer$DocumentDeserializer:
    org.w3c.dom.Document _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.ext.DOMDeserializer$NodeDeserializer -> org.codehaus.jackson.map.ext.DOMDeserializer$NodeDeserializer:
    org.w3c.dom.Node _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.ext.DOMSerializer -> org.codehaus.jackson.map.ext.DOMSerializer:
    org.w3c.dom.ls.DOMImplementationLS _domImpl -> _domImpl
    void serialize(org.w3c.dom.Node,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ext.JodaDeserializers -> org.codehaus.jackson.map.ext.JodaDeserializers:
    java.util.Collection provide() -> provide
org.codehaus.jackson.map.ext.JodaDeserializers$1 -> org.codehaus.jackson.map.ext.JodaDeserializers$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.map.ext.JodaDeserializers$DateMidnightDeserializer -> org.codehaus.jackson.map.ext.JodaDeserializers$DateMidnightDeserializer:
    org.joda.time.DateMidnight deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.ext.JodaDeserializers$DateTimeDeserializer -> org.codehaus.jackson.map.ext.JodaDeserializers$DateTimeDeserializer:
    org.joda.time.ReadableInstant deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.ext.JodaDeserializers$JodaDeserializer -> org.codehaus.jackson.map.ext.JodaDeserializers$JodaDeserializer:
    org.joda.time.format.DateTimeFormatter _localDateTimeFormat -> _localDateTimeFormat
    org.joda.time.DateTime parseLocal(org.codehaus.jackson.JsonParser) -> parseLocal
org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateDeserializer -> org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateDeserializer:
    org.joda.time.LocalDate deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateTimeDeserializer -> org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateTimeDeserializer:
    org.joda.time.LocalDateTime deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.ext.JodaDeserializers$PeriodDeserializer -> org.codehaus.jackson.map.ext.JodaDeserializers$PeriodDeserializer:
    org.joda.time.ReadablePeriod deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
    java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserialize
org.codehaus.jackson.map.ext.JodaSerializers -> org.codehaus.jackson.map.ext.JodaSerializers:
    java.util.HashMap _serializers -> _serializers
    java.util.Collection provide() -> provide
org.codehaus.jackson.map.ext.JodaSerializers$DateMidnightSerializer -> org.codehaus.jackson.map.ext.JodaSerializers$DateMidnightSerializer:
    void serialize(org.joda.time.DateMidnight,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ext.JodaSerializers$DateTimeSerializer -> org.codehaus.jackson.map.ext.JodaSerializers$DateTimeSerializer:
    void serialize(org.joda.time.DateTime,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer -> org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer:
    org.joda.time.format.DateTimeFormatter _localDateTimeFormat -> _localDateTimeFormat
    org.joda.time.format.DateTimeFormatter _localDateFormat -> _localDateFormat
    java.lang.String printLocalDateTime(org.joda.time.ReadablePartial) -> printLocalDateTime
    java.lang.String printLocalDate(org.joda.time.ReadablePartial) -> printLocalDate
    java.lang.String printLocalDate(org.joda.time.ReadableInstant) -> printLocalDate
org.codehaus.jackson.map.ext.JodaSerializers$LocalDateSerializer -> org.codehaus.jackson.map.ext.JodaSerializers$LocalDateSerializer:
    void serialize(org.joda.time.LocalDate,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ext.JodaSerializers$LocalDateTimeSerializer -> org.codehaus.jackson.map.ext.JodaSerializers$LocalDateTimeSerializer:
    void serialize(org.joda.time.LocalDateTime,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ext.OptionalHandlerFactory -> org.codehaus.jackson.map.ext.OptionalHandlerFactory:
    java.lang.String PACKAGE_PREFIX_JODA_DATETIME -> PACKAGE_PREFIX_JODA_DATETIME
    java.lang.String PACKAGE_PREFIX_JAVAX_XML -> PACKAGE_PREFIX_JAVAX_XML
    java.lang.String SERIALIZERS_FOR_JODA_DATETIME -> SERIALIZERS_FOR_JODA_DATETIME
    java.lang.String SERIALIZERS_FOR_JAVAX_XML -> SERIALIZERS_FOR_JAVAX_XML
    java.lang.String DESERIALIZERS_FOR_JODA_DATETIME -> DESERIALIZERS_FOR_JODA_DATETIME
    java.lang.String DESERIALIZERS_FOR_JAVAX_XML -> DESERIALIZERS_FOR_JAVAX_XML
    java.lang.String CLASS_NAME_DOM_NODE -> CLASS_NAME_DOM_NODE
    java.lang.String CLASS_NAME_DOM_DOCUMENT -> CLASS_NAME_DOM_DOCUMENT
    java.lang.String SERIALIZER_FOR_DOM_NODE -> SERIALIZER_FOR_DOM_NODE
    java.lang.String DESERIALIZER_FOR_DOM_DOCUMENT -> DESERIALIZER_FOR_DOM_DOCUMENT
    java.lang.String DESERIALIZER_FOR_DOM_NODE -> DESERIALIZER_FOR_DOM_NODE
    org.codehaus.jackson.map.ext.OptionalHandlerFactory instance -> instance
    org.codehaus.jackson.map.JsonSerializer findSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType) -> findSerializer
    org.codehaus.jackson.map.JsonDeserializer findDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider) -> findDeserializer
    java.lang.Object instantiate(java.lang.String) -> instantiate
    boolean doesImplement(java.lang.Class,java.lang.String) -> doesImplement
    boolean hasInterface(java.lang.Class,java.lang.String) -> hasInterface
    boolean hasSupertypeStartingWith(java.lang.Class,java.lang.String) -> hasSupertypeStartingWith
    boolean hasInterfaceStartingWith(java.lang.Class,java.lang.String) -> hasInterfaceStartingWith
org.codehaus.jackson.map.introspect.Annotated -> org.codehaus.jackson.map.introspect.Annotated:
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    boolean hasAnnotation(java.lang.Class) -> hasAnnotation
    org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
    org.codehaus.jackson.map.introspect.Annotated withFallBackAnnotationsFrom(org.codehaus.jackson.map.introspect.Annotated) -> withFallBackAnnotationsFrom
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    boolean isPublic() -> isPublic
    java.lang.String getName() -> getName
    org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings) -> getType
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    org.codehaus.jackson.map.introspect.AnnotationMap getAllAnnotations() -> getAllAnnotations
org.codehaus.jackson.map.introspect.AnnotatedClass -> org.codehaus.jackson.map.introspect.AnnotatedClass:
    org.codehaus.jackson.map.introspect.AnnotationMap[] NO_ANNOTATION_MAPS -> NO_ANNOTATION_MAPS
    java.lang.Class _class -> _class
    java.util.List _superTypes -> _superTypes
    org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    org.codehaus.jackson.map.ClassIntrospector$MixInResolver _mixInResolver -> _mixInResolver
    java.lang.Class _primaryMixIn -> _primaryMixIn
    org.codehaus.jackson.map.introspect.AnnotationMap _classAnnotations -> _classAnnotations
    org.codehaus.jackson.map.introspect.AnnotatedConstructor _defaultConstructor -> _defaultConstructor
    java.util.List _constructors -> _constructors
    java.util.List _creatorMethods -> _creatorMethods
    org.codehaus.jackson.map.introspect.AnnotatedMethodMap _memberMethods -> _memberMethods
    java.util.List _fields -> _fields
    org.codehaus.jackson.map.introspect.AnnotatedClass withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
    org.codehaus.jackson.map.introspect.AnnotatedClass construct(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> construct
    org.codehaus.jackson.map.introspect.AnnotatedClass constructWithoutSuperTypes(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> constructWithoutSuperTypes
    java.lang.Class getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    org.codehaus.jackson.map.introspect.AnnotationMap getAllAnnotations() -> getAllAnnotations
    org.codehaus.jackson.map.util.Annotations getAnnotations() -> getAnnotations
    boolean hasAnnotations() -> hasAnnotations
    org.codehaus.jackson.map.introspect.AnnotatedConstructor getDefaultConstructor() -> getDefaultConstructor
    java.util.List getConstructors() -> getConstructors
    java.util.List getStaticMethods() -> getStaticMethods
    java.lang.Iterable memberMethods() -> memberMethods
    int getMemberMethodCount() -> getMemberMethodCount
    org.codehaus.jackson.map.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[]) -> findMethod
    int getFieldCount() -> getFieldCount
    java.lang.Iterable fields() -> fields
    void resolveClassAnnotations() -> resolveClassAnnotations
    void resolveCreators(boolean) -> resolveCreators
    void resolveMemberMethods(org.codehaus.jackson.map.introspect.MethodFilter) -> resolveMemberMethods
    void resolveFields() -> resolveFields
    void resolveMemberMethods(org.codehaus.jackson.map.introspect.MethodFilter,boolean) -> resolveMemberMethods
    void resolveFields(boolean) -> resolveFields
    void _addClassMixIns(org.codehaus.jackson.map.introspect.AnnotationMap,java.lang.Class) -> _addClassMixIns
    void _addClassMixIns(org.codehaus.jackson.map.introspect.AnnotationMap,java.lang.Class,java.lang.Class) -> _addClassMixIns
    void _addConstructorMixIns(java.lang.Class) -> _addConstructorMixIns
    void _addFactoryMixIns(java.lang.Class) -> _addFactoryMixIns
    void _addMemberMethods(java.lang.Class,org.codehaus.jackson.map.introspect.MethodFilter,org.codehaus.jackson.map.introspect.AnnotatedMethodMap,java.lang.Class,org.codehaus.jackson.map.introspect.AnnotatedMethodMap) -> _addMemberMethods
    void _addMethodMixIns(java.lang.Class,org.codehaus.jackson.map.introspect.MethodFilter,org.codehaus.jackson.map.introspect.AnnotatedMethodMap,java.lang.Class,org.codehaus.jackson.map.introspect.AnnotatedMethodMap) -> _addMethodMixIns
    void _addFields(java.util.Map,java.lang.Class) -> _addFields
    void _addFieldMixIns(java.lang.Class,java.lang.Class,java.util.Map) -> _addFieldMixIns
    org.codehaus.jackson.map.introspect.AnnotatedMethod _constructMethod(java.lang.reflect.Method) -> _constructMethod
    org.codehaus.jackson.map.introspect.AnnotatedConstructor _constructConstructor(java.lang.reflect.Constructor,boolean) -> _constructConstructor
    org.codehaus.jackson.map.introspect.AnnotatedMethod _constructCreatorMethod(java.lang.reflect.Method) -> _constructCreatorMethod
    org.codehaus.jackson.map.introspect.AnnotatedField _constructField(java.lang.reflect.Field) -> _constructField
    org.codehaus.jackson.map.introspect.AnnotationMap[] _collectRelevantAnnotations(java.lang.annotation.Annotation[][]) -> _collectRelevantAnnotations
    org.codehaus.jackson.map.introspect.AnnotationMap _collectRelevantAnnotations(java.lang.annotation.Annotation[]) -> _collectRelevantAnnotations
    org.codehaus.jackson.map.introspect.AnnotationMap _emptyAnnotationMap() -> _emptyAnnotationMap
    org.codehaus.jackson.map.introspect.AnnotationMap[] _emptyAnnotationMaps(int) -> _emptyAnnotationMaps
    boolean _isIncludableMethod(java.lang.reflect.Method,org.codehaus.jackson.map.introspect.MethodFilter) -> _isIncludableMethod
    boolean _isIncludableField(java.lang.reflect.Field) -> _isIncludableField
    void _addMixOvers(java.lang.reflect.Constructor,org.codehaus.jackson.map.introspect.AnnotatedConstructor,boolean) -> _addMixOvers
    void _addMixOvers(java.lang.reflect.Method,org.codehaus.jackson.map.introspect.AnnotatedMethod,boolean) -> _addMixOvers
    void _addMixUnders(java.lang.reflect.Method,org.codehaus.jackson.map.introspect.AnnotatedMethod) -> _addMixUnders
    java.lang.String toString() -> toString
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
org.codehaus.jackson.map.introspect.AnnotatedConstructor -> org.codehaus.jackson.map.introspect.AnnotatedConstructor:
    java.lang.reflect.Constructor _constructor -> _constructor
    org.codehaus.jackson.map.introspect.AnnotatedConstructor withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
    java.lang.reflect.Constructor getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings) -> getType
    int getParameterCount() -> getParameterCount
    java.lang.Class getParameterClass(int) -> getParameterClass
    java.lang.reflect.Type getParameterType(int) -> getParameterType
    java.lang.Object call() -> call
    java.lang.Object call(java.lang.Object[]) -> call
    java.lang.Object call1(java.lang.Object) -> call1
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.String toString() -> toString
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
org.codehaus.jackson.map.introspect.AnnotatedField -> org.codehaus.jackson.map.introspect.AnnotatedField:
    java.lang.reflect.Field _field -> _field
    org.codehaus.jackson.map.introspect.AnnotatedField withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
    void addOrOverride(java.lang.annotation.Annotation) -> addOrOverride
    java.lang.reflect.Field getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.String getFullName() -> getFullName
    int getAnnotationCount() -> getAnnotationCount
    java.lang.String toString() -> toString
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
org.codehaus.jackson.map.introspect.AnnotatedMember -> org.codehaus.jackson.map.introspect.AnnotatedMember:
    org.codehaus.jackson.map.introspect.AnnotationMap _annotations -> _annotations
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    org.codehaus.jackson.map.introspect.AnnotationMap getAllAnnotations() -> getAllAnnotations
    void fixAccess() -> fixAccess
    void setValue(java.lang.Object,java.lang.Object) -> setValue
org.codehaus.jackson.map.introspect.AnnotatedMethod -> org.codehaus.jackson.map.introspect.AnnotatedMethod:
    java.lang.reflect.Method _method -> _method
    java.lang.Class[] _paramTypes -> _paramTypes
    org.codehaus.jackson.map.introspect.AnnotatedMethod withMethod(java.lang.reflect.Method) -> withMethod
    org.codehaus.jackson.map.introspect.AnnotatedMethod withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
    java.lang.reflect.Method getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings) -> getType
    java.lang.Object call() -> call
    java.lang.Object call(java.lang.Object[]) -> call
    java.lang.Object call1(java.lang.Object) -> call1
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    int getParameterCount() -> getParameterCount
    java.lang.reflect.Type[] getParameterTypes() -> getParameterTypes
    java.lang.Class getParameterClass(int) -> getParameterClass
    java.lang.reflect.Type getParameterType(int) -> getParameterType
    java.lang.Class[] getParameterClasses() -> getParameterClasses
    java.lang.String getFullName() -> getFullName
    java.lang.String toString() -> toString
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
org.codehaus.jackson.map.introspect.AnnotatedMethodMap -> org.codehaus.jackson.map.introspect.AnnotatedMethodMap:
    java.util.LinkedHashMap _methods -> _methods
    void add(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> add
    org.codehaus.jackson.map.introspect.AnnotatedMethod remove(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> remove
    org.codehaus.jackson.map.introspect.AnnotatedMethod remove(java.lang.reflect.Method) -> remove
    boolean isEmpty() -> isEmpty
    int size() -> size
    org.codehaus.jackson.map.introspect.AnnotatedMethod find(java.lang.String,java.lang.Class[]) -> find
    org.codehaus.jackson.map.introspect.AnnotatedMethod find(java.lang.reflect.Method) -> find
    java.util.Iterator iterator() -> iterator
org.codehaus.jackson.map.introspect.AnnotatedParameter -> org.codehaus.jackson.map.introspect.AnnotatedParameter:
    org.codehaus.jackson.map.introspect.AnnotatedWithParams _owner -> _owner
    java.lang.reflect.Type _type -> _type
    int _index -> _index
    org.codehaus.jackson.map.introspect.AnnotatedParameter withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
    void addOrOverride(java.lang.annotation.Annotation) -> addOrOverride
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.reflect.Type getParameterType() -> getParameterType
    org.codehaus.jackson.map.introspect.AnnotatedWithParams getOwner() -> getOwner
    int getIndex() -> getIndex
    java.lang.String toString() -> toString
    org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap) -> withAnnotations
org.codehaus.jackson.map.introspect.AnnotatedWithParams -> org.codehaus.jackson.map.introspect.AnnotatedWithParams:
    org.codehaus.jackson.map.introspect.AnnotationMap[] _paramAnnotations -> _paramAnnotations
    void addOrOverride(java.lang.annotation.Annotation) -> addOrOverride
    void addOrOverrideParam(int,java.lang.annotation.Annotation) -> addOrOverrideParam
    void addIfNotPresent(java.lang.annotation.Annotation) -> addIfNotPresent
    org.codehaus.jackson.map.introspect.AnnotatedParameter replaceParameterAnnotations(int,org.codehaus.jackson.map.introspect.AnnotationMap) -> replaceParameterAnnotations
    org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings,java.lang.reflect.TypeVariable[]) -> getType
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    org.codehaus.jackson.map.introspect.AnnotationMap getParameterAnnotations(int) -> getParameterAnnotations
    org.codehaus.jackson.map.introspect.AnnotatedParameter getParameter(int) -> getParameter
    int getParameterCount() -> getParameterCount
    java.lang.Class getParameterClass(int) -> getParameterClass
    java.lang.reflect.Type getParameterType(int) -> getParameterType
    org.codehaus.jackson.type.JavaType resolveParameterType(int,org.codehaus.jackson.map.type.TypeBindings) -> resolveParameterType
    int getAnnotationCount() -> getAnnotationCount
    java.lang.Object call() -> call
    java.lang.Object call(java.lang.Object[]) -> call
    java.lang.Object call1(java.lang.Object) -> call1
org.codehaus.jackson.map.introspect.AnnotationMap -> org.codehaus.jackson.map.introspect.AnnotationMap:
    java.util.HashMap _annotations -> _annotations
    java.lang.annotation.Annotation get(java.lang.Class) -> get
    org.codehaus.jackson.map.introspect.AnnotationMap merge(org.codehaus.jackson.map.introspect.AnnotationMap,org.codehaus.jackson.map.introspect.AnnotationMap) -> merge
    int size() -> size
    void addIfNotPresent(java.lang.annotation.Annotation) -> addIfNotPresent
    void add(java.lang.annotation.Annotation) -> add
    java.lang.String toString() -> toString
    void _add(java.lang.annotation.Annotation) -> _add
org.codehaus.jackson.map.introspect.BasicBeanDescription -> org.codehaus.jackson.map.introspect.BasicBeanDescription:
    org.codehaus.jackson.map.MapperConfig _config -> _config
    org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    org.codehaus.jackson.map.introspect.AnnotatedClass _classInfo -> _classInfo
    org.codehaus.jackson.map.type.TypeBindings _bindings -> _bindings
    java.util.List _properties -> _properties
    org.codehaus.jackson.map.introspect.AnnotatedMethod _anySetterMethod -> _anySetterMethod
    java.util.Map _injectables -> _injectables
    java.util.Set _ignoredPropertyNames -> _ignoredPropertyNames
    java.util.Set _ignoredPropertyNamesForDeser -> _ignoredPropertyNamesForDeser
    org.codehaus.jackson.map.introspect.AnnotatedMethod _jsonValueMethod -> _jsonValueMethod
    org.codehaus.jackson.map.introspect.AnnotatedMethod _anyGetterMethod -> _anyGetterMethod
    org.codehaus.jackson.map.introspect.BasicBeanDescription forDeserialization(org.codehaus.jackson.map.introspect.POJOPropertiesCollector) -> forDeserialization
    org.codehaus.jackson.map.introspect.BasicBeanDescription forSerialization(org.codehaus.jackson.map.introspect.POJOPropertiesCollector) -> forSerialization
    org.codehaus.jackson.map.introspect.BasicBeanDescription forOtherUse(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedClass) -> forOtherUse
    org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo() -> getClassInfo
    java.util.List findProperties() -> findProperties
    org.codehaus.jackson.map.introspect.AnnotatedMethod findJsonValueMethod() -> findJsonValueMethod
    java.util.Set getIgnoredPropertyNames() -> getIgnoredPropertyNames
    java.util.Set getIgnoredPropertyNamesForDeser() -> getIgnoredPropertyNamesForDeser
    boolean hasKnownClassAnnotations() -> hasKnownClassAnnotations
    org.codehaus.jackson.map.util.Annotations getClassAnnotations() -> getClassAnnotations
    org.codehaus.jackson.map.type.TypeBindings bindingsForBeanType() -> bindingsForBeanType
    org.codehaus.jackson.type.JavaType resolveType(java.lang.reflect.Type) -> resolveType
    org.codehaus.jackson.map.introspect.AnnotatedConstructor findDefaultConstructor() -> findDefaultConstructor
    org.codehaus.jackson.map.introspect.AnnotatedMethod findAnySetter() -> findAnySetter
    java.util.Map findInjectables() -> findInjectables
    java.util.List getConstructors() -> getConstructors
    org.codehaus.jackson.map.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[]) -> findMethod
    java.lang.Object instantiateBean(boolean) -> instantiateBean
    java.util.List getFactoryMethods() -> getFactoryMethods
    java.lang.reflect.Constructor findSingleArgConstructor(java.lang.Class[]) -> findSingleArgConstructor
    java.lang.reflect.Method findFactoryMethod(java.lang.Class[]) -> findFactoryMethod
    boolean isFactoryMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isFactoryMethod
    java.util.List findCreatorPropertyNames() -> findCreatorPropertyNames
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion) -> findSerializationInclusion
    org.codehaus.jackson.map.introspect.AnnotatedMethod findAnyGetter() -> findAnyGetter
    java.util.Map findBackReferenceProperties() -> findBackReferenceProperties
    java.util.LinkedHashMap _findPropertyFields(java.util.Collection,boolean) -> _findPropertyFields
    java.util.LinkedHashMap findGetters(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection) -> findGetters
    java.util.LinkedHashMap findSetters(org.codehaus.jackson.map.introspect.VisibilityChecker) -> findSetters
    java.util.LinkedHashMap findSerializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection) -> findSerializableFields
    java.util.LinkedHashMap findDeserializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection) -> findDeserializableFields
    java.util.Map findSerializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection) -> findSerializableFields
org.codehaus.jackson.map.introspect.BasicClassIntrospector -> org.codehaus.jackson.map.introspect.BasicClassIntrospector:
    org.codehaus.jackson.map.introspect.BasicBeanDescription STRING_DESC -> STRING_DESC
    org.codehaus.jackson.map.introspect.BasicBeanDescription BOOLEAN_DESC -> BOOLEAN_DESC
    org.codehaus.jackson.map.introspect.BasicBeanDescription INT_DESC -> INT_DESC
    org.codehaus.jackson.map.introspect.BasicBeanDescription LONG_DESC -> LONG_DESC
    org.codehaus.jackson.map.introspect.BasicClassIntrospector$GetterMethodFilter DEFAULT_GETTER_FILTER -> DEFAULT_GETTER_FILTER
    org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterMethodFilter DEFAULT_SETTER_FILTER -> DEFAULT_SETTER_FILTER
    org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterAndGetterMethodFilter DEFAULT_SETTER_AND_GETTER_FILTER -> DEFAULT_SETTER_AND_GETTER_FILTER
    org.codehaus.jackson.map.introspect.MethodFilter MINIMAL_FILTER -> MINIMAL_FILTER
    org.codehaus.jackson.map.introspect.BasicClassIntrospector instance -> instance
    org.codehaus.jackson.map.introspect.BasicBeanDescription forSerialization(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forSerialization
    org.codehaus.jackson.map.introspect.BasicBeanDescription forDeserialization(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forDeserialization
    org.codehaus.jackson.map.introspect.BasicBeanDescription forCreation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forCreation
    org.codehaus.jackson.map.introspect.BasicBeanDescription forClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forClassAnnotations
    org.codehaus.jackson.map.introspect.BasicBeanDescription forDirectClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forDirectClassAnnotations
    org.codehaus.jackson.map.introspect.POJOPropertiesCollector collectProperties(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver,boolean) -> collectProperties
    org.codehaus.jackson.map.introspect.POJOPropertiesCollector constructPropertyCollector(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType,boolean) -> constructPropertyCollector
    org.codehaus.jackson.map.introspect.AnnotatedClass classWithCreators(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> classWithCreators
    org.codehaus.jackson.map.introspect.BasicBeanDescription _findCachedDesc(org.codehaus.jackson.type.JavaType) -> _findCachedDesc
    org.codehaus.jackson.map.introspect.MethodFilter getSerializationMethodFilter(org.codehaus.jackson.map.SerializationConfig) -> getSerializationMethodFilter
    org.codehaus.jackson.map.introspect.MethodFilter getDeserializationMethodFilter(org.codehaus.jackson.map.DeserializationConfig) -> getDeserializationMethodFilter
    org.codehaus.jackson.map.BeanDescription forDirectClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forDirectClassAnnotations
    org.codehaus.jackson.map.BeanDescription forClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forClassAnnotations
    org.codehaus.jackson.map.BeanDescription forCreation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forCreation
    org.codehaus.jackson.map.BeanDescription forDeserialization(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forDeserialization
    org.codehaus.jackson.map.BeanDescription forSerialization(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver) -> forSerialization
org.codehaus.jackson.map.introspect.BasicClassIntrospector$1 -> org.codehaus.jackson.map.introspect.BasicClassIntrospector$1:
org.codehaus.jackson.map.introspect.BasicClassIntrospector$GetterMethodFilter -> org.codehaus.jackson.map.introspect.BasicClassIntrospector$GetterMethodFilter:
    boolean includeMethod(java.lang.reflect.Method) -> includeMethod
org.codehaus.jackson.map.introspect.BasicClassIntrospector$MinimalMethodFilter -> org.codehaus.jackson.map.introspect.BasicClassIntrospector$MinimalMethodFilter:
    boolean includeMethod(java.lang.reflect.Method) -> includeMethod
org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterAndGetterMethodFilter -> org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterAndGetterMethodFilter:
    boolean includeMethod(java.lang.reflect.Method) -> includeMethod
org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterMethodFilter -> org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterMethodFilter:
    boolean includeMethod(java.lang.reflect.Method) -> includeMethod
org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector -> org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector:
    boolean isHandled(java.lang.annotation.Annotation) -> isHandled
    java.lang.String findEnumValue(java.lang.Enum) -> findEnumValue
    java.lang.Boolean findCachability(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findCachability
    java.lang.String findRootName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findRootName
    java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findPropertiesToIgnore
    java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findIgnoreUnknownProperties
    java.lang.Boolean isIgnorableType(org.codehaus.jackson.map.introspect.AnnotatedClass) -> isIgnorableType
    java.lang.Object findFilterId(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findFilterId
    org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker) -> findAutoDetectVisibility
    org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty findReferenceType(org.codehaus.jackson.map.introspect.AnnotatedMember) -> findReferenceType
    java.lang.Boolean shouldUnwrapProperty(org.codehaus.jackson.map.introspect.AnnotatedMember) -> shouldUnwrapProperty
    boolean hasIgnoreMarker(org.codehaus.jackson.map.introspect.AnnotatedMember) -> hasIgnoreMarker
    java.lang.Object findInjectableValueId(org.codehaus.jackson.map.introspect.AnnotatedMember) -> findInjectableValueId
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType) -> findTypeResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType) -> findPropertyTypeResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType) -> findPropertyContentTypeResolver
    java.util.List findSubtypes(org.codehaus.jackson.map.introspect.Annotated) -> findSubtypes
    java.lang.String findTypeName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findTypeName
    boolean isIgnorableMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isIgnorableMethod
    boolean isIgnorableConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor) -> isIgnorableConstructor
    boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField) -> isIgnorableField
    java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findSerializer
    java.lang.Class findKeySerializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeySerializer
    java.lang.Class findContentSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentSerializer
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion) -> findSerializationInclusion
    java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationType
    java.lang.Class findSerializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> findSerializationKeyType
    java.lang.Class findSerializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> findSerializationContentType
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationTyping
    java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationViews
    java.lang.String[] findSerializationPropertyOrder(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    java.lang.Boolean findSerializationSortAlphabetically(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationSortAlphabetically
    java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findGettablePropertyName
    boolean hasAsValueAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findSerializablePropertyName
    java.lang.Class findDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findDeserializer
    java.lang.Class findKeyDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeyDeserializer
    java.lang.Class findContentDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentDeserializer
    java.lang.Class findDeserializationType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationType
    java.lang.Class findDeserializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationKeyType
    java.lang.Class findDeserializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationContentType
    java.lang.Object findValueInstantiator(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findValueInstantiator
    java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findSettablePropertyName
    boolean hasAnySetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAnySetterAnnotation
    boolean hasAnyGetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAnyGetterAnnotation
    boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated) -> hasCreatorAnnotation
    java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findDeserializablePropertyName
    java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter) -> findPropertyNameForParam
    boolean _isIgnorable(org.codehaus.jackson.map.introspect.Annotated) -> _isIgnorable
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder _findTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> _findTypeResolver
    org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder _constructStdTypeResolverBuilder() -> _constructStdTypeResolverBuilder
    org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder _constructNoTypeResolverBuilder() -> _constructNoTypeResolverBuilder
    java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findDeserializer
org.codehaus.jackson.map.introspect.MemberKey -> org.codehaus.jackson.map.introspect.MemberKey:
    java.lang.Class[] NO_CLASSES -> NO_CLASSES
    java.lang.String _name -> _name
    java.lang.Class[] _argTypes -> _argTypes
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.introspect.MethodFilter -> org.codehaus.jackson.map.introspect.MethodFilter:
    boolean includeMethod(java.lang.reflect.Method) -> includeMethod
org.codehaus.jackson.map.introspect.NopAnnotationIntrospector -> org.codehaus.jackson.map.introspect.NopAnnotationIntrospector:
    org.codehaus.jackson.map.introspect.NopAnnotationIntrospector instance -> instance
    boolean isHandled(java.lang.annotation.Annotation) -> isHandled
    java.lang.String findEnumValue(java.lang.Enum) -> findEnumValue
    java.lang.String findRootName(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findRootName
    java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findPropertiesToIgnore
    java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findIgnoreUnknownProperties
    boolean hasIgnoreMarker(org.codehaus.jackson.map.introspect.AnnotatedMember) -> hasIgnoreMarker
    boolean isIgnorableConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor) -> isIgnorableConstructor
    boolean isIgnorableMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isIgnorableMethod
    boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField) -> isIgnorableField
    java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated) -> findSerializer
    java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationType
    org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationTyping
    java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated) -> findSerializationViews
    java.lang.String[] findSerializationPropertyOrder(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    java.lang.Boolean findSerializationSortAlphabetically(org.codehaus.jackson.map.introspect.AnnotatedClass) -> findSerializationSortAlphabetically
    java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findGettablePropertyName
    boolean hasAsValueAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findDeserializablePropertyName
    java.lang.Class findDeserializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationContentType
    java.lang.Class findDeserializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationKeyType
    java.lang.Class findDeserializationType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String) -> findDeserializationType
    java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findDeserializer
    java.lang.Class findKeyDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findKeyDeserializer
    java.lang.Class findContentDeserializer(org.codehaus.jackson.map.introspect.Annotated) -> findContentDeserializer
    java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter) -> findPropertyNameForParam
    java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField) -> findSerializablePropertyName
    java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> findSettablePropertyName
org.codehaus.jackson.map.introspect.POJOPropertiesCollector -> org.codehaus.jackson.map.introspect.POJOPropertiesCollector:
    org.codehaus.jackson.map.MapperConfig _config -> _config
    boolean _forSerialization -> _forSerialization
    org.codehaus.jackson.type.JavaType _type -> _type
    org.codehaus.jackson.map.introspect.AnnotatedClass _classDef -> _classDef
    org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker -> _visibilityChecker
    org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    java.util.LinkedHashMap _properties -> _properties
    java.util.LinkedList _creatorProperties -> _creatorProperties
    java.util.LinkedList _anyGetters -> _anyGetters
    java.util.LinkedList _anySetters -> _anySetters
    java.util.LinkedList _jsonValueGetters -> _jsonValueGetters
    java.util.Set _ignoredPropertyNames -> _ignoredPropertyNames
    java.util.Set _ignoredPropertyNamesForDeser -> _ignoredPropertyNamesForDeser
    java.util.LinkedHashMap _injectables -> _injectables
    org.codehaus.jackson.map.MapperConfig getConfig() -> getConfig
    org.codehaus.jackson.type.JavaType getType() -> getType
    org.codehaus.jackson.map.introspect.AnnotatedClass getClassDef() -> getClassDef
    org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    java.util.List getProperties() -> getProperties
    java.util.Map getInjectables() -> getInjectables
    org.codehaus.jackson.map.introspect.AnnotatedMethod getJsonValueMethod() -> getJsonValueMethod
    org.codehaus.jackson.map.introspect.AnnotatedMethod getAnyGetterMethod() -> getAnyGetterMethod
    org.codehaus.jackson.map.introspect.AnnotatedMethod getAnySetterMethod() -> getAnySetterMethod
    java.util.Set getIgnoredPropertyNames() -> getIgnoredPropertyNames
    java.util.Set getIgnoredPropertyNamesForDeser() -> getIgnoredPropertyNamesForDeser
    java.util.Map getPropertyMap() -> getPropertyMap
    org.codehaus.jackson.map.introspect.POJOPropertiesCollector collect() -> collect
    void _sortProperties() -> _sortProperties
    void _addFields() -> _addFields
    void _addCreators() -> _addCreators
    void _addMethods() -> _addMethods
    void _addInjectables() -> _addInjectables
    void _doAddInjectable(java.lang.Object,org.codehaus.jackson.map.introspect.AnnotatedMember) -> _doAddInjectable
    void _removeUnwantedProperties() -> _removeUnwantedProperties
    void _addIgnored(org.codehaus.jackson.map.introspect.POJOPropertyBuilder) -> _addIgnored
    void _renameProperties() -> _renameProperties
    void _renameUsing(org.codehaus.jackson.map.PropertyNamingStrategy) -> _renameUsing
    void reportProblem(java.lang.String) -> reportProblem
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder _property(java.lang.String) -> _property
    java.util.Set addToSet(java.util.Set,java.lang.String) -> addToSet
org.codehaus.jackson.map.introspect.POJOPropertyBuilder -> org.codehaus.jackson.map.introspect.POJOPropertyBuilder:
    java.lang.String _name -> _name
    java.lang.String _internalName -> _internalName
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _fields -> _fields
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _ctorParameters -> _ctorParameters
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _getters -> _getters
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _setters -> _setters
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder withName(java.lang.String) -> withName
    int compareTo(org.codehaus.jackson.map.introspect.POJOPropertyBuilder) -> compareTo
    java.lang.String getName() -> getName
    java.lang.String getInternalName() -> getInternalName
    boolean isExplicitlyIncluded() -> isExplicitlyIncluded
    boolean hasGetter() -> hasGetter
    boolean hasSetter() -> hasSetter
    boolean hasField() -> hasField
    boolean hasConstructorParameter() -> hasConstructorParameter
    org.codehaus.jackson.map.introspect.AnnotatedMember getAccessor() -> getAccessor
    org.codehaus.jackson.map.introspect.AnnotatedMember getMutator() -> getMutator
    boolean couldSerialize() -> couldSerialize
    org.codehaus.jackson.map.introspect.AnnotatedMethod getGetter() -> getGetter
    org.codehaus.jackson.map.introspect.AnnotatedMethod getSetter() -> getSetter
    org.codehaus.jackson.map.introspect.AnnotatedField getField() -> getField
    org.codehaus.jackson.map.introspect.AnnotatedParameter getConstructorParameter() -> getConstructorParameter
    void addField(org.codehaus.jackson.map.introspect.AnnotatedField,java.lang.String,boolean,boolean) -> addField
    void addCtor(org.codehaus.jackson.map.introspect.AnnotatedParameter,java.lang.String,boolean,boolean) -> addCtor
    void addGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String,boolean,boolean) -> addGetter
    void addSetter(org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String,boolean,boolean) -> addSetter
    void addAll(org.codehaus.jackson.map.introspect.POJOPropertyBuilder) -> addAll
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node merge(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> merge
    void removeIgnored() -> removeIgnored
    void removeNonVisible() -> removeNonVisible
    void trimByVisibility() -> trimByVisibility
    void mergeAnnotations(boolean) -> mergeAnnotations
    org.codehaus.jackson.map.introspect.AnnotationMap _mergeAnnotations(int,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node[]) -> _mergeAnnotations
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _removeIgnored(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> _removeIgnored
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _removeNonVisible(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> _removeNonVisible
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node _trimByVisibility(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> _trimByVisibility
    boolean anyExplicitNames() -> anyExplicitNames
    boolean _anyExplicitNames(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> _anyExplicitNames
    boolean anyVisible() -> anyVisible
    boolean _anyVisible(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> _anyVisible
    boolean anyIgnorals() -> anyIgnorals
    boolean anyDeserializeIgnorals() -> anyDeserializeIgnorals
    boolean anySerializeIgnorals() -> anySerializeIgnorals
    boolean _anyIgnorals(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> _anyIgnorals
    java.lang.String findNewName() -> findNewName
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node findRenamed(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> findRenamed
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node -> org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node:
    java.lang.Object value -> value
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next -> next
    java.lang.String explicitName -> explicitName
    boolean isVisible -> isVisible
    boolean isMarkedIgnored -> isMarkedIgnored
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withValue(java.lang.Object) -> withValue
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withNext(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> withNext
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withoutIgnored() -> withoutIgnored
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withoutNonVisible() -> withoutNonVisible
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node append(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> append
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node trimByVisibility() -> trimByVisibility
    java.lang.String toString() -> toString
    org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node access$000(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node) -> access$000
org.codehaus.jackson.map.introspect.VisibilityChecker -> org.codehaus.jackson.map.introspect.VisibilityChecker:
    org.codehaus.jackson.map.introspect.VisibilityChecker with(org.codehaus.jackson.annotate.JsonAutoDetect) -> with
    org.codehaus.jackson.map.introspect.VisibilityChecker with(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> with
    org.codehaus.jackson.map.introspect.VisibilityChecker withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withGetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withIsGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withSetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withSetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withCreatorVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withCreatorVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withFieldVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withFieldVisibility
    boolean isGetterVisible(java.lang.reflect.Method) -> isGetterVisible
    boolean isGetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isGetterVisible
    boolean isIsGetterVisible(java.lang.reflect.Method) -> isIsGetterVisible
    boolean isIsGetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isIsGetterVisible
    boolean isSetterVisible(java.lang.reflect.Method) -> isSetterVisible
    boolean isSetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isSetterVisible
    boolean isCreatorVisible(java.lang.reflect.Member) -> isCreatorVisible
    boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember) -> isCreatorVisible
    boolean isFieldVisible(java.lang.reflect.Field) -> isFieldVisible
    boolean isFieldVisible(org.codehaus.jackson.map.introspect.AnnotatedField) -> isFieldVisible
org.codehaus.jackson.map.introspect.VisibilityChecker$1 -> org.codehaus.jackson.map.introspect.VisibilityChecker$1:
    int[] $SwitchMap$org$codehaus$jackson$annotate$JsonMethod -> $SwitchMap$org$codehaus$jackson$annotate$JsonMethod
org.codehaus.jackson.map.introspect.VisibilityChecker$Std -> org.codehaus.jackson.map.introspect.VisibilityChecker$Std:
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std DEFAULT -> DEFAULT
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility _getterMinLevel -> _getterMinLevel
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility _isGetterMinLevel -> _isGetterMinLevel
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility _setterMinLevel -> _setterMinLevel
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility _creatorMinLevel -> _creatorMinLevel
    org.codehaus.jackson.annotate.JsonAutoDetect$Visibility _fieldMinLevel -> _fieldMinLevel
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std defaultInstance() -> defaultInstance
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std with(org.codehaus.jackson.annotate.JsonAutoDetect) -> with
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std with(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> with
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std withGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withGetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std withIsGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std withSetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withSetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std withCreatorVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withCreatorVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker$Std withFieldVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withFieldVisibility
    boolean isCreatorVisible(java.lang.reflect.Member) -> isCreatorVisible
    boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember) -> isCreatorVisible
    boolean isFieldVisible(java.lang.reflect.Field) -> isFieldVisible
    boolean isFieldVisible(org.codehaus.jackson.map.introspect.AnnotatedField) -> isFieldVisible
    boolean isGetterVisible(java.lang.reflect.Method) -> isGetterVisible
    boolean isGetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isGetterVisible
    boolean isIsGetterVisible(java.lang.reflect.Method) -> isIsGetterVisible
    boolean isIsGetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isIsGetterVisible
    boolean isSetterVisible(java.lang.reflect.Method) -> isSetterVisible
    boolean isSetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isSetterVisible
    boolean hasMethod(org.codehaus.jackson.annotate.JsonMethod[],org.codehaus.jackson.annotate.JsonMethod) -> hasMethod
    java.lang.String toString() -> toString
    org.codehaus.jackson.map.introspect.VisibilityChecker withFieldVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withFieldVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withCreatorVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withCreatorVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withSetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withSetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withIsGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withGetterVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> withVisibility
    org.codehaus.jackson.map.introspect.VisibilityChecker with(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility) -> with
    org.codehaus.jackson.map.introspect.VisibilityChecker with(org.codehaus.jackson.annotate.JsonAutoDetect) -> with
org.codehaus.jackson.map.jsontype.NamedType -> org.codehaus.jackson.map.jsontype.NamedType:
    java.lang.Class _class -> _class
    int _hashCode -> _hashCode
    java.lang.String _name -> _name
    java.lang.Class getType() -> getType
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    boolean hasName() -> hasName
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.codehaus.jackson.map.jsontype.SubtypeResolver -> org.codehaus.jackson.map.jsontype.SubtypeResolver:
    void registerSubtypes(org.codehaus.jackson.map.jsontype.NamedType[]) -> registerSubtypes
    void registerSubtypes(java.lang.Class[]) -> registerSubtypes
    java.util.Collection collectAndResolveSubtypes(org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.AnnotationIntrospector) -> collectAndResolveSubtypes
    java.util.Collection collectAndResolveSubtypes(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.AnnotationIntrospector) -> collectAndResolveSubtypes
org.codehaus.jackson.map.jsontype.TypeIdResolver -> org.codehaus.jackson.map.jsontype.TypeIdResolver:
    void init(org.codehaus.jackson.type.JavaType) -> init
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    org.codehaus.jackson.type.JavaType typeFromId(java.lang.String) -> typeFromId
    org.codehaus.jackson.annotate.JsonTypeInfo$Id getMechanism() -> getMechanism
org.codehaus.jackson.map.jsontype.TypeResolverBuilder -> org.codehaus.jackson.map.jsontype.TypeResolverBuilder:
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    org.codehaus.jackson.map.TypeSerializer buildTypeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty) -> buildTypeSerializer
    org.codehaus.jackson.map.TypeDeserializer buildTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty) -> buildTypeDeserializer
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder init(org.codehaus.jackson.annotate.JsonTypeInfo$Id,org.codehaus.jackson.map.jsontype.TypeIdResolver) -> init
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder inclusion(org.codehaus.jackson.annotate.JsonTypeInfo$As) -> inclusion
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder typeProperty(java.lang.String) -> typeProperty
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder defaultImpl(java.lang.Class) -> defaultImpl
org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer -> org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer:
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.Object deserializeTypedFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromArray
    java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object deserializeTypedFromScalar(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromScalar
    java.lang.Object deserializeTypedFromAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromAny
    java.lang.Object _deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
    java.lang.String _locateTypeId(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _locateTypeId
org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer -> org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer:
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForArray
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForArray
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForScalar
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForScalar
    void writeTypeSuffixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForObject
    void writeTypeSuffixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForArray
    void writeTypeSuffixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForScalar
org.codehaus.jackson.map.jsontype.impl.AsExternalTypeDeserializer -> org.codehaus.jackson.map.jsontype.impl.AsExternalTypeDeserializer:
    java.lang.String _typePropertyName -> _typePropertyName
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
org.codehaus.jackson.map.jsontype.impl.AsExternalTypeSerializer -> org.codehaus.jackson.map.jsontype.impl.AsExternalTypeSerializer:
    java.lang.String _typePropertyName -> _typePropertyName
    java.lang.String getPropertyName() -> getPropertyName
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForArray
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForArray
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForScalar
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForScalar
    void writeTypeSuffixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForObject
    void writeTypeSuffixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForArray
    void writeTypeSuffixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForScalar
    void _writePrefix(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> _writePrefix
    void _writePrefix(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> _writePrefix
    void _writeSuffix(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> _writeSuffix
org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer -> org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer:
    java.lang.String _typePropertyName -> _typePropertyName
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object _deserializeTypedUsingDefaultImpl(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.util.TokenBuffer) -> _deserializeTypedUsingDefaultImpl
    java.lang.Object deserializeTypedFromAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromAny
    java.lang.Object _deserializeIfNatural(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _deserializeIfNatural
org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer$1 -> org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeSerializer -> org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeSerializer:
    java.lang.String _typePropertyName -> _typePropertyName
    java.lang.String getPropertyName() -> getPropertyName
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForObject
    void writeTypeSuffixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForObject
org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer -> org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer:
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object deserializeTypedFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromArray
    java.lang.Object deserializeTypedFromScalar(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromScalar
    java.lang.Object deserializeTypedFromAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> deserializeTypedFromAny
    java.lang.Object _deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext) -> _deserialize
org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer -> org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer:
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForArray
    void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForArray
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypePrefixForScalar
    void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class) -> writeTypePrefixForScalar
    void writeTypeSuffixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForObject
    void writeTypeSuffixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForArray
    void writeTypeSuffixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator) -> writeTypeSuffixForScalar
org.codehaus.jackson.map.jsontype.impl.ClassNameIdResolver -> org.codehaus.jackson.map.jsontype.impl.ClassNameIdResolver:
    org.codehaus.jackson.annotate.JsonTypeInfo$Id getMechanism() -> getMechanism
    void registerSubtype(java.lang.Class,java.lang.String) -> registerSubtype
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    org.codehaus.jackson.type.JavaType typeFromId(java.lang.String) -> typeFromId
    java.lang.String _idFrom(java.lang.Object,java.lang.Class) -> _idFrom
org.codehaus.jackson.map.jsontype.impl.MinimalClassNameIdResolver -> org.codehaus.jackson.map.jsontype.impl.MinimalClassNameIdResolver:
    java.lang.String _basePackageName -> _basePackageName
    java.lang.String _basePackagePrefix -> _basePackagePrefix
    org.codehaus.jackson.annotate.JsonTypeInfo$Id getMechanism() -> getMechanism
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    org.codehaus.jackson.type.JavaType typeFromId(java.lang.String) -> typeFromId
org.codehaus.jackson.map.jsontype.impl.StdSubtypeResolver -> org.codehaus.jackson.map.jsontype.impl.StdSubtypeResolver:
    java.util.LinkedHashSet _registeredSubtypes -> _registeredSubtypes
    void registerSubtypes(org.codehaus.jackson.map.jsontype.NamedType[]) -> registerSubtypes
    void registerSubtypes(java.lang.Class[]) -> registerSubtypes
    java.util.Collection collectAndResolveSubtypes(org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.AnnotationIntrospector) -> collectAndResolveSubtypes
    java.util.Collection collectAndResolveSubtypes(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.AnnotationIntrospector) -> collectAndResolveSubtypes
    void _collectAndResolve(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.jsontype.NamedType,org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.AnnotationIntrospector,java.util.HashMap) -> _collectAndResolve
org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder -> org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder:
    org.codehaus.jackson.annotate.JsonTypeInfo$Id _idType -> _idType
    org.codehaus.jackson.annotate.JsonTypeInfo$As _includeAs -> _includeAs
    java.lang.String _typeProperty -> _typeProperty
    java.lang.Class _defaultImpl -> _defaultImpl
    org.codehaus.jackson.map.jsontype.TypeIdResolver _customIdResolver -> _customIdResolver
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder noTypeInfoBuilder() -> noTypeInfoBuilder
    org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder init(org.codehaus.jackson.annotate.JsonTypeInfo$Id,org.codehaus.jackson.map.jsontype.TypeIdResolver) -> init
    org.codehaus.jackson.map.TypeSerializer buildTypeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty) -> buildTypeSerializer
    org.codehaus.jackson.map.TypeDeserializer buildTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty) -> buildTypeDeserializer
    org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder inclusion(org.codehaus.jackson.annotate.JsonTypeInfo$As) -> inclusion
    org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder typeProperty(java.lang.String) -> typeProperty
    org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder defaultImpl(java.lang.Class) -> defaultImpl
    java.lang.String getTypeProperty() -> getTypeProperty
    org.codehaus.jackson.map.jsontype.TypeIdResolver idResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,boolean,boolean) -> idResolver
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder defaultImpl(java.lang.Class) -> defaultImpl
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder typeProperty(java.lang.String) -> typeProperty
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder inclusion(org.codehaus.jackson.annotate.JsonTypeInfo$As) -> inclusion
    org.codehaus.jackson.map.jsontype.TypeResolverBuilder init(org.codehaus.jackson.annotate.JsonTypeInfo$Id,org.codehaus.jackson.map.jsontype.TypeIdResolver) -> init
org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder$1 -> org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder$1:
    int[] $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$As -> $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$As
    int[] $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$Id -> $SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$Id
org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase -> org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase:
    org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver -> _idResolver
    org.codehaus.jackson.type.JavaType _baseType -> _baseType
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.type.JavaType _defaultImpl -> _defaultImpl
    java.util.HashMap _deserializers -> _deserializers
    org.codehaus.jackson.map.JsonDeserializer _defaultImplDeserializer -> _defaultImplDeserializer
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String baseTypeName() -> baseTypeName
    java.lang.String getPropertyName() -> getPropertyName
    org.codehaus.jackson.map.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    java.lang.String toString() -> toString
    org.codehaus.jackson.map.JsonDeserializer _findDeserializer(org.codehaus.jackson.map.DeserializationContext,java.lang.String) -> _findDeserializer
    org.codehaus.jackson.map.JsonDeserializer _findDefaultImplDeserializer(org.codehaus.jackson.map.DeserializationContext) -> _findDefaultImplDeserializer
org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase -> org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase:
    org.codehaus.jackson.map.type.TypeFactory _typeFactory -> _typeFactory
    org.codehaus.jackson.type.JavaType _baseType -> _baseType
    void init(org.codehaus.jackson.type.JavaType) -> init
    java.lang.String idFromBaseType() -> idFromBaseType
org.codehaus.jackson.map.jsontype.impl.TypeNameIdResolver -> org.codehaus.jackson.map.jsontype.impl.TypeNameIdResolver:
    org.codehaus.jackson.map.MapperConfig _config -> _config
    java.util.HashMap _typeToId -> _typeToId
    java.util.HashMap _idToType -> _idToType
    org.codehaus.jackson.map.jsontype.impl.TypeNameIdResolver construct(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,boolean,boolean) -> construct
    org.codehaus.jackson.annotate.JsonTypeInfo$Id getMechanism() -> getMechanism
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    org.codehaus.jackson.type.JavaType typeFromId(java.lang.String) -> typeFromId
    java.lang.String toString() -> toString
    java.lang.String _defaultTypeId(java.lang.Class) -> _defaultTypeId
org.codehaus.jackson.map.jsontype.impl.TypeSerializerBase -> org.codehaus.jackson.map.jsontype.impl.TypeSerializerBase:
    org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver -> _idResolver
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    org.codehaus.jackson.map.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
org.codehaus.jackson.map.module.SimpleAbstractTypeResolver -> org.codehaus.jackson.map.module.SimpleAbstractTypeResolver:
    java.util.HashMap _mappings -> _mappings
    org.codehaus.jackson.map.module.SimpleAbstractTypeResolver addMapping(java.lang.Class,java.lang.Class) -> addMapping
    org.codehaus.jackson.type.JavaType findTypeMapping(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> findTypeMapping
    org.codehaus.jackson.type.JavaType resolveAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType) -> resolveAbstractType
org.codehaus.jackson.map.module.SimpleDeserializers -> org.codehaus.jackson.map.module.SimpleDeserializers:
    java.util.HashMap _classMappings -> _classMappings
    void addDeserializer(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer) -> addDeserializer
    org.codehaus.jackson.map.JsonDeserializer findArrayDeserializer(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findArrayDeserializer
    org.codehaus.jackson.map.JsonDeserializer findBeanDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findBeanDeserializer
    org.codehaus.jackson.map.JsonDeserializer findCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findCollectionDeserializer
    org.codehaus.jackson.map.JsonDeserializer findCollectionLikeDeserializer(org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findCollectionLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findEnumDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findEnumDeserializer
    org.codehaus.jackson.map.JsonDeserializer findMapDeserializer(org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findMapDeserializer
    org.codehaus.jackson.map.JsonDeserializer findMapLikeDeserializer(org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer) -> findMapLikeDeserializer
    org.codehaus.jackson.map.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty) -> findTreeNodeDeserializer
org.codehaus.jackson.map.module.SimpleKeyDeserializers -> org.codehaus.jackson.map.module.SimpleKeyDeserializers:
    java.util.HashMap _classMappings -> _classMappings
    org.codehaus.jackson.map.module.SimpleKeyDeserializers addDeserializer(java.lang.Class,org.codehaus.jackson.map.KeyDeserializer) -> addDeserializer
    org.codehaus.jackson.map.KeyDeserializer findKeyDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findKeyDeserializer
org.codehaus.jackson.map.module.SimpleModule -> org.codehaus.jackson.map.module.SimpleModule:
    java.lang.String _name -> _name
    org.codehaus.jackson.Version _version -> _version
    org.codehaus.jackson.map.module.SimpleSerializers _serializers -> _serializers
    org.codehaus.jackson.map.module.SimpleDeserializers _deserializers -> _deserializers
    org.codehaus.jackson.map.module.SimpleSerializers _keySerializers -> _keySerializers
    org.codehaus.jackson.map.module.SimpleKeyDeserializers _keyDeserializers -> _keyDeserializers
    org.codehaus.jackson.map.module.SimpleAbstractTypeResolver _abstractTypes -> _abstractTypes
    org.codehaus.jackson.map.module.SimpleValueInstantiators _valueInstantiators -> _valueInstantiators
    java.util.HashMap _mixins -> _mixins
    void setSerializers(org.codehaus.jackson.map.module.SimpleSerializers) -> setSerializers
    void setDeserializers(org.codehaus.jackson.map.module.SimpleDeserializers) -> setDeserializers
    void setKeySerializers(org.codehaus.jackson.map.module.SimpleSerializers) -> setKeySerializers
    void setKeyDeserializers(org.codehaus.jackson.map.module.SimpleKeyDeserializers) -> setKeyDeserializers
    void setAbstractTypes(org.codehaus.jackson.map.module.SimpleAbstractTypeResolver) -> setAbstractTypes
    void setValueInstantiators(org.codehaus.jackson.map.module.SimpleValueInstantiators) -> setValueInstantiators
    org.codehaus.jackson.map.module.SimpleModule addSerializer(org.codehaus.jackson.map.JsonSerializer) -> addSerializer
    org.codehaus.jackson.map.module.SimpleModule addSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> addSerializer
    org.codehaus.jackson.map.module.SimpleModule addKeySerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> addKeySerializer
    org.codehaus.jackson.map.module.SimpleModule addDeserializer(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer) -> addDeserializer
    org.codehaus.jackson.map.module.SimpleModule addKeyDeserializer(java.lang.Class,org.codehaus.jackson.map.KeyDeserializer) -> addKeyDeserializer
    org.codehaus.jackson.map.module.SimpleModule addAbstractTypeMapping(java.lang.Class,java.lang.Class) -> addAbstractTypeMapping
    org.codehaus.jackson.map.module.SimpleModule addValueInstantiator(java.lang.Class,org.codehaus.jackson.map.deser.ValueInstantiator) -> addValueInstantiator
    org.codehaus.jackson.map.module.SimpleModule setMixInAnnotation(java.lang.Class,java.lang.Class) -> setMixInAnnotation
    java.lang.String getModuleName() -> getModuleName
    void setupModule(org.codehaus.jackson.map.Module$SetupContext) -> setupModule
    org.codehaus.jackson.Version version() -> version
org.codehaus.jackson.map.module.SimpleSerializers -> org.codehaus.jackson.map.module.SimpleSerializers:
    java.util.HashMap _classMappings -> _classMappings
    java.util.HashMap _interfaceMappings -> _interfaceMappings
    void addSerializer(org.codehaus.jackson.map.JsonSerializer) -> addSerializer
    void addSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> addSerializer
    void _addSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> _addSerializer
    org.codehaus.jackson.map.JsonSerializer findSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty) -> findSerializer
    org.codehaus.jackson.map.JsonSerializer findArraySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findArraySerializer
    org.codehaus.jackson.map.JsonSerializer findCollectionSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findCollectionSerializer
    org.codehaus.jackson.map.JsonSerializer findCollectionLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findCollectionLikeSerializer
    org.codehaus.jackson.map.JsonSerializer findMapSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findMapSerializer
    org.codehaus.jackson.map.JsonSerializer findMapLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> findMapLikeSerializer
    org.codehaus.jackson.map.JsonSerializer _findInterfaceMapping(java.lang.Class,org.codehaus.jackson.map.type.ClassKey) -> _findInterfaceMapping
org.codehaus.jackson.map.module.SimpleValueInstantiators -> org.codehaus.jackson.map.module.SimpleValueInstantiators:
    java.util.HashMap _classMappings -> _classMappings
    org.codehaus.jackson.map.module.SimpleValueInstantiators addValueInstantiator(java.lang.Class,org.codehaus.jackson.map.deser.ValueInstantiator) -> addValueInstantiator
    org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.deser.ValueInstantiator) -> findValueInstantiator
org.codehaus.jackson.map.ser.AnyGetterWriter -> org.codehaus.jackson.map.ser.AnyGetterWriter:
    java.lang.reflect.Method _anyGetter -> _anyGetter
    org.codehaus.jackson.map.ser.std.MapSerializer _serializer -> _serializer
    void getAndSerialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> getAndSerialize
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
org.codehaus.jackson.map.ser.ArraySerializers -> org.codehaus.jackson.map.ser.ArraySerializers:
org.codehaus.jackson.map.ser.BasicSerializerFactory -> org.codehaus.jackson.map.ser.BasicSerializerFactory:
    java.util.HashMap _concrete -> _concrete
    java.util.HashMap _concreteLazy -> _concreteLazy
    java.util.HashMap _arraySerializers -> _arraySerializers
    org.codehaus.jackson.map.ext.OptionalHandlerFactory optionalHandlers -> optionalHandlers
    org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createSerializer
    org.codehaus.jackson.map.TypeSerializer createTypeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createTypeSerializer
    org.codehaus.jackson.map.JsonSerializer getNullSerializer() -> getNullSerializer
    java.lang.Iterable customSerializers() -> customSerializers
    org.codehaus.jackson.map.JsonSerializer findSerializerByLookup(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean) -> findSerializerByLookup
    org.codehaus.jackson.map.JsonSerializer findSerializerByPrimaryType(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean) -> findSerializerByPrimaryType
    org.codehaus.jackson.map.JsonSerializer findSerializerByAddonType(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean) -> findSerializerByAddonType
    org.codehaus.jackson.map.JsonSerializer findSerializerFromAnnotation(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty) -> findSerializerFromAnnotation
    org.codehaus.jackson.map.JsonSerializer buildContainerSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean) -> buildContainerSerializer
    org.codehaus.jackson.map.JsonSerializer buildCollectionLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildCollectionLikeSerializer
    org.codehaus.jackson.map.JsonSerializer buildCollectionSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildCollectionSerializer
    org.codehaus.jackson.map.JsonSerializer buildEnumSetSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildEnumSetSerializer
    boolean isIndexedList(java.lang.Class) -> isIndexedList
    org.codehaus.jackson.map.JsonSerializer buildMapLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildMapLikeSerializer
    org.codehaus.jackson.map.JsonSerializer buildMapSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildMapSerializer
    org.codehaus.jackson.map.JsonSerializer buildEnumMapSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildEnumMapSerializer
    org.codehaus.jackson.map.JsonSerializer buildArraySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer) -> buildArraySerializer
    org.codehaus.jackson.map.JsonSerializer buildIteratorSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean) -> buildIteratorSerializer
    org.codehaus.jackson.map.JsonSerializer buildIterableSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean) -> buildIterableSerializer
    org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> modifyTypeByAnnotation
    org.codehaus.jackson.type.JavaType modifySecondaryTypesByAnnotation(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType) -> modifySecondaryTypesByAnnotation
    org.codehaus.jackson.map.JsonSerializer findKeySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty) -> findKeySerializer
    org.codehaus.jackson.map.JsonSerializer findContentSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty) -> findContentSerializer
    boolean usesStaticTyping(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty) -> usesStaticTyping
org.codehaus.jackson.map.ser.BeanPropertyFilter -> org.codehaus.jackson.map.ser.BeanPropertyFilter:
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.ser.BeanPropertyWriter) -> serializeAsField
org.codehaus.jackson.map.ser.BeanPropertyWriter -> org.codehaus.jackson.map.ser.BeanPropertyWriter:
    org.codehaus.jackson.map.introspect.AnnotatedMember _member -> _member
    org.codehaus.jackson.map.util.Annotations _contextAnnotations -> _contextAnnotations
    org.codehaus.jackson.type.JavaType _declaredType -> _declaredType
    java.lang.reflect.Method _accessorMethod -> _accessorMethod
    java.lang.reflect.Field _field -> _field
    java.util.HashMap _internalSettings -> _internalSettings
    org.codehaus.jackson.io.SerializedString _name -> _name
    org.codehaus.jackson.type.JavaType _cfgSerializationType -> _cfgSerializationType
    org.codehaus.jackson.map.JsonSerializer _serializer -> _serializer
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    boolean _suppressNulls -> _suppressNulls
    java.lang.Object _suppressableValue -> _suppressableValue
    java.lang.Class[] _includeInViews -> _includeInViews
    org.codehaus.jackson.map.TypeSerializer _typeSerializer -> _typeSerializer
    org.codehaus.jackson.type.JavaType _nonTrivialBaseType -> _nonTrivialBaseType
    org.codehaus.jackson.map.ser.BeanPropertyWriter withSerializer(org.codehaus.jackson.map.JsonSerializer) -> withSerializer
    org.codehaus.jackson.map.ser.BeanPropertyWriter unwrappingWriter() -> unwrappingWriter
    void setViews(java.lang.Class[]) -> setViews
    void setNonTrivialBaseType(org.codehaus.jackson.type.JavaType) -> setNonTrivialBaseType
    java.lang.String getName() -> getName
    org.codehaus.jackson.type.JavaType getType() -> getType
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    org.codehaus.jackson.map.introspect.AnnotatedMember getMember() -> getMember
    java.lang.Object getInternalSetting(java.lang.Object) -> getInternalSetting
    java.lang.Object setInternalSetting(java.lang.Object,java.lang.Object) -> setInternalSetting
    java.lang.Object removeInternalSetting(java.lang.Object) -> removeInternalSetting
    org.codehaus.jackson.io.SerializedString getSerializedName() -> getSerializedName
    boolean hasSerializer() -> hasSerializer
    org.codehaus.jackson.map.JsonSerializer getSerializer() -> getSerializer
    org.codehaus.jackson.type.JavaType getSerializationType() -> getSerializationType
    java.lang.Class getRawSerializationType() -> getRawSerializationType
    java.lang.Class getPropertyType() -> getPropertyType
    java.lang.reflect.Type getGenericPropertyType() -> getGenericPropertyType
    java.lang.Class[] getViews() -> getViews
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeAsField
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
    java.lang.Object get(java.lang.Object) -> get
    void _reportSelfReference(java.lang.Object) -> _reportSelfReference
    java.lang.String toString() -> toString
org.codehaus.jackson.map.ser.BeanSerializer -> org.codehaus.jackson.map.ser.BeanSerializer:
    org.codehaus.jackson.map.ser.BeanSerializer createDummy(java.lang.Class) -> createDummy
    org.codehaus.jackson.map.JsonSerializer unwrappingSerializer() -> unwrappingSerializer
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    java.lang.String toString() -> toString
org.codehaus.jackson.map.ser.BeanSerializerBuilder -> org.codehaus.jackson.map.ser.BeanSerializerBuilder:
    org.codehaus.jackson.map.ser.BeanPropertyWriter[] NO_PROPERTIES -> NO_PROPERTIES
    org.codehaus.jackson.map.introspect.BasicBeanDescription _beanDesc -> _beanDesc
    java.util.List _properties -> _properties
    org.codehaus.jackson.map.ser.BeanPropertyWriter[] _filteredProperties -> _filteredProperties
    org.codehaus.jackson.map.ser.AnyGetterWriter _anyGetter -> _anyGetter
    java.lang.Object _filterId -> _filterId
    org.codehaus.jackson.map.introspect.BasicBeanDescription getBeanDescription() -> getBeanDescription
    java.util.List getProperties() -> getProperties
    org.codehaus.jackson.map.ser.BeanPropertyWriter[] getFilteredProperties() -> getFilteredProperties
    boolean hasProperties() -> hasProperties
    void setProperties(java.util.List) -> setProperties
    void setFilteredProperties(org.codehaus.jackson.map.ser.BeanPropertyWriter[]) -> setFilteredProperties
    void setAnyGetter(org.codehaus.jackson.map.ser.AnyGetterWriter) -> setAnyGetter
    void setFilterId(java.lang.Object) -> setFilterId
    org.codehaus.jackson.map.JsonSerializer build() -> build
    org.codehaus.jackson.map.ser.BeanSerializer createDummy() -> createDummy
org.codehaus.jackson.map.ser.BeanSerializerFactory -> org.codehaus.jackson.map.ser.BeanSerializerFactory:
    org.codehaus.jackson.map.ser.BeanSerializerFactory instance -> instance
    org.codehaus.jackson.map.SerializerFactory$Config _factoryConfig -> _factoryConfig
    org.codehaus.jackson.map.SerializerFactory$Config getConfig() -> getConfig
    org.codehaus.jackson.map.SerializerFactory withConfig(org.codehaus.jackson.map.SerializerFactory$Config) -> withConfig
    java.lang.Iterable customSerializers() -> customSerializers
    org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createSerializer
    org.codehaus.jackson.map.JsonSerializer createKeySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createKeySerializer
    org.codehaus.jackson.map.JsonSerializer findBeanSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> findBeanSerializer
    org.codehaus.jackson.map.TypeSerializer findPropertyTypeSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty) -> findPropertyTypeSerializer
    org.codehaus.jackson.map.TypeSerializer findPropertyContentTypeSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty) -> findPropertyContentTypeSerializer
    org.codehaus.jackson.map.JsonSerializer constructBeanSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty) -> constructBeanSerializer
    org.codehaus.jackson.map.ser.BeanPropertyWriter constructFilteredBeanWriter(org.codehaus.jackson.map.ser.BeanPropertyWriter,java.lang.Class[]) -> constructFilteredBeanWriter
    org.codehaus.jackson.map.ser.PropertyBuilder constructPropertyBuilder(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> constructPropertyBuilder
    org.codehaus.jackson.map.ser.BeanSerializerBuilder constructBeanSerializerBuilder(org.codehaus.jackson.map.introspect.BasicBeanDescription) -> constructBeanSerializerBuilder
    java.lang.Object findFilterId(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> findFilterId
    boolean isPotentialBeanType(java.lang.Class) -> isPotentialBeanType
    java.util.List findBeanProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> findBeanProperties
    java.util.List filterBeanProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List) -> filterBeanProperties
    java.util.List sortBeanProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List) -> sortBeanProperties
    void processViews(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.ser.BeanSerializerBuilder) -> processViews
    void removeIgnorableTypes(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List) -> removeIgnorableTypes
    void removeSetterlessGetters(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List) -> removeSetterlessGetters
    org.codehaus.jackson.map.ser.BeanPropertyWriter _constructWriter(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.TypeBindings,org.codehaus.jackson.map.ser.PropertyBuilder,boolean,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMember) -> _constructWriter
org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl -> org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl:
    org.codehaus.jackson.map.Serializers[] NO_SERIALIZERS -> NO_SERIALIZERS
    org.codehaus.jackson.map.ser.BeanSerializerModifier[] NO_MODIFIERS -> NO_MODIFIERS
    org.codehaus.jackson.map.Serializers[] _additionalSerializers -> _additionalSerializers
    org.codehaus.jackson.map.Serializers[] _additionalKeySerializers -> _additionalKeySerializers
    org.codehaus.jackson.map.ser.BeanSerializerModifier[] _modifiers -> _modifiers
    org.codehaus.jackson.map.SerializerFactory$Config withAdditionalSerializers(org.codehaus.jackson.map.Serializers) -> withAdditionalSerializers
    org.codehaus.jackson.map.SerializerFactory$Config withAdditionalKeySerializers(org.codehaus.jackson.map.Serializers) -> withAdditionalKeySerializers
    org.codehaus.jackson.map.SerializerFactory$Config withSerializerModifier(org.codehaus.jackson.map.ser.BeanSerializerModifier) -> withSerializerModifier
    boolean hasSerializers() -> hasSerializers
    boolean hasKeySerializers() -> hasKeySerializers
    boolean hasSerializerModifiers() -> hasSerializerModifiers
    java.lang.Iterable serializers() -> serializers
    java.lang.Iterable keySerializers() -> keySerializers
    java.lang.Iterable serializerModifiers() -> serializerModifiers
org.codehaus.jackson.map.ser.BeanSerializerModifier -> org.codehaus.jackson.map.ser.BeanSerializerModifier:
    java.util.List changeProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List) -> changeProperties
    java.util.List orderProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List) -> orderProperties
    org.codehaus.jackson.map.ser.BeanSerializerBuilder updateBuilder(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.ser.BeanSerializerBuilder) -> updateBuilder
    org.codehaus.jackson.map.JsonSerializer modifySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.JsonSerializer) -> modifySerializer
org.codehaus.jackson.map.ser.ContainerSerializers -> org.codehaus.jackson.map.ser.ContainerSerializers:
org.codehaus.jackson.map.ser.CustomSerializerFactory -> org.codehaus.jackson.map.ser.CustomSerializerFactory:
    java.util.HashMap _directClassMappings -> _directClassMappings
    org.codehaus.jackson.map.JsonSerializer _enumSerializerOverride -> _enumSerializerOverride
    java.util.HashMap _transitiveClassMappings -> _transitiveClassMappings
    java.util.HashMap _interfaceMappings -> _interfaceMappings
    org.codehaus.jackson.map.SerializerFactory withConfig(org.codehaus.jackson.map.SerializerFactory$Config) -> withConfig
    void addGenericMapping(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> addGenericMapping
    void addSpecificMapping(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> addSpecificMapping
    void setEnumSerializer(org.codehaus.jackson.map.JsonSerializer) -> setEnumSerializer
    org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> createSerializer
    org.codehaus.jackson.map.JsonSerializer findCustomSerializer(java.lang.Class,org.codehaus.jackson.map.SerializationConfig) -> findCustomSerializer
    org.codehaus.jackson.map.JsonSerializer _findInterfaceMapping(java.lang.Class,org.codehaus.jackson.map.type.ClassKey) -> _findInterfaceMapping
org.codehaus.jackson.map.ser.EnumSerializer -> org.codehaus.jackson.map.ser.EnumSerializer:
org.codehaus.jackson.map.ser.FilterProvider -> org.codehaus.jackson.map.ser.FilterProvider:
    org.codehaus.jackson.map.ser.BeanPropertyFilter findFilter(java.lang.Object) -> findFilter
org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter -> org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter:
    org.codehaus.jackson.map.ser.BeanPropertyWriter constructViewBased(org.codehaus.jackson.map.ser.BeanPropertyWriter,java.lang.Class[]) -> constructViewBased
org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView -> org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView:
    org.codehaus.jackson.map.ser.BeanPropertyWriter _delegate -> _delegate
    java.lang.Class[] _views -> _views
    org.codehaus.jackson.map.ser.BeanPropertyWriter withSerializer(org.codehaus.jackson.map.JsonSerializer) -> withSerializer
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeAsField
org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView -> org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView:
    org.codehaus.jackson.map.ser.BeanPropertyWriter _delegate -> _delegate
    java.lang.Class _view -> _view
    org.codehaus.jackson.map.ser.BeanPropertyWriter withSerializer(org.codehaus.jackson.map.JsonSerializer) -> withSerializer
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeAsField
org.codehaus.jackson.map.ser.JdkSerializers -> org.codehaus.jackson.map.ser.JdkSerializers:
org.codehaus.jackson.map.ser.MapSerializer -> org.codehaus.jackson.map.ser.MapSerializer:
org.codehaus.jackson.map.ser.PropertyBuilder -> org.codehaus.jackson.map.ser.PropertyBuilder:
    org.codehaus.jackson.map.SerializationConfig _config -> _config
    org.codehaus.jackson.map.introspect.BasicBeanDescription _beanDesc -> _beanDesc
    org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion _outputProps -> _outputProps
    org.codehaus.jackson.map.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    java.lang.Object _defaultBean -> _defaultBean
    org.codehaus.jackson.map.util.Annotations getClassAnnotations() -> getClassAnnotations
    org.codehaus.jackson.map.ser.BeanPropertyWriter buildWriter(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.introspect.AnnotatedMember,boolean) -> buildWriter
    org.codehaus.jackson.type.JavaType findSerializationType(org.codehaus.jackson.map.introspect.Annotated,boolean,org.codehaus.jackson.type.JavaType) -> findSerializationType
    java.lang.Object getDefaultBean() -> getDefaultBean
    java.lang.Object getDefaultValue(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Field) -> getDefaultValue
    java.lang.Object getContainerValueChecker(java.lang.String,org.codehaus.jackson.type.JavaType) -> getContainerValueChecker
    java.lang.Object getEmptyValueChecker(java.lang.String,org.codehaus.jackson.type.JavaType) -> getEmptyValueChecker
    java.lang.Object _throwWrapped(java.lang.Exception,java.lang.String,java.lang.Object) -> _throwWrapped
org.codehaus.jackson.map.ser.PropertyBuilder$1 -> org.codehaus.jackson.map.ser.PropertyBuilder$1:
    int[] $SwitchMap$org$codehaus$jackson$map$annotate$JsonSerialize$Inclusion -> $SwitchMap$org$codehaus$jackson$map$annotate$JsonSerialize$Inclusion
org.codehaus.jackson.map.ser.PropertyBuilder$EmptyArrayChecker -> org.codehaus.jackson.map.ser.PropertyBuilder$EmptyArrayChecker:
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.ser.PropertyBuilder$EmptyCollectionChecker -> org.codehaus.jackson.map.ser.PropertyBuilder$EmptyCollectionChecker:
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.ser.PropertyBuilder$EmptyMapChecker -> org.codehaus.jackson.map.ser.PropertyBuilder$EmptyMapChecker:
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.ser.PropertyBuilder$EmptyStringChecker -> org.codehaus.jackson.map.ser.PropertyBuilder$EmptyStringChecker:
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.ser.ScalarSerializerBase -> org.codehaus.jackson.map.ser.ScalarSerializerBase:
org.codehaus.jackson.map.ser.SerializerBase -> org.codehaus.jackson.map.ser.SerializerBase:
org.codehaus.jackson.map.ser.StdKeySerializer -> org.codehaus.jackson.map.ser.StdKeySerializer:
    org.codehaus.jackson.map.ser.StdKeySerializer instace -> instace
org.codehaus.jackson.map.ser.StdSerializerProvider -> org.codehaus.jackson.map.ser.StdSerializerProvider:
    boolean CACHE_UNKNOWN_MAPPINGS -> CACHE_UNKNOWN_MAPPINGS
    org.codehaus.jackson.map.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER -> DEFAULT_NULL_KEY_SERIALIZER
    org.codehaus.jackson.map.JsonSerializer DEFAULT_KEY_SERIALIZER -> DEFAULT_KEY_SERIALIZER
    org.codehaus.jackson.map.JsonSerializer DEFAULT_UNKNOWN_SERIALIZER -> DEFAULT_UNKNOWN_SERIALIZER
    org.codehaus.jackson.map.SerializerFactory _serializerFactory -> _serializerFactory
    org.codehaus.jackson.map.ser.impl.SerializerCache _serializerCache -> _serializerCache
    org.codehaus.jackson.map.util.RootNameLookup _rootNames -> _rootNames
    org.codehaus.jackson.map.JsonSerializer _unknownTypeSerializer -> _unknownTypeSerializer
    org.codehaus.jackson.map.JsonSerializer _keySerializer -> _keySerializer
    org.codehaus.jackson.map.JsonSerializer _nullValueSerializer -> _nullValueSerializer
    org.codehaus.jackson.map.JsonSerializer _nullKeySerializer -> _nullKeySerializer
    org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers -> _knownSerializers
    java.text.DateFormat _dateFormat -> _dateFormat
    org.codehaus.jackson.map.ser.StdSerializerProvider createInstance(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.SerializerFactory) -> createInstance
    void setDefaultKeySerializer(org.codehaus.jackson.map.JsonSerializer) -> setDefaultKeySerializer
    void setNullValueSerializer(org.codehaus.jackson.map.JsonSerializer) -> setNullValueSerializer
    void setNullKeySerializer(org.codehaus.jackson.map.JsonSerializer) -> setNullKeySerializer
    void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory) -> serializeValue
    void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerFactory) -> serializeValue
    org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.SerializerFactory) -> generateJsonSchema
    boolean hasSerializerFor(org.codehaus.jackson.map.SerializationConfig,java.lang.Class,org.codehaus.jackson.map.SerializerFactory) -> hasSerializerFor
    int cachedSerializersCount() -> cachedSerializersCount
    void flushCachedSerializers() -> flushCachedSerializers
    org.codehaus.jackson.map.JsonSerializer findValueSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty) -> findValueSerializer
    org.codehaus.jackson.map.JsonSerializer findValueSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findValueSerializer
    org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,org.codehaus.jackson.map.BeanProperty) -> findTypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.BeanProperty) -> findTypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer findKeySerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> findKeySerializer
    org.codehaus.jackson.map.JsonSerializer getNullKeySerializer() -> getNullKeySerializer
    org.codehaus.jackson.map.JsonSerializer getNullValueSerializer() -> getNullValueSerializer
    org.codehaus.jackson.map.JsonSerializer getUnknownTypeSerializer(java.lang.Class) -> getUnknownTypeSerializer
    void defaultSerializeDateValue(long,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateValue
    void defaultSerializeDateValue(java.util.Date,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateValue
    void defaultSerializeDateKey(long,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateKey
    void defaultSerializeDateKey(java.util.Date,org.codehaus.jackson.JsonGenerator) -> defaultSerializeDateKey
    void _serializeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> _serializeValue
    void _serializeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.type.JavaType) -> _serializeValue
    void _reportIncompatibleRootType(java.lang.Object,org.codehaus.jackson.type.JavaType) -> _reportIncompatibleRootType
    org.codehaus.jackson.map.JsonSerializer _findExplicitUntypedSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty) -> _findExplicitUntypedSerializer
    org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty) -> _createAndCacheUntypedSerializer
    org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> _createAndCacheUntypedSerializer
    org.codehaus.jackson.map.JsonSerializer _createUntypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> _createUntypedSerializer
    org.codehaus.jackson.map.JsonSerializer _handleContextualResolvable(org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.BeanProperty) -> _handleContextualResolvable
org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer -> org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer:
    org.codehaus.jackson.map.TypeSerializer _typeSerializer -> _typeSerializer
    org.codehaus.jackson.map.JsonSerializer _serializer -> _serializer
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    java.lang.Class handledType() -> handledType
org.codehaus.jackson.map.ser.StdSerializers -> org.codehaus.jackson.map.ser.StdSerializers:
org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer -> org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer:
    boolean _forPrimitive -> _forPrimitive
    void serialize(java.lang.Boolean,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$CalendarSerializer -> org.codehaus.jackson.map.ser.StdSerializers$CalendarSerializer:
org.codehaus.jackson.map.ser.StdSerializers$DoubleSerializer -> org.codehaus.jackson.map.ser.StdSerializers$DoubleSerializer:
    org.codehaus.jackson.map.ser.StdSerializers$DoubleSerializer instance -> instance
    void serialize(java.lang.Double,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$FloatSerializer -> org.codehaus.jackson.map.ser.StdSerializers$FloatSerializer:
    org.codehaus.jackson.map.ser.StdSerializers$FloatSerializer instance -> instance
    void serialize(java.lang.Float,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$IntLikeSerializer -> org.codehaus.jackson.map.ser.StdSerializers$IntLikeSerializer:
    org.codehaus.jackson.map.ser.StdSerializers$IntLikeSerializer instance -> instance
    void serialize(java.lang.Number,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$IntegerSerializer -> org.codehaus.jackson.map.ser.StdSerializers$IntegerSerializer:
    void serialize(java.lang.Integer,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$LongSerializer -> org.codehaus.jackson.map.ser.StdSerializers$LongSerializer:
    org.codehaus.jackson.map.ser.StdSerializers$LongSerializer instance -> instance
    void serialize(java.lang.Long,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$NumberSerializer -> org.codehaus.jackson.map.ser.StdSerializers$NumberSerializer:
    org.codehaus.jackson.map.ser.StdSerializers$NumberSerializer instance -> instance
    void serialize(java.lang.Number,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$SerializableSerializer -> org.codehaus.jackson.map.ser.StdSerializers$SerializableSerializer:
org.codehaus.jackson.map.ser.StdSerializers$SerializableWithTypeSerializer -> org.codehaus.jackson.map.ser.StdSerializers$SerializableWithTypeSerializer:
org.codehaus.jackson.map.ser.StdSerializers$SqlDateSerializer -> org.codehaus.jackson.map.ser.StdSerializers$SqlDateSerializer:
    void serialize(java.sql.Date,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$SqlTimeSerializer -> org.codehaus.jackson.map.ser.StdSerializers$SqlTimeSerializer:
    void serialize(java.sql.Time,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$StringSerializer -> org.codehaus.jackson.map.ser.StdSerializers$StringSerializer:
    void serialize(java.lang.String,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.StdSerializers$UtilDateSerializer -> org.codehaus.jackson.map.ser.StdSerializers$UtilDateSerializer:
org.codehaus.jackson.map.ser.ToStringSerializer -> org.codehaus.jackson.map.ser.ToStringSerializer:
    org.codehaus.jackson.map.ser.ToStringSerializer instance -> instance
org.codehaus.jackson.map.ser.impl.FailingSerializer -> org.codehaus.jackson.map.ser.impl.FailingSerializer:
    java.lang.String _msg -> _msg
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
org.codehaus.jackson.map.ser.impl.JsonSerializerMap -> org.codehaus.jackson.map.ser.impl.JsonSerializerMap:
    org.codehaus.jackson.map.ser.impl.JsonSerializerMap$Bucket[] _buckets -> _buckets
    int _size -> _size
    int findSize(int) -> findSize
    int size() -> size
    org.codehaus.jackson.map.JsonSerializer find(org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey) -> find
org.codehaus.jackson.map.ser.impl.JsonSerializerMap$Bucket -> org.codehaus.jackson.map.ser.impl.JsonSerializerMap$Bucket:
    org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey key -> key
    org.codehaus.jackson.map.JsonSerializer value -> value
    org.codehaus.jackson.map.ser.impl.JsonSerializerMap$Bucket next -> next
org.codehaus.jackson.map.ser.impl.PropertySerializerMap -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap:
    org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSerializer(java.lang.Class,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.BeanProperty) -> findAndAddSerializer
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.BeanProperty) -> findAndAddSerializer
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> newWith
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap emptyMap() -> emptyMap
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double:
    java.lang.Class _type1 -> _type1
    java.lang.Class _type2 -> _type2
    org.codehaus.jackson.map.JsonSerializer _serializer1 -> _serializer1
    org.codehaus.jackson.map.JsonSerializer _serializer2 -> _serializer2
    org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> newWith
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Empty -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Empty:
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Empty instance -> instance
    org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> newWith
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Multi -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Multi:
    int MAX_ENTRIES -> MAX_ENTRIES
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap$TypeAndSerializer[] _entries -> _entries
    org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> newWith
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult:
    org.codehaus.jackson.map.JsonSerializer serializer -> serializer
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap map -> map
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Single -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Single:
    java.lang.Class _type -> _type
    org.codehaus.jackson.map.JsonSerializer _serializer -> _serializer
    org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> newWith
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$TypeAndSerializer -> org.codehaus.jackson.map.ser.impl.PropertySerializerMap$TypeAndSerializer:
    java.lang.Class type -> type
    org.codehaus.jackson.map.JsonSerializer serializer -> serializer
org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap -> org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap:
    org.codehaus.jackson.map.ser.impl.JsonSerializerMap _map -> _map
    org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey _cacheKey -> _cacheKey
    org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap instance() -> instance
    org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap from(java.util.HashMap) -> from
    org.codehaus.jackson.map.JsonSerializer typedValueSerializer(org.codehaus.jackson.type.JavaType) -> typedValueSerializer
    org.codehaus.jackson.map.JsonSerializer typedValueSerializer(java.lang.Class) -> typedValueSerializer
    org.codehaus.jackson.map.JsonSerializer untypedValueSerializer(java.lang.Class) -> untypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer untypedValueSerializer(org.codehaus.jackson.type.JavaType) -> untypedValueSerializer
org.codehaus.jackson.map.ser.impl.SerializerCache -> org.codehaus.jackson.map.ser.impl.SerializerCache:
    java.util.HashMap _sharedMap -> _sharedMap
    org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap _readOnlyMap -> _readOnlyMap
    org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap getReadOnlyLookupMap() -> getReadOnlyLookupMap
    int size() -> size
    org.codehaus.jackson.map.JsonSerializer untypedValueSerializer(java.lang.Class) -> untypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer untypedValueSerializer(org.codehaus.jackson.type.JavaType) -> untypedValueSerializer
    org.codehaus.jackson.map.JsonSerializer typedValueSerializer(org.codehaus.jackson.type.JavaType) -> typedValueSerializer
    org.codehaus.jackson.map.JsonSerializer typedValueSerializer(java.lang.Class) -> typedValueSerializer
    void addTypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer) -> addTypedSerializer
    void addTypedSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer) -> addTypedSerializer
    void addAndResolveNonTypedSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.SerializerProvider) -> addAndResolveNonTypedSerializer
    void addAndResolveNonTypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.SerializerProvider) -> addAndResolveNonTypedSerializer
    void flush() -> flush
org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey -> org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey:
    int _hashCode -> _hashCode
    java.lang.Class _class -> _class
    org.codehaus.jackson.type.JavaType _type -> _type
    boolean _isTyped -> _isTyped
    int hash(java.lang.Class,boolean) -> hash
    int hash(org.codehaus.jackson.type.JavaType,boolean) -> hash
    void resetTyped(java.lang.Class) -> resetTyped
    void resetUntyped(java.lang.Class) -> resetUntyped
    void resetTyped(org.codehaus.jackson.type.JavaType) -> resetTyped
    void resetUntyped(org.codehaus.jackson.type.JavaType) -> resetUntyped
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter -> org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter:
    org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter filterOutAllExcept(java.util.Set) -> filterOutAllExcept
    org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter filterOutAllExcept(java.lang.String[]) -> filterOutAllExcept
    org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter serializeAllExcept(java.util.Set) -> serializeAllExcept
    org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter serializeAllExcept(java.lang.String[]) -> serializeAllExcept
org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter -> org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter:
    java.util.Set _propertiesToInclude -> _propertiesToInclude
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.ser.BeanPropertyWriter) -> serializeAsField
org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter -> org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter:
    java.util.Set _propertiesToExclude -> _propertiesToExclude
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.ser.BeanPropertyWriter) -> serializeAsField
org.codehaus.jackson.map.ser.impl.SimpleFilterProvider -> org.codehaus.jackson.map.ser.impl.SimpleFilterProvider:
    java.util.Map _filtersById -> _filtersById
    org.codehaus.jackson.map.ser.BeanPropertyFilter _defaultFilter -> _defaultFilter
    boolean _cfgFailOnUnknownId -> _cfgFailOnUnknownId
    org.codehaus.jackson.map.ser.impl.SimpleFilterProvider setDefaultFilter(org.codehaus.jackson.map.ser.BeanPropertyFilter) -> setDefaultFilter
    org.codehaus.jackson.map.ser.BeanPropertyFilter getDefaultFilter() -> getDefaultFilter
    org.codehaus.jackson.map.ser.impl.SimpleFilterProvider setFailOnUnknownId(boolean) -> setFailOnUnknownId
    boolean willFailOnUnknownId() -> willFailOnUnknownId
    org.codehaus.jackson.map.ser.impl.SimpleFilterProvider addFilter(java.lang.String,org.codehaus.jackson.map.ser.BeanPropertyFilter) -> addFilter
    org.codehaus.jackson.map.ser.BeanPropertyFilter removeFilter(java.lang.String) -> removeFilter
    org.codehaus.jackson.map.ser.BeanPropertyFilter findFilter(java.lang.Object) -> findFilter
org.codehaus.jackson.map.ser.impl.UnknownSerializer -> org.codehaus.jackson.map.ser.impl.UnknownSerializer:
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void failForEmpty(java.lang.Object) -> failForEmpty
org.codehaus.jackson.map.ser.impl.UnwrappingBeanPropertyWriter -> org.codehaus.jackson.map.ser.impl.UnwrappingBeanPropertyWriter:
    org.codehaus.jackson.map.ser.BeanPropertyWriter withSerializer(org.codehaus.jackson.map.JsonSerializer) -> withSerializer
    void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeAsField
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
org.codehaus.jackson.map.ser.impl.UnwrappingBeanSerializer -> org.codehaus.jackson.map.ser.impl.UnwrappingBeanSerializer:
    org.codehaus.jackson.map.JsonSerializer unwrappingSerializer() -> unwrappingSerializer
    boolean isUnwrappingSerializer() -> isUnwrappingSerializer
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    java.lang.String toString() -> toString
org.codehaus.jackson.map.ser.std.AsArraySerializerBase -> org.codehaus.jackson.map.ser.std.AsArraySerializerBase:
    boolean _staticTyping -> _staticTyping
    org.codehaus.jackson.type.JavaType _elementType -> _elementType
    org.codehaus.jackson.map.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    org.codehaus.jackson.map.JsonSerializer _elementSerializer -> _elementSerializer
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
org.codehaus.jackson.map.ser.std.BeanSerializerBase -> org.codehaus.jackson.map.ser.std.BeanSerializerBase:
    org.codehaus.jackson.map.ser.BeanPropertyWriter[] NO_PROPS -> NO_PROPS
    org.codehaus.jackson.map.ser.BeanPropertyWriter[] _props -> _props
    org.codehaus.jackson.map.ser.BeanPropertyWriter[] _filteredProps -> _filteredProps
    org.codehaus.jackson.map.ser.AnyGetterWriter _anyGetterWriter -> _anyGetterWriter
    java.lang.Object _propertyFilterId -> _propertyFilterId
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeFields(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeFields
    void serializeFieldsFiltered(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeFieldsFiltered
    org.codehaus.jackson.map.ser.BeanPropertyFilter findFilter(org.codehaus.jackson.map.SerializerProvider) -> findFilter
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
org.codehaus.jackson.map.ser.std.CalendarSerializer -> org.codehaus.jackson.map.ser.std.CalendarSerializer:
    org.codehaus.jackson.map.ser.std.CalendarSerializer instance -> instance
    void serialize(java.util.Calendar,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.CollectionSerializer -> org.codehaus.jackson.map.ser.std.CollectionSerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContentsUsing(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer) -> serializeContentsUsing
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.ContainerSerializerBase -> org.codehaus.jackson.map.ser.std.ContainerSerializerBase:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> withValueTypeSerializer
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
org.codehaus.jackson.map.ser.std.DateSerializer -> org.codehaus.jackson.map.ser.std.DateSerializer:
    org.codehaus.jackson.map.ser.std.DateSerializer instance -> instance
    void serialize(java.util.Date,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.EnumMapSerializer -> org.codehaus.jackson.map.ser.std.EnumMapSerializer:
    boolean _staticTyping -> _staticTyping
    org.codehaus.jackson.map.util.EnumValues _keyEnums -> _keyEnums
    org.codehaus.jackson.type.JavaType _valueType -> _valueType
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.map.JsonSerializer _valueSerializer -> _valueSerializer
    org.codehaus.jackson.map.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serialize(java.util.EnumMap,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.util.EnumMap,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeContents(java.util.EnumMap,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContentsUsing(java.util.EnumMap,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer) -> serializeContentsUsing
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.EnumSerializer -> org.codehaus.jackson.map.ser.std.EnumSerializer:
    org.codehaus.jackson.map.util.EnumValues _values -> _values
    org.codehaus.jackson.map.ser.std.EnumSerializer construct(java.lang.Class,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription) -> construct
    void serialize(java.lang.Enum,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    org.codehaus.jackson.map.util.EnumValues getEnumValues() -> getEnumValues
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.EnumSetSerializer -> org.codehaus.jackson.map.ser.std.EnumSetSerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.util.EnumSet,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.IndexedStringListSerializer -> org.codehaus.jackson.map.ser.std.IndexedStringListSerializer:
    org.codehaus.jackson.map.JsonSerializer _serializer -> _serializer
    org.codehaus.jackson.JsonNode contentSchema() -> contentSchema
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    void serialize(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeContents(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeUsingCustom(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeUsingCustom
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.InetAddressSerializer -> org.codehaus.jackson.map.ser.std.InetAddressSerializer:
    org.codehaus.jackson.map.ser.std.InetAddressSerializer instance -> instance
    void serialize(java.net.InetAddress,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.net.InetAddress,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.IterableSerializer -> org.codehaus.jackson.map.ser.std.IterableSerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.lang.Iterable,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.JsonValueSerializer -> org.codehaus.jackson.map.ser.std.JsonValueSerializer:
    java.lang.reflect.Method _accessorMethod -> _accessorMethod
    org.codehaus.jackson.map.JsonSerializer _valueSerializer -> _valueSerializer
    org.codehaus.jackson.map.BeanProperty _property -> _property
    boolean _forceTypeInformation -> _forceTypeInformation
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    boolean isNaturalTypeWithStdHandling(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer) -> isNaturalTypeWithStdHandling
    java.lang.String toString() -> toString
org.codehaus.jackson.map.ser.std.MapSerializer -> org.codehaus.jackson.map.ser.std.MapSerializer:
    org.codehaus.jackson.type.JavaType UNSPECIFIED_TYPE -> UNSPECIFIED_TYPE
    org.codehaus.jackson.map.BeanProperty _property -> _property
    java.util.HashSet _ignoredEntries -> _ignoredEntries
    boolean _valueTypeIsStatic -> _valueTypeIsStatic
    org.codehaus.jackson.type.JavaType _keyType -> _keyType
    org.codehaus.jackson.type.JavaType _valueType -> _valueType
    org.codehaus.jackson.map.JsonSerializer _keySerializer -> _keySerializer
    org.codehaus.jackson.map.JsonSerializer _valueSerializer -> _valueSerializer
    org.codehaus.jackson.map.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicValueSerializers -> _dynamicValueSerializers
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    org.codehaus.jackson.map.ser.std.MapSerializer construct(java.lang.String[],org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty) -> construct
    org.codehaus.jackson.map.ser.std.MapSerializer construct(java.lang.String[],org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.JsonSerializer) -> construct
    java.util.HashSet toSet(java.lang.String[]) -> toSet
    void serialize(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeFields(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeFields
    void serializeFieldsUsing(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer) -> serializeFieldsUsing
    void serializeTypedFields(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeTypedFields
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.NonTypedScalarSerializerBase -> org.codehaus.jackson.map.ser.std.NonTypedScalarSerializerBase:
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.NullSerializer -> org.codehaus.jackson.map.ser.std.NullSerializer:
    org.codehaus.jackson.map.ser.std.NullSerializer instance -> instance
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
org.codehaus.jackson.map.ser.std.ObjectArraySerializer -> org.codehaus.jackson.map.ser.std.ObjectArraySerializer:
    boolean _staticTyping -> _staticTyping
    org.codehaus.jackson.type.JavaType _elementType -> _elementType
    org.codehaus.jackson.map.JsonSerializer _elementSerializer -> _elementSerializer
    org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.lang.Object[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContentsUsing(java.lang.Object[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer) -> serializeContentsUsing
    void serializeTypedContents(java.lang.Object[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeTypedContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
    org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerProvider) -> _findAndAddDynamic
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.RawSerializer -> org.codehaus.jackson.map.ser.std.RawSerializer:
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
org.codehaus.jackson.map.ser.std.ScalarSerializerBase -> org.codehaus.jackson.map.ser.std.ScalarSerializerBase:
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
org.codehaus.jackson.map.ser.std.SerializableSerializer -> org.codehaus.jackson.map.ser.std.SerializableSerializer:
    org.codehaus.jackson.map.ser.std.SerializableSerializer instance -> instance
    void serialize(org.codehaus.jackson.map.JsonSerializable,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.map.JsonSerializable,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.SerializableWithTypeSerializer -> org.codehaus.jackson.map.ser.std.SerializableWithTypeSerializer:
    org.codehaus.jackson.map.ser.std.SerializableWithTypeSerializer instance -> instance
    void serialize(org.codehaus.jackson.map.JsonSerializableWithType,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.map.JsonSerializableWithType,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.SerializerBase -> org.codehaus.jackson.map.ser.std.SerializerBase:
    java.lang.Class _handledType -> _handledType
    java.lang.Class handledType() -> handledType
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    org.codehaus.jackson.node.ObjectNode createObjectNode() -> createObjectNode
    org.codehaus.jackson.node.ObjectNode createSchemaNode(java.lang.String) -> createSchemaNode
    org.codehaus.jackson.node.ObjectNode createSchemaNode(java.lang.String,boolean) -> createSchemaNode
    boolean isDefaultSerializer(org.codehaus.jackson.map.JsonSerializer) -> isDefaultSerializer
    void wrapAndThrow(org.codehaus.jackson.map.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapAndThrow
    void wrapAndThrow(org.codehaus.jackson.map.SerializerProvider,java.lang.Throwable,java.lang.Object,int) -> wrapAndThrow
    void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapAndThrow
    void wrapAndThrow(java.lang.Throwable,java.lang.Object,int) -> wrapAndThrow
org.codehaus.jackson.map.ser.std.StaticListSerializerBase -> org.codehaus.jackson.map.ser.std.StaticListSerializerBase:
    org.codehaus.jackson.map.BeanProperty _property -> _property
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    org.codehaus.jackson.JsonNode contentSchema() -> contentSchema
org.codehaus.jackson.map.ser.std.StdArraySerializers -> org.codehaus.jackson.map.ser.std.StdArraySerializers:
org.codehaus.jackson.map.ser.std.StdArraySerializers$ArraySerializerBase -> org.codehaus.jackson.map.ser.std.StdArraySerializers$ArraySerializerBase:
    org.codehaus.jackson.map.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    org.codehaus.jackson.map.BeanProperty _property -> _property
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$BooleanArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$BooleanArraySerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(boolean[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$ByteArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$ByteArraySerializer:
    void serialize(byte[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(byte[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.StdArraySerializers$CharArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$CharArraySerializer:
    void serialize(char[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(char[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void _writeArrayContents(org.codehaus.jackson.JsonGenerator,char[]) -> _writeArrayContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.StdArraySerializers$DoubleArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$DoubleArraySerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(double[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$FloatArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$FloatArraySerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(float[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$IntArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$IntArraySerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(int[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$LongArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$LongArraySerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(long[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$ShortArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$ShortArraySerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(short[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer -> org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer:
    org.codehaus.jackson.map.JsonSerializer _elementSerializer -> _elementSerializer
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.lang.String[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContentsSlow(java.lang.String[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer) -> serializeContentsSlow
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdContainerSerializers -> org.codehaus.jackson.map.ser.std.StdContainerSerializers:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase indexedListSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer) -> indexedListSerializer
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase collectionSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer) -> collectionSerializer
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase iteratorSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty) -> iteratorSerializer
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase iterableSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty) -> iterableSerializer
    org.codehaus.jackson.map.JsonSerializer enumSetSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty) -> enumSetSerializer
org.codehaus.jackson.map.ser.std.StdContainerSerializers$IndexedListSerializer -> org.codehaus.jackson.map.ser.std.StdContainerSerializers$IndexedListSerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContentsUsing(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer) -> serializeContentsUsing
    void serializeTypedContents(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeTypedContents
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdContainerSerializers$IteratorSerializer -> org.codehaus.jackson.map.ser.std.StdContainerSerializers$IteratorSerializer:
    org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.util.Iterator,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
org.codehaus.jackson.map.ser.std.StdJdkSerializers -> org.codehaus.jackson.map.ser.std.StdJdkSerializers:
    java.util.Collection provide() -> provide
org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicBooleanSerializer -> org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicBooleanSerializer:
    void serialize(java.util.concurrent.atomic.AtomicBoolean,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicIntegerSerializer -> org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicIntegerSerializer:
    void serialize(java.util.concurrent.atomic.AtomicInteger,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicLongSerializer -> org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicLongSerializer:
    void serialize(java.util.concurrent.atomic.AtomicLong,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicReferenceSerializer -> org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicReferenceSerializer:
    void serialize(java.util.concurrent.atomic.AtomicReference,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdJdkSerializers$ClassSerializer -> org.codehaus.jackson.map.ser.std.StdJdkSerializers$ClassSerializer:
    void serialize(java.lang.Class,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdJdkSerializers$FileSerializer -> org.codehaus.jackson.map.ser.std.StdJdkSerializers$FileSerializer:
    void serialize(java.io.File,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdKeySerializer -> org.codehaus.jackson.map.ser.std.StdKeySerializer:
    org.codehaus.jackson.map.ser.std.StdKeySerializer instace -> instace
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
org.codehaus.jackson.map.ser.std.StdKeySerializers -> org.codehaus.jackson.map.ser.std.StdKeySerializers:
    org.codehaus.jackson.map.JsonSerializer DEFAULT_KEY_SERIALIZER -> DEFAULT_KEY_SERIALIZER
    org.codehaus.jackson.map.JsonSerializer DEFAULT_STRING_SERIALIZER -> DEFAULT_STRING_SERIALIZER
    org.codehaus.jackson.map.JsonSerializer getStdKeySerializer(org.codehaus.jackson.type.JavaType) -> getStdKeySerializer
org.codehaus.jackson.map.ser.std.StdKeySerializers$CalendarKeySerializer -> org.codehaus.jackson.map.ser.std.StdKeySerializers$CalendarKeySerializer:
    org.codehaus.jackson.map.JsonSerializer instance -> instance
    void serialize(java.util.Calendar,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdKeySerializers$DateKeySerializer -> org.codehaus.jackson.map.ser.std.StdKeySerializers$DateKeySerializer:
    org.codehaus.jackson.map.JsonSerializer instance -> instance
    void serialize(java.util.Date,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StdKeySerializers$StringKeySerializer -> org.codehaus.jackson.map.ser.std.StdKeySerializers$StringKeySerializer:
    void serialize(java.lang.String,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.StringCollectionSerializer -> org.codehaus.jackson.map.ser.std.StringCollectionSerializer:
    org.codehaus.jackson.map.JsonSerializer _serializer -> _serializer
    org.codehaus.jackson.JsonNode contentSchema() -> contentSchema
    void resolve(org.codehaus.jackson.map.SerializerProvider) -> resolve
    void serialize(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeContents(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeContents
    void serializeUsingCustom(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serializeUsingCustom
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.ser.std.StringSerializer -> org.codehaus.jackson.map.ser.std.StringSerializer:
    void serialize(java.lang.String,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.TimeZoneSerializer -> org.codehaus.jackson.map.ser.std.TimeZoneSerializer:
    org.codehaus.jackson.map.ser.std.TimeZoneSerializer instance -> instance
    void serialize(java.util.TimeZone,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.util.TimeZone,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
org.codehaus.jackson.map.ser.std.ToStringSerializer -> org.codehaus.jackson.map.ser.std.ToStringSerializer:
    org.codehaus.jackson.map.ser.std.ToStringSerializer instance -> instance
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
org.codehaus.jackson.map.ser.std.TokenBufferSerializer -> org.codehaus.jackson.map.ser.std.TokenBufferSerializer:
    void serialize(org.codehaus.jackson.util.TokenBuffer,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.util.TokenBuffer,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
org.codehaus.jackson.map.type.ArrayType -> org.codehaus.jackson.map.type.ArrayType:
    org.codehaus.jackson.type.JavaType _componentType -> _componentType
    java.lang.Object _emptyArray -> _emptyArray
    org.codehaus.jackson.map.type.ArrayType construct(org.codehaus.jackson.type.JavaType) -> construct
    org.codehaus.jackson.map.type.ArrayType construct(org.codehaus.jackson.type.JavaType,java.lang.Object,java.lang.Object) -> construct
    org.codehaus.jackson.map.type.ArrayType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.map.type.ArrayType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.ArrayType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.ArrayType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    java.lang.String buildCanonicalName() -> buildCanonicalName
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    boolean isArrayType() -> isArrayType
    boolean isAbstract() -> isAbstract
    boolean isConcrete() -> isConcrete
    boolean hasGenericTypes() -> hasGenericTypes
    java.lang.String containedTypeName(int) -> containedTypeName
    boolean isContainerType() -> isContainerType
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    int containedTypeCount() -> containedTypeCount
    org.codehaus.jackson.type.JavaType containedType(int) -> containedType
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
org.codehaus.jackson.map.type.ClassKey -> org.codehaus.jackson.map.type.ClassKey:
    java.lang.String _className -> _className
    java.lang.Class _class -> _class
    int _hashCode -> _hashCode
    void reset(java.lang.Class) -> reset
    int compareTo(org.codehaus.jackson.map.type.ClassKey) -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
org.codehaus.jackson.map.type.CollectionLikeType -> org.codehaus.jackson.map.type.CollectionLikeType:
    org.codehaus.jackson.type.JavaType _elementType -> _elementType
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    org.codehaus.jackson.map.type.CollectionLikeType construct(java.lang.Class,org.codehaus.jackson.type.JavaType) -> construct
    org.codehaus.jackson.map.type.CollectionLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.map.type.CollectionLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.CollectionLikeType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.CollectionLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    boolean isContainerType() -> isContainerType
    boolean isCollectionLikeType() -> isCollectionLikeType
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    int containedTypeCount() -> containedTypeCount
    org.codehaus.jackson.type.JavaType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.String buildCanonicalName() -> buildCanonicalName
    boolean isTrueCollectionType() -> isTrueCollectionType
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
org.codehaus.jackson.map.type.CollectionType -> org.codehaus.jackson.map.type.CollectionType:
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    org.codehaus.jackson.map.type.CollectionType construct(java.lang.Class,org.codehaus.jackson.type.JavaType) -> construct
    org.codehaus.jackson.map.type.CollectionType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.map.type.CollectionType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.CollectionType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.CollectionType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    java.lang.String toString() -> toString
    org.codehaus.jackson.map.type.CollectionLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.map.type.CollectionLikeType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.CollectionLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.CollectionLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
org.codehaus.jackson.map.type.HierarchicType -> org.codehaus.jackson.map.type.HierarchicType:
    java.lang.reflect.Type _actualType -> _actualType
    java.lang.Class _rawClass -> _rawClass
    java.lang.reflect.ParameterizedType _genericType -> _genericType
    org.codehaus.jackson.map.type.HierarchicType _superType -> _superType
    org.codehaus.jackson.map.type.HierarchicType _subType -> _subType
    org.codehaus.jackson.map.type.HierarchicType deepCloneWithoutSubtype() -> deepCloneWithoutSubtype
    void setSuperType(org.codehaus.jackson.map.type.HierarchicType) -> setSuperType
    org.codehaus.jackson.map.type.HierarchicType getSuperType() -> getSuperType
    void setSubType(org.codehaus.jackson.map.type.HierarchicType) -> setSubType
    org.codehaus.jackson.map.type.HierarchicType getSubType() -> getSubType
    boolean isGeneric() -> isGeneric
    java.lang.reflect.ParameterizedType asGeneric() -> asGeneric
    java.lang.Class getRawClass() -> getRawClass
    java.lang.String toString() -> toString
org.codehaus.jackson.map.type.MapLikeType -> org.codehaus.jackson.map.type.MapLikeType:
    org.codehaus.jackson.type.JavaType _keyType -> _keyType
    org.codehaus.jackson.type.JavaType _valueType -> _valueType
    org.codehaus.jackson.map.type.MapLikeType construct(java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType) -> construct
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    org.codehaus.jackson.type.JavaType narrowKey(java.lang.Class) -> narrowKey
    org.codehaus.jackson.type.JavaType widenKey(java.lang.Class) -> widenKey
    org.codehaus.jackson.map.type.MapLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.map.type.MapLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.MapLikeType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.MapLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    java.lang.String buildCanonicalName() -> buildCanonicalName
    boolean isContainerType() -> isContainerType
    boolean isMapLikeType() -> isMapLikeType
    org.codehaus.jackson.type.JavaType getKeyType() -> getKeyType
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    int containedTypeCount() -> containedTypeCount
    org.codehaus.jackson.type.JavaType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    org.codehaus.jackson.map.type.MapLikeType withKeyTypeHandler(java.lang.Object) -> withKeyTypeHandler
    org.codehaus.jackson.map.type.MapLikeType withKeyValueHandler(java.lang.Object) -> withKeyValueHandler
    boolean isTrueMapType() -> isTrueMapType
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
org.codehaus.jackson.map.type.MapType -> org.codehaus.jackson.map.type.MapType:
    org.codehaus.jackson.map.type.MapType construct(java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType) -> construct
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    org.codehaus.jackson.type.JavaType narrowKey(java.lang.Class) -> narrowKey
    org.codehaus.jackson.type.JavaType widenKey(java.lang.Class) -> widenKey
    org.codehaus.jackson.map.type.MapType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.map.type.MapType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.MapType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.MapType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.map.type.MapType withKeyTypeHandler(java.lang.Object) -> withKeyTypeHandler
    org.codehaus.jackson.map.type.MapType withKeyValueHandler(java.lang.Object) -> withKeyValueHandler
    java.lang.String toString() -> toString
    org.codehaus.jackson.map.type.MapLikeType withKeyValueHandler(java.lang.Object) -> withKeyValueHandler
    org.codehaus.jackson.map.type.MapLikeType withKeyTypeHandler(java.lang.Object) -> withKeyTypeHandler
    org.codehaus.jackson.map.type.MapLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.map.type.MapLikeType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.MapLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.MapLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
org.codehaus.jackson.map.type.SimpleType -> org.codehaus.jackson.map.type.SimpleType:
    org.codehaus.jackson.type.JavaType[] _typeParameters -> _typeParameters
    java.lang.String[] _typeNames -> _typeNames
    org.codehaus.jackson.map.type.SimpleType constructUnsafe(java.lang.Class) -> constructUnsafe
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    org.codehaus.jackson.map.type.SimpleType construct(java.lang.Class) -> construct
    org.codehaus.jackson.map.type.SimpleType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.map.type.SimpleType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.map.type.SimpleType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    java.lang.String buildCanonicalName() -> buildCanonicalName
    boolean isContainerType() -> isContainerType
    int containedTypeCount() -> containedTypeCount
    org.codehaus.jackson.type.JavaType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
org.codehaus.jackson.map.type.TypeBase -> org.codehaus.jackson.map.type.TypeBase:
    java.lang.String _canonicalName -> _canonicalName
    java.lang.String toCanonical() -> toCanonical
    java.lang.String buildCanonicalName() -> buildCanonicalName
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.Object getValueHandler() -> getValueHandler
    java.lang.Object getTypeHandler() -> getTypeHandler
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    java.lang.StringBuilder _classSignature(java.lang.Class,java.lang.StringBuilder,boolean) -> _classSignature
org.codehaus.jackson.map.type.TypeBindings -> org.codehaus.jackson.map.type.TypeBindings:
    org.codehaus.jackson.type.JavaType[] NO_TYPES -> NO_TYPES
    org.codehaus.jackson.type.JavaType UNBOUND -> UNBOUND
    org.codehaus.jackson.map.type.TypeFactory _typeFactory -> _typeFactory
    org.codehaus.jackson.type.JavaType _contextType -> _contextType
    java.lang.Class _contextClass -> _contextClass
    java.util.Map _bindings -> _bindings
    java.util.HashSet _placeholders -> _placeholders
    org.codehaus.jackson.map.type.TypeBindings _parentBindings -> _parentBindings
    org.codehaus.jackson.map.type.TypeBindings childInstance() -> childInstance
    org.codehaus.jackson.type.JavaType resolveType(java.lang.Class) -> resolveType
    org.codehaus.jackson.type.JavaType resolveType(java.lang.reflect.Type) -> resolveType
    int getBindingCount() -> getBindingCount
    org.codehaus.jackson.type.JavaType findType(java.lang.String) -> findType
    void addBinding(java.lang.String,org.codehaus.jackson.type.JavaType) -> addBinding
    org.codehaus.jackson.type.JavaType[] typesAsArray() -> typesAsArray
    void _resolve() -> _resolve
    void _addPlaceholder(java.lang.String) -> _addPlaceholder
    void _resolveBindings(java.lang.reflect.Type) -> _resolveBindings
    java.lang.String toString() -> toString
org.codehaus.jackson.map.type.TypeFactory -> org.codehaus.jackson.map.type.TypeFactory:
    org.codehaus.jackson.map.type.TypeFactory instance -> instance
    org.codehaus.jackson.type.JavaType[] NO_TYPES -> NO_TYPES
    org.codehaus.jackson.map.type.TypeModifier[] _modifiers -> _modifiers
    org.codehaus.jackson.map.type.TypeParser _parser -> _parser
    org.codehaus.jackson.map.type.HierarchicType _cachedHashMapType -> _cachedHashMapType
    org.codehaus.jackson.map.type.HierarchicType _cachedArrayListType -> _cachedArrayListType
    org.codehaus.jackson.map.type.TypeFactory withModifier(org.codehaus.jackson.map.type.TypeModifier) -> withModifier
    org.codehaus.jackson.map.type.TypeFactory defaultInstance() -> defaultInstance
    org.codehaus.jackson.type.JavaType unknownType() -> unknownType
    java.lang.Class rawClass(java.lang.reflect.Type) -> rawClass
    org.codehaus.jackson.type.JavaType type(java.lang.reflect.Type) -> type
    org.codehaus.jackson.type.JavaType type(java.lang.reflect.Type,java.lang.Class) -> type
    org.codehaus.jackson.type.JavaType type(java.lang.reflect.Type,org.codehaus.jackson.type.JavaType) -> type
    org.codehaus.jackson.type.JavaType type(java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings) -> type
    org.codehaus.jackson.type.JavaType type(org.codehaus.jackson.type.TypeReference) -> type
    org.codehaus.jackson.type.JavaType arrayType(java.lang.Class) -> arrayType
    org.codehaus.jackson.type.JavaType arrayType(org.codehaus.jackson.type.JavaType) -> arrayType
    org.codehaus.jackson.type.JavaType collectionType(java.lang.Class,java.lang.Class) -> collectionType
    org.codehaus.jackson.type.JavaType collectionType(java.lang.Class,org.codehaus.jackson.type.JavaType) -> collectionType
    org.codehaus.jackson.type.JavaType mapType(java.lang.Class,java.lang.Class,java.lang.Class) -> mapType
    org.codehaus.jackson.type.JavaType mapType(java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType) -> mapType
    org.codehaus.jackson.type.JavaType parametricType(java.lang.Class,java.lang.Class[]) -> parametricType
    org.codehaus.jackson.type.JavaType parametricType(java.lang.Class,org.codehaus.jackson.type.JavaType[]) -> parametricType
    org.codehaus.jackson.type.JavaType fromCanonical(java.lang.String) -> fromCanonical
    org.codehaus.jackson.type.JavaType specialize(org.codehaus.jackson.type.JavaType,java.lang.Class) -> specialize
    org.codehaus.jackson.type.JavaType fastSimpleType(java.lang.Class) -> fastSimpleType
    org.codehaus.jackson.type.JavaType[] findParameterTypes(java.lang.Class,java.lang.Class) -> findParameterTypes
    org.codehaus.jackson.type.JavaType[] findParameterTypes(java.lang.Class,java.lang.Class,org.codehaus.jackson.map.type.TypeBindings) -> findParameterTypes
    org.codehaus.jackson.type.JavaType[] findParameterTypes(org.codehaus.jackson.type.JavaType,java.lang.Class) -> findParameterTypes
    org.codehaus.jackson.type.JavaType fromClass(java.lang.Class) -> fromClass
    org.codehaus.jackson.type.JavaType fromTypeReference(org.codehaus.jackson.type.TypeReference) -> fromTypeReference
    org.codehaus.jackson.type.JavaType fromType(java.lang.reflect.Type) -> fromType
    org.codehaus.jackson.type.JavaType constructSpecializedType(org.codehaus.jackson.type.JavaType,java.lang.Class) -> constructSpecializedType
    org.codehaus.jackson.type.JavaType constructFromCanonical(java.lang.String) -> constructFromCanonical
    org.codehaus.jackson.type.JavaType[] findTypeParameters(org.codehaus.jackson.type.JavaType,java.lang.Class) -> findTypeParameters
    org.codehaus.jackson.type.JavaType[] findTypeParameters(java.lang.Class,java.lang.Class) -> findTypeParameters
    org.codehaus.jackson.type.JavaType[] findTypeParameters(java.lang.Class,java.lang.Class,org.codehaus.jackson.map.type.TypeBindings) -> findTypeParameters
    org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type) -> constructType
    org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings) -> constructType
    org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference) -> constructType
    org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type,java.lang.Class) -> constructType
    org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type,org.codehaus.jackson.type.JavaType) -> constructType
    org.codehaus.jackson.type.JavaType _constructType(java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings) -> _constructType
    org.codehaus.jackson.map.type.ArrayType constructArrayType(java.lang.Class) -> constructArrayType
    org.codehaus.jackson.map.type.ArrayType constructArrayType(org.codehaus.jackson.type.JavaType) -> constructArrayType
    org.codehaus.jackson.map.type.CollectionType constructCollectionType(java.lang.Class,java.lang.Class) -> constructCollectionType
    org.codehaus.jackson.map.type.CollectionType constructCollectionType(java.lang.Class,org.codehaus.jackson.type.JavaType) -> constructCollectionType
    org.codehaus.jackson.map.type.CollectionLikeType constructCollectionLikeType(java.lang.Class,java.lang.Class) -> constructCollectionLikeType
    org.codehaus.jackson.map.type.CollectionLikeType constructCollectionLikeType(java.lang.Class,org.codehaus.jackson.type.JavaType) -> constructCollectionLikeType
    org.codehaus.jackson.map.type.MapType constructMapType(java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType) -> constructMapType
    org.codehaus.jackson.map.type.MapType constructMapType(java.lang.Class,java.lang.Class,java.lang.Class) -> constructMapType
    org.codehaus.jackson.map.type.MapLikeType constructMapLikeType(java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType) -> constructMapLikeType
    org.codehaus.jackson.map.type.MapLikeType constructMapLikeType(java.lang.Class,java.lang.Class,java.lang.Class) -> constructMapLikeType
    org.codehaus.jackson.type.JavaType constructSimpleType(java.lang.Class,org.codehaus.jackson.type.JavaType[]) -> constructSimpleType
    org.codehaus.jackson.type.JavaType uncheckedSimpleType(java.lang.Class) -> uncheckedSimpleType
    org.codehaus.jackson.type.JavaType constructParametricType(java.lang.Class,java.lang.Class[]) -> constructParametricType
    org.codehaus.jackson.type.JavaType constructParametricType(java.lang.Class,org.codehaus.jackson.type.JavaType[]) -> constructParametricType
    org.codehaus.jackson.map.type.CollectionType constructRawCollectionType(java.lang.Class) -> constructRawCollectionType
    org.codehaus.jackson.map.type.CollectionLikeType constructRawCollectionLikeType(java.lang.Class) -> constructRawCollectionLikeType
    org.codehaus.jackson.map.type.MapType constructRawMapType(java.lang.Class) -> constructRawMapType
    org.codehaus.jackson.map.type.MapLikeType constructRawMapLikeType(java.lang.Class) -> constructRawMapLikeType
    org.codehaus.jackson.type.JavaType _fromClass(java.lang.Class,org.codehaus.jackson.map.type.TypeBindings) -> _fromClass
    org.codehaus.jackson.type.JavaType _fromParameterizedClass(java.lang.Class,java.util.List) -> _fromParameterizedClass
    org.codehaus.jackson.type.JavaType _fromParamType(java.lang.reflect.ParameterizedType,org.codehaus.jackson.map.type.TypeBindings) -> _fromParamType
    org.codehaus.jackson.type.JavaType _fromArrayType(java.lang.reflect.GenericArrayType,org.codehaus.jackson.map.type.TypeBindings) -> _fromArrayType
    org.codehaus.jackson.type.JavaType _fromVariable(java.lang.reflect.TypeVariable,org.codehaus.jackson.map.type.TypeBindings) -> _fromVariable
    org.codehaus.jackson.type.JavaType _fromWildcard(java.lang.reflect.WildcardType,org.codehaus.jackson.map.type.TypeBindings) -> _fromWildcard
    org.codehaus.jackson.type.JavaType _mapType(java.lang.Class) -> _mapType
    org.codehaus.jackson.type.JavaType _collectionType(java.lang.Class) -> _collectionType
    org.codehaus.jackson.type.JavaType _resolveVariableViaSubTypes(org.codehaus.jackson.map.type.HierarchicType,java.lang.String,org.codehaus.jackson.map.type.TypeBindings) -> _resolveVariableViaSubTypes
    org.codehaus.jackson.type.JavaType _unknownType() -> _unknownType
    org.codehaus.jackson.map.type.HierarchicType _findSuperTypeChain(java.lang.Class,java.lang.Class) -> _findSuperTypeChain
    org.codehaus.jackson.map.type.HierarchicType _findSuperClassChain(java.lang.reflect.Type,java.lang.Class) -> _findSuperClassChain
    org.codehaus.jackson.map.type.HierarchicType _findSuperInterfaceChain(java.lang.reflect.Type,java.lang.Class) -> _findSuperInterfaceChain
    org.codehaus.jackson.map.type.HierarchicType _doFindSuperInterfaceChain(org.codehaus.jackson.map.type.HierarchicType,java.lang.Class) -> _doFindSuperInterfaceChain
    org.codehaus.jackson.map.type.HierarchicType _hashMapSuperInterfaceChain(org.codehaus.jackson.map.type.HierarchicType) -> _hashMapSuperInterfaceChain
    org.codehaus.jackson.map.type.HierarchicType _arrayListSuperInterfaceChain(org.codehaus.jackson.map.type.HierarchicType) -> _arrayListSuperInterfaceChain
org.codehaus.jackson.map.type.TypeModifier -> org.codehaus.jackson.map.type.TypeModifier:
    org.codehaus.jackson.type.JavaType modifyType(org.codehaus.jackson.type.JavaType,java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings,org.codehaus.jackson.map.type.TypeFactory) -> modifyType
org.codehaus.jackson.map.type.TypeParser -> org.codehaus.jackson.map.type.TypeParser:
    org.codehaus.jackson.map.type.TypeFactory _factory -> _factory
    org.codehaus.jackson.type.JavaType parse(java.lang.String) -> parse
    org.codehaus.jackson.type.JavaType parseType(org.codehaus.jackson.map.type.TypeParser$MyTokenizer) -> parseType
    java.util.List parseTypes(org.codehaus.jackson.map.type.TypeParser$MyTokenizer) -> parseTypes
    java.lang.Class findClass(java.lang.String,org.codehaus.jackson.map.type.TypeParser$MyTokenizer) -> findClass
    java.lang.IllegalArgumentException _problem(org.codehaus.jackson.map.type.TypeParser$MyTokenizer,java.lang.String) -> _problem
org.codehaus.jackson.map.type.TypeParser$MyTokenizer -> org.codehaus.jackson.map.type.TypeParser$MyTokenizer:
    java.lang.String _input -> _input
    int _index -> _index
    java.lang.String _pushbackToken -> _pushbackToken
    boolean hasMoreTokens() -> hasMoreTokens
    java.lang.String nextToken() -> nextToken
    void pushBack(java.lang.String) -> pushBack
    java.lang.String getAllInput() -> getAllInput
    java.lang.String getUsedInput() -> getUsedInput
    java.lang.String getRemainingInput() -> getRemainingInput
org.codehaus.jackson.map.util.Annotations -> org.codehaus.jackson.map.util.Annotations:
    java.lang.annotation.Annotation get(java.lang.Class) -> get
    int size() -> size
org.codehaus.jackson.map.util.ArrayBuilders -> org.codehaus.jackson.map.util.ArrayBuilders:
    org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder _booleanBuilder -> _booleanBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder _byteBuilder -> _byteBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder _shortBuilder -> _shortBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder _intBuilder -> _intBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder _longBuilder -> _longBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder _floatBuilder -> _floatBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder _doubleBuilder -> _doubleBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder getBooleanBuilder() -> getBooleanBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder getByteBuilder() -> getByteBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder getShortBuilder() -> getShortBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder getIntBuilder() -> getIntBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder getLongBuilder() -> getLongBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder getFloatBuilder() -> getFloatBuilder
    org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder getDoubleBuilder() -> getDoubleBuilder
    java.util.HashSet arrayToSet(java.lang.Object[]) -> arrayToSet
    java.util.List addToList(java.util.List,java.lang.Object) -> addToList
    java.lang.Object[] insertInList(java.lang.Object[],java.lang.Object) -> insertInList
    java.lang.Object[] insertInListNoDup(java.lang.Object[],java.lang.Object) -> insertInListNoDup
    java.util.Iterator arrayAsIterator(java.lang.Object[]) -> arrayAsIterator
    java.lang.Iterable arrayAsIterable(java.lang.Object[]) -> arrayAsIterable
org.codehaus.jackson.map.util.ArrayBuilders$ArrayIterator -> org.codehaus.jackson.map.util.ArrayBuilders$ArrayIterator:
    java.lang.Object[] _array -> _array
    int _index -> _index
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    java.util.Iterator iterator() -> iterator
org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder:
    boolean[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder:
    byte[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder:
    double[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder:
    float[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder:
    int[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder:
    long[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder -> org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder:
    short[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
org.codehaus.jackson.map.util.BeanUtil -> org.codehaus.jackson.map.util.BeanUtil:
    java.lang.String okNameForGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> okNameForGetter
    java.lang.String okNameForRegularGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String) -> okNameForRegularGetter
    java.lang.String okNameForIsGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String) -> okNameForIsGetter
    java.lang.String okNameForSetter(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> okNameForSetter
    boolean isCglibGetCallbacks(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isCglibGetCallbacks
    boolean isGroovyMetaClassSetter(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isGroovyMetaClassSetter
    boolean isGroovyMetaClassGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod) -> isGroovyMetaClassGetter
    java.lang.String manglePropertyName(java.lang.String) -> manglePropertyName
org.codehaus.jackson.map.util.ClassUtil -> org.codehaus.jackson.map.util.ClassUtil:
    java.util.List findSuperTypes(java.lang.Class,java.lang.Class) -> findSuperTypes
    java.util.List findSuperTypes(java.lang.Class,java.lang.Class,java.util.List) -> findSuperTypes
    void _addSuperTypes(java.lang.Class,java.lang.Class,java.util.Collection,boolean) -> _addSuperTypes
    java.lang.String canBeABeanType(java.lang.Class) -> canBeABeanType
    java.lang.String isLocalType(java.lang.Class) -> isLocalType
    java.lang.String isLocalType(java.lang.Class,boolean) -> isLocalType
    java.lang.Class getOuterClass(java.lang.Class) -> getOuterClass
    boolean isProxyType(java.lang.Class) -> isProxyType
    boolean isConcrete(java.lang.Class) -> isConcrete
    boolean isConcrete(java.lang.reflect.Member) -> isConcrete
    boolean isCollectionMapOrArray(java.lang.Class) -> isCollectionMapOrArray
    java.lang.String getClassDescription(java.lang.Object) -> getClassDescription
    java.lang.Class findClass(java.lang.String) -> findClass
    boolean hasGetterSignature(java.lang.reflect.Method) -> hasGetterSignature
    java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    void throwRootCause(java.lang.Throwable) -> throwRootCause
    void throwAsIAE(java.lang.Throwable) -> throwAsIAE
    void throwAsIAE(java.lang.Throwable,java.lang.String) -> throwAsIAE
    void unwrapAndThrowAsIAE(java.lang.Throwable) -> unwrapAndThrowAsIAE
    void unwrapAndThrowAsIAE(java.lang.Throwable,java.lang.String) -> unwrapAndThrowAsIAE
    java.lang.Object createInstance(java.lang.Class,boolean) -> createInstance
    java.lang.reflect.Constructor findConstructor(java.lang.Class,boolean) -> findConstructor
    java.lang.Object defaultValue(java.lang.Class) -> defaultValue
    java.lang.Class wrapperType(java.lang.Class) -> wrapperType
    void checkAndFixAccess(java.lang.reflect.Member) -> checkAndFixAccess
    java.lang.Class findEnumType(java.util.EnumSet) -> findEnumType
    java.lang.Class findEnumType(java.util.EnumMap) -> findEnumType
    java.lang.Class findEnumType(java.lang.Enum) -> findEnumType
    java.lang.Class findEnumType(java.lang.Class) -> findEnumType
org.codehaus.jackson.map.util.ClassUtil$EnumTypeLocator -> org.codehaus.jackson.map.util.ClassUtil$EnumTypeLocator:
    org.codehaus.jackson.map.util.ClassUtil$EnumTypeLocator instance -> instance
    java.lang.reflect.Field enumSetTypeField -> enumSetTypeField
    java.lang.reflect.Field enumMapTypeField -> enumMapTypeField
    java.lang.Class enumTypeFor(java.util.EnumSet) -> enumTypeFor
    java.lang.Class enumTypeFor(java.util.EnumMap) -> enumTypeFor
    java.lang.Object get(java.lang.Object,java.lang.reflect.Field) -> get
    java.lang.reflect.Field locateField(java.lang.Class,java.lang.String,java.lang.Class) -> locateField
org.codehaus.jackson.map.util.Comparators -> org.codehaus.jackson.map.util.Comparators:
    java.lang.Object getArrayComparator(java.lang.Object) -> getArrayComparator
org.codehaus.jackson.map.util.Comparators$1 -> org.codehaus.jackson.map.util.Comparators$1:
    java.lang.Object val$defaultValue -> val$defaultValue
    int val$length -> val$length
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.map.util.EnumResolver -> org.codehaus.jackson.map.util.EnumResolver:
    java.lang.Class _enumClass -> _enumClass
    java.lang.Enum[] _enums -> _enums
    java.util.HashMap _enumsById -> _enumsById
    org.codehaus.jackson.map.util.EnumResolver constructFor(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector) -> constructFor
    org.codehaus.jackson.map.util.EnumResolver constructUsingToString(java.lang.Class) -> constructUsingToString
    org.codehaus.jackson.map.util.EnumResolver constructUnsafe(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector) -> constructUnsafe
    org.codehaus.jackson.map.util.EnumResolver constructUnsafeUsingToString(java.lang.Class) -> constructUnsafeUsingToString
    java.lang.Enum findEnum(java.lang.String) -> findEnum
    java.lang.Enum getEnum(int) -> getEnum
    java.lang.Class getEnumClass() -> getEnumClass
    int lastValidIndex() -> lastValidIndex
org.codehaus.jackson.map.util.EnumValues -> org.codehaus.jackson.map.util.EnumValues:
    java.util.EnumMap _values -> _values
    org.codehaus.jackson.map.util.EnumValues construct(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector) -> construct
    org.codehaus.jackson.map.util.EnumValues constructFromName(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector) -> constructFromName
    org.codehaus.jackson.map.util.EnumValues constructFromToString(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector) -> constructFromToString
    java.lang.String valueFor(java.lang.Enum) -> valueFor
    org.codehaus.jackson.io.SerializedString serializedValueFor(java.lang.Enum) -> serializedValueFor
    java.util.Collection values() -> values
org.codehaus.jackson.map.util.ISO8601DateFormat -> org.codehaus.jackson.map.util.ISO8601DateFormat:
    long serialVersionUID -> serialVersionUID
    java.util.Calendar CALENDAR -> CALENDAR
    java.text.NumberFormat NUMBER_FORMAT -> NUMBER_FORMAT
    java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    java.lang.Object clone() -> clone
org.codehaus.jackson.map.util.ISO8601Utils -> org.codehaus.jackson.map.util.ISO8601Utils:
    java.lang.String GMT_ID -> GMT_ID
    java.util.TimeZone TIMEZONE_GMT -> TIMEZONE_GMT
    java.lang.String format(java.util.Date) -> format
    java.lang.String format(java.util.Date,boolean) -> format
    java.lang.String format(java.util.Date,boolean,java.util.TimeZone) -> format
    java.util.Date parse(java.lang.String) -> parse
    void checkOffset(java.lang.String,int,char) -> checkOffset
    int parseInt(java.lang.String,int,int) -> parseInt
    void padInt(java.lang.StringBuilder,int,int) -> padInt
org.codehaus.jackson.map.util.JSONPObject -> org.codehaus.jackson.map.util.JSONPObject:
    java.lang.String _function -> _function
    java.lang.Object _value -> _value
    org.codehaus.jackson.type.JavaType _serializationType -> _serializationType
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    java.lang.String getFunction() -> getFunction
    java.lang.Object getValue() -> getValue
    org.codehaus.jackson.type.JavaType getSerializationType() -> getSerializationType
org.codehaus.jackson.map.util.JSONWrappedObject -> org.codehaus.jackson.map.util.JSONWrappedObject:
    java.lang.String _prefix -> _prefix
    java.lang.String _suffix -> _suffix
    java.lang.Object _value -> _value
    org.codehaus.jackson.type.JavaType _serializationType -> _serializationType
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    java.lang.String getPrefix() -> getPrefix
    java.lang.String getSuffix() -> getSuffix
    java.lang.Object getValue() -> getValue
    org.codehaus.jackson.type.JavaType getSerializationType() -> getSerializationType
org.codehaus.jackson.map.util.LRUMap -> org.codehaus.jackson.map.util.LRUMap:
    int _maxEntries -> _maxEntries
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
org.codehaus.jackson.map.util.LinkedNode -> org.codehaus.jackson.map.util.LinkedNode:
    java.lang.Object _value -> _value
    org.codehaus.jackson.map.util.LinkedNode _next -> _next
    org.codehaus.jackson.map.util.LinkedNode next() -> next
    java.lang.Object value() -> value
    boolean contains(org.codehaus.jackson.map.util.LinkedNode,java.lang.Object) -> contains
org.codehaus.jackson.map.util.Named -> org.codehaus.jackson.map.util.Named:
    java.lang.String getName() -> getName
org.codehaus.jackson.map.util.ObjectBuffer -> org.codehaus.jackson.map.util.ObjectBuffer:
    int INITIAL_CHUNK_SIZE -> INITIAL_CHUNK_SIZE
    int SMALL_CHUNK_SIZE -> SMALL_CHUNK_SIZE
    int MAX_CHUNK_SIZE -> MAX_CHUNK_SIZE
    org.codehaus.jackson.map.util.ObjectBuffer$Node _bufferHead -> _bufferHead
    org.codehaus.jackson.map.util.ObjectBuffer$Node _bufferTail -> _bufferTail
    int _bufferedEntryCount -> _bufferedEntryCount
    java.lang.Object[] _freeBuffer -> _freeBuffer
    java.lang.Object[] resetAndStart() -> resetAndStart
    java.lang.Object[] appendCompletedChunk(java.lang.Object[]) -> appendCompletedChunk
    java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int) -> completeAndClearBuffer
    java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int,java.lang.Class) -> completeAndClearBuffer
    void completeAndClearBuffer(java.lang.Object[],int,java.util.List) -> completeAndClearBuffer
    int initialCapacity() -> initialCapacity
    int bufferedSize() -> bufferedSize
    void _reset() -> _reset
    void _copyTo(java.lang.Object,int,java.lang.Object[],int) -> _copyTo
org.codehaus.jackson.map.util.ObjectBuffer$Node -> org.codehaus.jackson.map.util.ObjectBuffer$Node:
    java.lang.Object[] _data -> _data
    org.codehaus.jackson.map.util.ObjectBuffer$Node _next -> _next
    java.lang.Object[] getData() -> getData
    org.codehaus.jackson.map.util.ObjectBuffer$Node next() -> next
    void linkNext(org.codehaus.jackson.map.util.ObjectBuffer$Node) -> linkNext
org.codehaus.jackson.map.util.PrimitiveArrayBuilder -> org.codehaus.jackson.map.util.PrimitiveArrayBuilder:
    int INITIAL_CHUNK_SIZE -> INITIAL_CHUNK_SIZE
    int SMALL_CHUNK_SIZE -> SMALL_CHUNK_SIZE
    int MAX_CHUNK_SIZE -> MAX_CHUNK_SIZE
    java.lang.Object _freeBuffer -> _freeBuffer
    org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node _bufferHead -> _bufferHead
    org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node _bufferTail -> _bufferTail
    int _bufferedEntryCount -> _bufferedEntryCount
    java.lang.Object resetAndStart() -> resetAndStart
    java.lang.Object appendCompletedChunk(java.lang.Object,int) -> appendCompletedChunk
    java.lang.Object completeAndClearBuffer(java.lang.Object,int) -> completeAndClearBuffer
    java.lang.Object _constructArray(int) -> _constructArray
    void _reset() -> _reset
org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node -> org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node:
    java.lang.Object _data -> _data
    int _dataLength -> _dataLength
    org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node _next -> _next
    java.lang.Object getData() -> getData
    int copyData(java.lang.Object,int) -> copyData
    org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node next() -> next
    void linkNext(org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node) -> linkNext
org.codehaus.jackson.map.util.Provider -> org.codehaus.jackson.map.util.Provider:
    java.util.Collection provide() -> provide
org.codehaus.jackson.map.util.RootNameLookup -> org.codehaus.jackson.map.util.RootNameLookup:
    org.codehaus.jackson.map.util.LRUMap _rootNames -> _rootNames
    org.codehaus.jackson.io.SerializedString findRootName(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.MapperConfig) -> findRootName
    org.codehaus.jackson.io.SerializedString findRootName(java.lang.Class,org.codehaus.jackson.map.MapperConfig) -> findRootName
org.codehaus.jackson.map.util.StdDateFormat -> org.codehaus.jackson.map.util.StdDateFormat:
    java.lang.String DATE_FORMAT_STR_ISO8601 -> DATE_FORMAT_STR_ISO8601
    java.lang.String DATE_FORMAT_STR_ISO8601_Z -> DATE_FORMAT_STR_ISO8601_Z
    java.lang.String DATE_FORMAT_STR_PLAIN -> DATE_FORMAT_STR_PLAIN
    java.lang.String DATE_FORMAT_STR_RFC1123 -> DATE_FORMAT_STR_RFC1123
    java.lang.String[] ALL_FORMATS -> ALL_FORMATS
    java.text.DateFormat DATE_FORMAT_RFC1123 -> DATE_FORMAT_RFC1123
    java.text.DateFormat DATE_FORMAT_ISO8601 -> DATE_FORMAT_ISO8601
    java.text.DateFormat DATE_FORMAT_ISO8601_Z -> DATE_FORMAT_ISO8601_Z
    java.text.DateFormat DATE_FORMAT_PLAIN -> DATE_FORMAT_PLAIN
    org.codehaus.jackson.map.util.StdDateFormat instance -> instance
    java.text.DateFormat _formatRFC1123 -> _formatRFC1123
    java.text.DateFormat _formatISO8601 -> _formatISO8601
    java.text.DateFormat _formatISO8601_z -> _formatISO8601_z
    java.text.DateFormat _formatPlain -> _formatPlain
    org.codehaus.jackson.map.util.StdDateFormat clone() -> clone
    java.text.DateFormat getBlueprintISO8601Format() -> getBlueprintISO8601Format
    java.text.DateFormat getISO8601Format(java.util.TimeZone) -> getISO8601Format
    java.text.DateFormat getBlueprintRFC1123Format() -> getBlueprintRFC1123Format
    java.text.DateFormat getRFC1123Format(java.util.TimeZone) -> getRFC1123Format
    java.util.Date parse(java.lang.String) -> parse
    java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
    boolean looksLikeISO8601(java.lang.String) -> looksLikeISO8601
    java.util.Date parseAsISO8601(java.lang.String,java.text.ParsePosition) -> parseAsISO8601
    java.util.Date parseAsRFC1123(java.lang.String,java.text.ParsePosition) -> parseAsRFC1123
    boolean hasTimeZone(java.lang.String) -> hasTimeZone
    java.lang.Object clone() -> clone
org.codehaus.jackson.node.ArrayNode -> org.codehaus.jackson.node.ArrayNode:
    java.util.ArrayList _children -> _children
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isArray() -> isArray
    int size() -> size
    java.util.Iterator getElements() -> getElements
    org.codehaus.jackson.JsonNode get(int) -> get
    org.codehaus.jackson.JsonNode get(java.lang.String) -> get
    org.codehaus.jackson.JsonNode path(java.lang.String) -> path
    org.codehaus.jackson.JsonNode path(int) -> path
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode findValue(java.lang.String) -> findValue
    java.util.List findValues(java.lang.String,java.util.List) -> findValues
    java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    org.codehaus.jackson.node.ObjectNode findParent(java.lang.String) -> findParent
    java.util.List findParents(java.lang.String,java.util.List) -> findParents
    org.codehaus.jackson.JsonNode set(int,org.codehaus.jackson.JsonNode) -> set
    void add(org.codehaus.jackson.JsonNode) -> add
    org.codehaus.jackson.JsonNode addAll(org.codehaus.jackson.node.ArrayNode) -> addAll
    org.codehaus.jackson.JsonNode addAll(java.util.Collection) -> addAll
    void insert(int,org.codehaus.jackson.JsonNode) -> insert
    org.codehaus.jackson.JsonNode remove(int) -> remove
    org.codehaus.jackson.node.ArrayNode removeAll() -> removeAll
    org.codehaus.jackson.node.ArrayNode addArray() -> addArray
    org.codehaus.jackson.node.ObjectNode addObject() -> addObject
    void addPOJO(java.lang.Object) -> addPOJO
    void addNull() -> addNull
    void add(int) -> add
    void add(java.lang.Integer) -> add
    void add(long) -> add
    void add(java.lang.Long) -> add
    void add(float) -> add
    void add(java.lang.Float) -> add
    void add(double) -> add
    void add(java.lang.Double) -> add
    void add(java.math.BigDecimal) -> add
    void add(java.lang.String) -> add
    void add(boolean) -> add
    void add(java.lang.Boolean) -> add
    void add(byte[]) -> add
    org.codehaus.jackson.node.ArrayNode insertArray(int) -> insertArray
    org.codehaus.jackson.node.ObjectNode insertObject(int) -> insertObject
    void insertPOJO(int,java.lang.Object) -> insertPOJO
    void insertNull(int) -> insertNull
    void insert(int,int) -> insert
    void insert(int,java.lang.Integer) -> insert
    void insert(int,long) -> insert
    void insert(int,java.lang.Long) -> insert
    void insert(int,float) -> insert
    void insert(int,java.lang.Float) -> insert
    void insert(int,double) -> insert
    void insert(int,java.lang.Double) -> insert
    void insert(int,java.math.BigDecimal) -> insert
    void insert(int,java.lang.String) -> insert
    void insert(int,boolean) -> insert
    void insert(int,java.lang.Boolean) -> insert
    void insert(int,byte[]) -> insert
    void addContentsTo(java.util.List) -> addContentsTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    org.codehaus.jackson.JsonNode _set(int,org.codehaus.jackson.JsonNode) -> _set
    void _add(org.codehaus.jackson.JsonNode) -> _add
    void _insert(int,org.codehaus.jackson.JsonNode) -> _insert
    boolean _sameChildren(java.util.ArrayList) -> _sameChildren
    org.codehaus.jackson.node.ContainerNode removeAll() -> removeAll
    org.codehaus.jackson.JsonNode findParent(java.lang.String) -> findParent
org.codehaus.jackson.node.BaseJsonNode -> org.codehaus.jackson.node.BaseJsonNode:
    org.codehaus.jackson.JsonNode findValue(java.lang.String) -> findValue
    org.codehaus.jackson.JsonNode findPath(java.lang.String) -> findPath
    org.codehaus.jackson.node.ObjectNode findParent(java.lang.String) -> findParent
    java.util.List findValues(java.lang.String,java.util.List) -> findValues
    java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    java.util.List findParents(java.lang.String,java.util.List) -> findParents
    org.codehaus.jackson.JsonParser traverse() -> traverse
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode findParent(java.lang.String) -> findParent
org.codehaus.jackson.node.BigIntegerNode -> org.codehaus.jackson.node.BigIntegerNode:
    java.math.BigInteger _value -> _value
    org.codehaus.jackson.node.BigIntegerNode valueOf(java.math.BigInteger) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    boolean isIntegralNumber() -> isIntegralNumber
    boolean isBigInteger() -> isBigInteger
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.codehaus.jackson.node.BinaryNode -> org.codehaus.jackson.node.BinaryNode:
    org.codehaus.jackson.node.BinaryNode EMPTY_BINARY_NODE -> EMPTY_BINARY_NODE
    byte[] _data -> _data
    org.codehaus.jackson.node.BinaryNode valueOf(byte[]) -> valueOf
    org.codehaus.jackson.node.BinaryNode valueOf(byte[],int,int) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isBinary() -> isBinary
    byte[] getBinaryValue() -> getBinaryValue
    java.lang.String asText() -> asText
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.codehaus.jackson.node.BooleanNode -> org.codehaus.jackson.node.BooleanNode:
    org.codehaus.jackson.node.BooleanNode TRUE -> TRUE
    org.codehaus.jackson.node.BooleanNode FALSE -> FALSE
    org.codehaus.jackson.node.BooleanNode getTrue() -> getTrue
    org.codehaus.jackson.node.BooleanNode getFalse() -> getFalse
    org.codehaus.jackson.node.BooleanNode valueOf(boolean) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isBoolean() -> isBoolean
    boolean getBooleanValue() -> getBooleanValue
    java.lang.String asText() -> asText
    boolean asBoolean() -> asBoolean
    boolean asBoolean(boolean) -> asBoolean
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    double asDouble(double) -> asDouble
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.node.ContainerNode -> org.codehaus.jackson.node.ContainerNode:
    org.codehaus.jackson.node.JsonNodeFactory _nodeFactory -> _nodeFactory
    boolean isContainerNode() -> isContainerNode
    org.codehaus.jackson.JsonToken asToken() -> asToken
    java.lang.String getValueAsText() -> getValueAsText
    java.lang.String asText() -> asText
    org.codehaus.jackson.JsonNode findValue(java.lang.String) -> findValue
    org.codehaus.jackson.node.ObjectNode findParent(java.lang.String) -> findParent
    java.util.List findValues(java.lang.String,java.util.List) -> findValues
    java.util.List findParents(java.lang.String,java.util.List) -> findParents
    java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    int size() -> size
    org.codehaus.jackson.JsonNode get(int) -> get
    org.codehaus.jackson.JsonNode get(java.lang.String) -> get
    org.codehaus.jackson.node.ArrayNode arrayNode() -> arrayNode
    org.codehaus.jackson.node.ObjectNode objectNode() -> objectNode
    org.codehaus.jackson.node.NullNode nullNode() -> nullNode
    org.codehaus.jackson.node.BooleanNode booleanNode(boolean) -> booleanNode
    org.codehaus.jackson.node.NumericNode numberNode(byte) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(short) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(int) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(long) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(float) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(double) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(java.math.BigDecimal) -> numberNode
    org.codehaus.jackson.node.TextNode textNode(java.lang.String) -> textNode
    org.codehaus.jackson.node.BinaryNode binaryNode(byte[]) -> binaryNode
    org.codehaus.jackson.node.BinaryNode binaryNode(byte[],int,int) -> binaryNode
    org.codehaus.jackson.node.POJONode POJONode(java.lang.Object) -> POJONode
    org.codehaus.jackson.node.ContainerNode removeAll() -> removeAll
    org.codehaus.jackson.JsonNode findParent(java.lang.String) -> findParent
org.codehaus.jackson.node.ContainerNode$NoNodesIterator -> org.codehaus.jackson.node.ContainerNode$NoNodesIterator:
    org.codehaus.jackson.node.ContainerNode$NoNodesIterator instance -> instance
    org.codehaus.jackson.node.ContainerNode$NoNodesIterator instance() -> instance
    boolean hasNext() -> hasNext
    org.codehaus.jackson.JsonNode next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.codehaus.jackson.node.ContainerNode$NoStringsIterator -> org.codehaus.jackson.node.ContainerNode$NoStringsIterator:
    org.codehaus.jackson.node.ContainerNode$NoStringsIterator instance -> instance
    org.codehaus.jackson.node.ContainerNode$NoStringsIterator instance() -> instance
    boolean hasNext() -> hasNext
    java.lang.String next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.codehaus.jackson.node.DecimalNode -> org.codehaus.jackson.node.DecimalNode:
    java.math.BigDecimal _value -> _value
    org.codehaus.jackson.node.DecimalNode valueOf(java.math.BigDecimal) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    boolean isFloatingPointNumber() -> isFloatingPointNumber
    boolean isBigDecimal() -> isBigDecimal
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.lang.String asText() -> asText
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.codehaus.jackson.node.DoubleNode -> org.codehaus.jackson.node.DoubleNode:
    double _value -> _value
    org.codehaus.jackson.node.DoubleNode valueOf(double) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    boolean isFloatingPointNumber() -> isFloatingPointNumber
    boolean isDouble() -> isDouble
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.lang.String asText() -> asText
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.codehaus.jackson.node.IntNode -> org.codehaus.jackson.node.IntNode:
    int MIN_CANONICAL -> MIN_CANONICAL
    int MAX_CANONICAL -> MAX_CANONICAL
    org.codehaus.jackson.node.IntNode[] CANONICALS -> CANONICALS
    int _value -> _value
    org.codehaus.jackson.node.IntNode valueOf(int) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    boolean isIntegralNumber() -> isIntegralNumber
    boolean isInt() -> isInt
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.codehaus.jackson.node.JsonNodeFactory -> org.codehaus.jackson.node.JsonNodeFactory:
    org.codehaus.jackson.node.JsonNodeFactory instance -> instance
    org.codehaus.jackson.node.BooleanNode booleanNode(boolean) -> booleanNode
    org.codehaus.jackson.node.NullNode nullNode() -> nullNode
    org.codehaus.jackson.node.NumericNode numberNode(byte) -> numberNode
    org.codehaus.jackson.node.ValueNode numberNode(java.lang.Byte) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(short) -> numberNode
    org.codehaus.jackson.node.ValueNode numberNode(java.lang.Short) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(int) -> numberNode
    org.codehaus.jackson.node.ValueNode numberNode(java.lang.Integer) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(long) -> numberNode
    org.codehaus.jackson.node.ValueNode numberNode(java.lang.Long) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(java.math.BigInteger) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(float) -> numberNode
    org.codehaus.jackson.node.ValueNode numberNode(java.lang.Float) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(double) -> numberNode
    org.codehaus.jackson.node.ValueNode numberNode(java.lang.Double) -> numberNode
    org.codehaus.jackson.node.NumericNode numberNode(java.math.BigDecimal) -> numberNode
    org.codehaus.jackson.node.TextNode textNode(java.lang.String) -> textNode
    org.codehaus.jackson.node.BinaryNode binaryNode(byte[]) -> binaryNode
    org.codehaus.jackson.node.BinaryNode binaryNode(byte[],int,int) -> binaryNode
    org.codehaus.jackson.node.ArrayNode arrayNode() -> arrayNode
    org.codehaus.jackson.node.ObjectNode objectNode() -> objectNode
    org.codehaus.jackson.node.POJONode POJONode(java.lang.Object) -> POJONode
org.codehaus.jackson.node.LongNode -> org.codehaus.jackson.node.LongNode:
    long _value -> _value
    org.codehaus.jackson.node.LongNode valueOf(long) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    boolean isIntegralNumber() -> isIntegralNumber
    boolean isLong() -> isLong
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.codehaus.jackson.node.MissingNode -> org.codehaus.jackson.node.MissingNode:
    org.codehaus.jackson.node.MissingNode instance -> instance
    org.codehaus.jackson.node.MissingNode getInstance() -> getInstance
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isMissingNode() -> isMissingNode
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    double asDouble(double) -> asDouble
    org.codehaus.jackson.JsonNode path(java.lang.String) -> path
    org.codehaus.jackson.JsonNode path(int) -> path
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.codehaus.jackson.node.NodeCursor -> org.codehaus.jackson.node.NodeCursor:
    org.codehaus.jackson.node.NodeCursor _parent -> _parent
    org.codehaus.jackson.node.NodeCursor getParent() -> getParent
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken nextValue() -> nextValue
    org.codehaus.jackson.JsonToken endToken() -> endToken
    org.codehaus.jackson.JsonNode currentNode() -> currentNode
    boolean currentHasChildren() -> currentHasChildren
    org.codehaus.jackson.node.NodeCursor iterateChildren() -> iterateChildren
    org.codehaus.jackson.JsonStreamContext getParent() -> getParent
org.codehaus.jackson.node.NodeCursor$Array -> org.codehaus.jackson.node.NodeCursor$Array:
    java.util.Iterator _contents -> _contents
    org.codehaus.jackson.JsonNode _currentNode -> _currentNode
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken nextValue() -> nextValue
    org.codehaus.jackson.JsonToken endToken() -> endToken
    org.codehaus.jackson.JsonNode currentNode() -> currentNode
    boolean currentHasChildren() -> currentHasChildren
    org.codehaus.jackson.JsonStreamContext getParent() -> getParent
org.codehaus.jackson.node.NodeCursor$Object -> org.codehaus.jackson.node.NodeCursor$Object:
    java.util.Iterator _contents -> _contents
    java.util.Map$Entry _current -> _current
    boolean _needEntry -> _needEntry
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken nextValue() -> nextValue
    org.codehaus.jackson.JsonToken endToken() -> endToken
    org.codehaus.jackson.JsonNode currentNode() -> currentNode
    boolean currentHasChildren() -> currentHasChildren
    org.codehaus.jackson.JsonStreamContext getParent() -> getParent
org.codehaus.jackson.node.NodeCursor$RootValue -> org.codehaus.jackson.node.NodeCursor$RootValue:
    org.codehaus.jackson.JsonNode _node -> _node
    boolean _done -> _done
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken nextValue() -> nextValue
    org.codehaus.jackson.JsonToken endToken() -> endToken
    org.codehaus.jackson.JsonNode currentNode() -> currentNode
    boolean currentHasChildren() -> currentHasChildren
    org.codehaus.jackson.JsonStreamContext getParent() -> getParent
org.codehaus.jackson.node.NullNode -> org.codehaus.jackson.node.NullNode:
    org.codehaus.jackson.node.NullNode instance -> instance
    org.codehaus.jackson.node.NullNode getInstance() -> getInstance
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isNull() -> isNull
    java.lang.String asText() -> asText
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    double asDouble(double) -> asDouble
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.node.NumericNode -> org.codehaus.jackson.node.NumericNode:
    boolean isNumber() -> isNumber
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.lang.String asText() -> asText
    int asInt() -> asInt
    int asInt(int) -> asInt
    long asLong() -> asLong
    long asLong(long) -> asLong
    double asDouble() -> asDouble
    double asDouble(double) -> asDouble
org.codehaus.jackson.node.ObjectNode -> org.codehaus.jackson.node.ObjectNode:
    java.util.LinkedHashMap _children -> _children
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isObject() -> isObject
    int size() -> size
    java.util.Iterator getElements() -> getElements
    org.codehaus.jackson.JsonNode get(int) -> get
    org.codehaus.jackson.JsonNode get(java.lang.String) -> get
    java.util.Iterator getFieldNames() -> getFieldNames
    org.codehaus.jackson.JsonNode path(int) -> path
    org.codehaus.jackson.JsonNode path(java.lang.String) -> path
    java.util.Iterator getFields() -> getFields
    org.codehaus.jackson.node.ObjectNode with(java.lang.String) -> with
    org.codehaus.jackson.JsonNode findValue(java.lang.String) -> findValue
    java.util.List findValues(java.lang.String,java.util.List) -> findValues
    java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    org.codehaus.jackson.node.ObjectNode findParent(java.lang.String) -> findParent
    java.util.List findParents(java.lang.String,java.util.List) -> findParents
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode put(java.lang.String,org.codehaus.jackson.JsonNode) -> put
    org.codehaus.jackson.JsonNode remove(java.lang.String) -> remove
    org.codehaus.jackson.node.ObjectNode remove(java.util.Collection) -> remove
    org.codehaus.jackson.node.ObjectNode removeAll() -> removeAll
    org.codehaus.jackson.JsonNode putAll(java.util.Map) -> putAll
    org.codehaus.jackson.JsonNode putAll(org.codehaus.jackson.node.ObjectNode) -> putAll
    org.codehaus.jackson.node.ObjectNode retain(java.util.Collection) -> retain
    org.codehaus.jackson.node.ObjectNode retain(java.lang.String[]) -> retain
    org.codehaus.jackson.node.ArrayNode putArray(java.lang.String) -> putArray
    org.codehaus.jackson.node.ObjectNode putObject(java.lang.String) -> putObject
    void putPOJO(java.lang.String,java.lang.Object) -> putPOJO
    void putNull(java.lang.String) -> putNull
    void put(java.lang.String,int) -> put
    void put(java.lang.String,java.lang.Integer) -> put
    void put(java.lang.String,long) -> put
    void put(java.lang.String,java.lang.Long) -> put
    void put(java.lang.String,float) -> put
    void put(java.lang.String,java.lang.Float) -> put
    void put(java.lang.String,double) -> put
    void put(java.lang.String,java.lang.Double) -> put
    void put(java.lang.String,java.math.BigDecimal) -> put
    void put(java.lang.String,java.lang.String) -> put
    void put(java.lang.String,boolean) -> put
    void put(java.lang.String,java.lang.Boolean) -> put
    void put(java.lang.String,byte[]) -> put
    void putContentsTo(java.util.Map) -> putContentsTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    org.codehaus.jackson.JsonNode _put(java.lang.String,org.codehaus.jackson.JsonNode) -> _put
    org.codehaus.jackson.node.ContainerNode removeAll() -> removeAll
    org.codehaus.jackson.JsonNode with(java.lang.String) -> with
    org.codehaus.jackson.JsonNode findParent(java.lang.String) -> findParent
org.codehaus.jackson.node.ObjectNode$NoFieldsIterator -> org.codehaus.jackson.node.ObjectNode$NoFieldsIterator:
    org.codehaus.jackson.node.ObjectNode$NoFieldsIterator instance -> instance
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.codehaus.jackson.node.POJONode -> org.codehaus.jackson.node.POJONode:
    java.lang.Object _value -> _value
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isPojo() -> isPojo
    byte[] getBinaryValue() -> getBinaryValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    double asDouble(double) -> asDouble
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    java.lang.Object getPojo() -> getPojo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.codehaus.jackson.node.TextNode -> org.codehaus.jackson.node.TextNode:
    int INT_SPACE -> INT_SPACE
    org.codehaus.jackson.node.TextNode EMPTY_STRING_NODE -> EMPTY_STRING_NODE
    java.lang.String _value -> _value
    org.codehaus.jackson.node.TextNode valueOf(java.lang.String) -> valueOf
    org.codehaus.jackson.JsonToken asToken() -> asToken
    boolean isTextual() -> isTextual
    java.lang.String getTextValue() -> getTextValue
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    byte[] getBinaryValue() -> getBinaryValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    double asDouble(double) -> asDouble
    void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void appendQuoted(java.lang.StringBuilder,java.lang.String) -> appendQuoted
    void _reportInvalidBase64(org.codehaus.jackson.Base64Variant,char,int) -> _reportInvalidBase64
    void _reportInvalidBase64(org.codehaus.jackson.Base64Variant,char,int,java.lang.String) -> _reportInvalidBase64
    void _reportBase64EOF() -> _reportBase64EOF
org.codehaus.jackson.node.TreeTraversingParser -> org.codehaus.jackson.node.TreeTraversingParser:
    org.codehaus.jackson.ObjectCodec _objectCodec -> _objectCodec
    org.codehaus.jackson.node.NodeCursor _nodeCursor -> _nodeCursor
    org.codehaus.jackson.JsonToken _nextToken -> _nextToken
    boolean _startContainer -> _startContainer
    boolean _closed -> _closed
    void setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    void close() -> close
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonParser skipChildren() -> skipChildren
    boolean isClosed() -> isClosed
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonStreamContext getParsingContext() -> getParsingContext
    org.codehaus.jackson.JsonLocation getTokenLocation() -> getTokenLocation
    org.codehaus.jackson.JsonLocation getCurrentLocation() -> getCurrentLocation
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    boolean hasTextCharacters() -> hasTextCharacters
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    double getDoubleValue() -> getDoubleValue
    float getFloatValue() -> getFloatValue
    long getLongValue() -> getLongValue
    int getIntValue() -> getIntValue
    java.lang.Number getNumberValue() -> getNumberValue
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    org.codehaus.jackson.JsonNode currentNode() -> currentNode
    org.codehaus.jackson.JsonNode currentNumericNode() -> currentNumericNode
    void _handleEOF() -> _handleEOF
org.codehaus.jackson.node.TreeTraversingParser$1 -> org.codehaus.jackson.node.TreeTraversingParser$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
org.codehaus.jackson.node.ValueNode -> org.codehaus.jackson.node.ValueNode:
    boolean isValueNode() -> isValueNode
    org.codehaus.jackson.JsonToken asToken() -> asToken
    void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer) -> serializeWithType
    org.codehaus.jackson.JsonNode path(java.lang.String) -> path
    org.codehaus.jackson.JsonNode path(int) -> path
    java.lang.String toString() -> toString
org.codehaus.jackson.schema.JsonSchema -> org.codehaus.jackson.schema.JsonSchema:
    org.codehaus.jackson.node.ObjectNode schema -> schema
    org.codehaus.jackson.node.ObjectNode getSchemaNode() -> getSchemaNode
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    org.codehaus.jackson.JsonNode getDefaultSchemaNode() -> getDefaultSchemaNode
org.codehaus.jackson.schema.JsonSerializableSchema -> org.codehaus.jackson.schema.JsonSerializableSchema:
    java.lang.String schemaType() -> schemaType
    java.lang.String schemaObjectPropertiesDefinition() -> schemaObjectPropertiesDefinition
    java.lang.String schemaItemDefinition() -> schemaItemDefinition
org.codehaus.jackson.schema.SchemaAware -> org.codehaus.jackson.schema.SchemaAware:
    org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type) -> getSchema
org.codehaus.jackson.sym.BytesToNameCanonicalizer -> org.codehaus.jackson.sym.BytesToNameCanonicalizer:
    int DEFAULT_TABLE_SIZE -> DEFAULT_TABLE_SIZE
    int MAX_TABLE_SIZE -> MAX_TABLE_SIZE
    int MAX_ENTRIES_FOR_REUSE -> MAX_ENTRIES_FOR_REUSE
    int MIN_HASH_SIZE -> MIN_HASH_SIZE
    int INITIAL_COLLISION_LEN -> INITIAL_COLLISION_LEN
    int LAST_VALID_BUCKET -> LAST_VALID_BUCKET
    org.codehaus.jackson.sym.BytesToNameCanonicalizer _parent -> _parent
    boolean _intern -> _intern
    int _count -> _count
    int _mainHashMask -> _mainHashMask
    int[] _mainHash -> _mainHash
    org.codehaus.jackson.sym.Name[] _mainNames -> _mainNames
    org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket[] _collList -> _collList
    int _collCount -> _collCount
    int _collEnd -> _collEnd
    boolean _needRehash -> _needRehash
    boolean _mainHashShared -> _mainHashShared
    boolean _mainNamesShared -> _mainNamesShared
    boolean _collListShared -> _collListShared
    org.codehaus.jackson.sym.BytesToNameCanonicalizer createRoot() -> createRoot
    org.codehaus.jackson.sym.BytesToNameCanonicalizer makeChild(boolean,boolean) -> makeChild
    void release() -> release
    void initTables(int) -> initTables
    void mergeChild(org.codehaus.jackson.sym.BytesToNameCanonicalizer) -> mergeChild
    void markAsShared() -> markAsShared
    int size() -> size
    boolean maybeDirty() -> maybeDirty
    org.codehaus.jackson.sym.Name getEmptyName() -> getEmptyName
    org.codehaus.jackson.sym.Name findName(int) -> findName
    org.codehaus.jackson.sym.Name findName(int,int) -> findName
    org.codehaus.jackson.sym.Name findName(int[],int) -> findName
    org.codehaus.jackson.sym.Name addName(java.lang.String,int,int) -> addName
    org.codehaus.jackson.sym.Name addName(java.lang.String,int[],int) -> addName
    int calcHash(int) -> calcHash
    int calcHash(int,int) -> calcHash
    int calcHash(int[],int) -> calcHash
    void _addSymbol(int,org.codehaus.jackson.sym.Name) -> _addSymbol
    void rehash() -> rehash
    void nukeSymbols() -> nukeSymbols
    int findBestBucket() -> findBestBucket
    void unshareMain() -> unshareMain
    void unshareCollision() -> unshareCollision
    void unshareNames() -> unshareNames
    void expandCollision() -> expandCollision
    org.codehaus.jackson.sym.Name constructName(int,java.lang.String,int,int) -> constructName
    org.codehaus.jackson.sym.Name constructName(int,java.lang.String,int[],int) -> constructName
org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket -> org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket:
    org.codehaus.jackson.sym.Name _name -> _name
    org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket _next -> _next
    int length() -> length
    org.codehaus.jackson.sym.Name find(int,int,int) -> find
    org.codehaus.jackson.sym.Name find(int,int[],int) -> find
org.codehaus.jackson.sym.CharsToNameCanonicalizer -> org.codehaus.jackson.sym.CharsToNameCanonicalizer:
    int DEFAULT_TABLE_SIZE -> DEFAULT_TABLE_SIZE
    int MAX_TABLE_SIZE -> MAX_TABLE_SIZE
    int MAX_ENTRIES_FOR_REUSE -> MAX_ENTRIES_FOR_REUSE
    org.codehaus.jackson.sym.CharsToNameCanonicalizer sBootstrapSymbolTable -> sBootstrapSymbolTable
    org.codehaus.jackson.sym.CharsToNameCanonicalizer _parent -> _parent
    boolean _intern -> _intern
    boolean _canonicalize -> _canonicalize
    java.lang.String[] _symbols -> _symbols
    org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket[] _buckets -> _buckets
    int _size -> _size
    int _sizeThreshold -> _sizeThreshold
    int _indexMask -> _indexMask
    boolean _dirty -> _dirty
    org.codehaus.jackson.sym.CharsToNameCanonicalizer createRoot() -> createRoot
    void initTables(int) -> initTables
    org.codehaus.jackson.sym.CharsToNameCanonicalizer makeChild(boolean,boolean) -> makeChild
    org.codehaus.jackson.sym.CharsToNameCanonicalizer makeOrphan() -> makeOrphan
    void mergeChild(org.codehaus.jackson.sym.CharsToNameCanonicalizer) -> mergeChild
    void release() -> release
    int size() -> size
    boolean maybeDirty() -> maybeDirty
    java.lang.String findSymbol(char[],int,int,int) -> findSymbol
    int calcHash(char[],int,int) -> calcHash
    int calcHash(java.lang.String) -> calcHash
    void copyArrays() -> copyArrays
    void rehash() -> rehash
org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket -> org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket:
    java.lang.String _symbol -> _symbol
    org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket mNext -> mNext
    java.lang.String getSymbol() -> getSymbol
    org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket getNext() -> getNext
    java.lang.String find(char[],int,int) -> find
org.codehaus.jackson.sym.Name -> org.codehaus.jackson.sym.Name:
    java.lang.String _name -> _name
    int _hashCode -> _hashCode
    java.lang.String getName() -> getName
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int[],int) -> equals
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.sym.Name1 -> org.codehaus.jackson.sym.Name1:
    org.codehaus.jackson.sym.Name1 sEmptyName -> sEmptyName
    int mQuad -> mQuad
    org.codehaus.jackson.sym.Name1 getEmptyName() -> getEmptyName
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int[],int) -> equals
org.codehaus.jackson.sym.Name2 -> org.codehaus.jackson.sym.Name2:
    int mQuad1 -> mQuad1
    int mQuad2 -> mQuad2
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int[],int) -> equals
org.codehaus.jackson.sym.Name3 -> org.codehaus.jackson.sym.Name3:
    int mQuad1 -> mQuad1
    int mQuad2 -> mQuad2
    int mQuad3 -> mQuad3
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int[],int) -> equals
org.codehaus.jackson.sym.NameN -> org.codehaus.jackson.sym.NameN:
    int[] mQuads -> mQuads
    int mQuadLen -> mQuadLen
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int[],int) -> equals
org.codehaus.jackson.type.JavaType -> org.codehaus.jackson.type.JavaType:
    java.lang.Class _class -> _class
    int _hashCode -> _hashCode
    java.lang.Object _valueHandler -> _valueHandler
    java.lang.Object _typeHandler -> _typeHandler
    org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    void setValueHandler(java.lang.Object) -> setValueHandler
    org.codehaus.jackson.type.JavaType narrowBy(java.lang.Class) -> narrowBy
    org.codehaus.jackson.type.JavaType forcedNarrowBy(java.lang.Class) -> forcedNarrowBy
    org.codehaus.jackson.type.JavaType widenBy(java.lang.Class) -> widenBy
    org.codehaus.jackson.type.JavaType _narrow(java.lang.Class) -> _narrow
    org.codehaus.jackson.type.JavaType _widen(java.lang.Class) -> _widen
    org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    java.lang.Class getRawClass() -> getRawClass
    boolean hasRawClass(java.lang.Class) -> hasRawClass
    boolean isAbstract() -> isAbstract
    boolean isConcrete() -> isConcrete
    boolean isThrowable() -> isThrowable
    boolean isArrayType() -> isArrayType
    boolean isEnumType() -> isEnumType
    boolean isInterface() -> isInterface
    boolean isPrimitive() -> isPrimitive
    boolean isFinal() -> isFinal
    boolean isContainerType() -> isContainerType
    boolean isCollectionLikeType() -> isCollectionLikeType
    boolean isMapLikeType() -> isMapLikeType
    boolean hasGenericTypes() -> hasGenericTypes
    org.codehaus.jackson.type.JavaType getKeyType() -> getKeyType
    org.codehaus.jackson.type.JavaType getContentType() -> getContentType
    int containedTypeCount() -> containedTypeCount
    org.codehaus.jackson.type.JavaType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    java.lang.Object getValueHandler() -> getValueHandler
    java.lang.Object getTypeHandler() -> getTypeHandler
    java.lang.String toCanonical() -> toCanonical
    java.lang.String getGenericSignature() -> getGenericSignature
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.String getErasedSignature() -> getErasedSignature
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    void _assertSubclass(java.lang.Class,java.lang.Class) -> _assertSubclass
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.codehaus.jackson.type.TypeReference -> org.codehaus.jackson.type.TypeReference:
    java.lang.reflect.Type _type -> _type
    java.lang.reflect.Type getType() -> getType
    int compareTo(org.codehaus.jackson.type.TypeReference) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
org.codehaus.jackson.util.BufferRecycler -> org.codehaus.jackson.util.BufferRecycler:
    int DEFAULT_WRITE_CONCAT_BUFFER_LEN -> DEFAULT_WRITE_CONCAT_BUFFER_LEN
    byte[][] _byteBuffers -> _byteBuffers
    char[][] _charBuffers -> _charBuffers
    byte[] allocByteBuffer(org.codehaus.jackson.util.BufferRecycler$ByteBufferType) -> allocByteBuffer
    void releaseByteBuffer(org.codehaus.jackson.util.BufferRecycler$ByteBufferType,byte[]) -> releaseByteBuffer
    char[] allocCharBuffer(org.codehaus.jackson.util.BufferRecycler$CharBufferType) -> allocCharBuffer
    char[] allocCharBuffer(org.codehaus.jackson.util.BufferRecycler$CharBufferType,int) -> allocCharBuffer
    void releaseCharBuffer(org.codehaus.jackson.util.BufferRecycler$CharBufferType,char[]) -> releaseCharBuffer
    byte[] balloc(int) -> balloc
    char[] calloc(int) -> calloc
org.codehaus.jackson.util.BufferRecycler$ByteBufferType -> org.codehaus.jackson.util.BufferRecycler$ByteBufferType:
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType READ_IO_BUFFER -> READ_IO_BUFFER
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType WRITE_ENCODING_BUFFER -> WRITE_ENCODING_BUFFER
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType WRITE_CONCAT_BUFFER -> WRITE_CONCAT_BUFFER
    int size -> size
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType[] $VALUES -> $VALUES
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType[] values() -> values
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType valueOf(java.lang.String) -> valueOf
    int access$000(org.codehaus.jackson.util.BufferRecycler$ByteBufferType) -> access$000
org.codehaus.jackson.util.BufferRecycler$CharBufferType -> org.codehaus.jackson.util.BufferRecycler$CharBufferType:
    org.codehaus.jackson.util.BufferRecycler$CharBufferType TOKEN_BUFFER -> TOKEN_BUFFER
    org.codehaus.jackson.util.BufferRecycler$CharBufferType CONCAT_BUFFER -> CONCAT_BUFFER
    org.codehaus.jackson.util.BufferRecycler$CharBufferType TEXT_BUFFER -> TEXT_BUFFER
    org.codehaus.jackson.util.BufferRecycler$CharBufferType NAME_COPY_BUFFER -> NAME_COPY_BUFFER
    int size -> size
    org.codehaus.jackson.util.BufferRecycler$CharBufferType[] $VALUES -> $VALUES
    org.codehaus.jackson.util.BufferRecycler$CharBufferType[] values() -> values
    org.codehaus.jackson.util.BufferRecycler$CharBufferType valueOf(java.lang.String) -> valueOf
    int access$100(org.codehaus.jackson.util.BufferRecycler$CharBufferType) -> access$100
org.codehaus.jackson.util.ByteArrayBuilder -> org.codehaus.jackson.util.ByteArrayBuilder:
    byte[] NO_BYTES -> NO_BYTES
    int INITIAL_BLOCK_SIZE -> INITIAL_BLOCK_SIZE
    int MAX_BLOCK_SIZE -> MAX_BLOCK_SIZE
    int DEFAULT_BLOCK_ARRAY_SIZE -> DEFAULT_BLOCK_ARRAY_SIZE
    org.codehaus.jackson.util.BufferRecycler _bufferRecycler -> _bufferRecycler
    java.util.LinkedList _pastBlocks -> _pastBlocks
    int _pastLen -> _pastLen
    byte[] _currBlock -> _currBlock
    int _currBlockPtr -> _currBlockPtr
    void reset() -> reset
    void release() -> release
    void append(int) -> append
    void appendTwoBytes(int) -> appendTwoBytes
    void appendThreeBytes(int) -> appendThreeBytes
    byte[] toByteArray() -> toByteArray
    byte[] resetAndGetFirstSegment() -> resetAndGetFirstSegment
    byte[] finishCurrentSegment() -> finishCurrentSegment
    byte[] completeAndCoalesce(int) -> completeAndCoalesce
    byte[] getCurrentSegment() -> getCurrentSegment
    void setCurrentSegmentLength(int) -> setCurrentSegmentLength
    int getCurrentSegmentLength() -> getCurrentSegmentLength
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void write(int) -> write
    void close() -> close
    void flush() -> flush
    void _allocMore() -> _allocMore
org.codehaus.jackson.util.CharTypes -> org.codehaus.jackson.util.CharTypes:
    char[] HEX_CHARS -> HEX_CHARS
    byte[] HEX_BYTES -> HEX_BYTES
    int[] sInputCodes -> sInputCodes
    int[] sInputCodesUtf8 -> sInputCodesUtf8
    int[] sInputCodesJsNames -> sInputCodesJsNames
    int[] sInputCodesUtf8JsNames -> sInputCodesUtf8JsNames
    int[] sInputCodesComment -> sInputCodesComment
    int[] sOutputEscapes128 -> sOutputEscapes128
    int[] sHexValues -> sHexValues
    int[] getInputCodeLatin1() -> getInputCodeLatin1
    int[] getInputCodeUtf8() -> getInputCodeUtf8
    int[] getInputCodeLatin1JsNames() -> getInputCodeLatin1JsNames
    int[] getInputCodeUtf8JsNames() -> getInputCodeUtf8JsNames
    int[] getInputCodeComment() -> getInputCodeComment
    int[] get7BitOutputEscapes() -> get7BitOutputEscapes
    int charToHex(int) -> charToHex
    void appendQuoted(java.lang.StringBuilder,java.lang.String) -> appendQuoted
    char[] copyHexChars() -> copyHexChars
    byte[] copyHexBytes() -> copyHexBytes
org.codehaus.jackson.util.DefaultPrettyPrinter -> org.codehaus.jackson.util.DefaultPrettyPrinter:
    org.codehaus.jackson.impl.Indenter _arrayIndenter -> _arrayIndenter
    org.codehaus.jackson.impl.Indenter _objectIndenter -> _objectIndenter
    boolean _spacesInObjectEntries -> _spacesInObjectEntries
    int _nesting -> _nesting
    void indentArraysWith(org.codehaus.jackson.impl.Indenter) -> indentArraysWith
    void indentObjectsWith(org.codehaus.jackson.impl.Indenter) -> indentObjectsWith
    void spacesInObjectEntries(boolean) -> spacesInObjectEntries
    void writeRootValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeRootValueSeparator
    void writeStartObject(org.codehaus.jackson.JsonGenerator) -> writeStartObject
    void beforeObjectEntries(org.codehaus.jackson.JsonGenerator) -> beforeObjectEntries
    void writeObjectFieldValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectFieldValueSeparator
    void writeObjectEntrySeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectEntrySeparator
    void writeEndObject(org.codehaus.jackson.JsonGenerator,int) -> writeEndObject
    void writeStartArray(org.codehaus.jackson.JsonGenerator) -> writeStartArray
    void beforeArrayValues(org.codehaus.jackson.JsonGenerator) -> beforeArrayValues
    void writeArrayValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeArrayValueSeparator
    void writeEndArray(org.codehaus.jackson.JsonGenerator,int) -> writeEndArray
org.codehaus.jackson.util.DefaultPrettyPrinter$FixedSpaceIndenter -> org.codehaus.jackson.util.DefaultPrettyPrinter$FixedSpaceIndenter:
    void writeIndentation(org.codehaus.jackson.JsonGenerator,int) -> writeIndentation
    boolean isInline() -> isInline
org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter -> org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter:
    java.lang.String SYSTEM_LINE_SEPARATOR -> SYSTEM_LINE_SEPARATOR
    int SPACE_COUNT -> SPACE_COUNT
    char[] SPACES -> SPACES
    boolean isInline() -> isInline
    void writeIndentation(org.codehaus.jackson.JsonGenerator,int) -> writeIndentation
org.codehaus.jackson.util.DefaultPrettyPrinter$NopIndenter -> org.codehaus.jackson.util.DefaultPrettyPrinter$NopIndenter:
    void writeIndentation(org.codehaus.jackson.JsonGenerator,int) -> writeIndentation
    boolean isInline() -> isInline
org.codehaus.jackson.util.InternCache -> org.codehaus.jackson.util.InternCache:
    int MAX_ENTRIES -> MAX_ENTRIES
    org.codehaus.jackson.util.InternCache instance -> instance
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
    java.lang.String intern(java.lang.String) -> intern
org.codehaus.jackson.util.JsonGeneratorDelegate -> org.codehaus.jackson.util.JsonGeneratorDelegate:
    org.codehaus.jackson.JsonGenerator delegate -> delegate
    void close() -> close
    void copyCurrentEvent(org.codehaus.jackson.JsonParser) -> copyCurrentEvent
    void copyCurrentStructure(org.codehaus.jackson.JsonParser) -> copyCurrentStructure
    org.codehaus.jackson.JsonGenerator disable(org.codehaus.jackson.JsonGenerator$Feature) -> disable
    org.codehaus.jackson.JsonGenerator enable(org.codehaus.jackson.JsonGenerator$Feature) -> enable
    void flush() -> flush
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    org.codehaus.jackson.JsonStreamContext getOutputContext() -> getOutputContext
    void setSchema(org.codehaus.jackson.FormatSchema) -> setSchema
    boolean canUseSchema(org.codehaus.jackson.FormatSchema) -> canUseSchema
    org.codehaus.jackson.Version version() -> version
    java.lang.Object getOutputTarget() -> getOutputTarget
    boolean isClosed() -> isClosed
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    org.codehaus.jackson.JsonGenerator setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> writeBinary
    void writeBoolean(boolean) -> writeBoolean
    void writeEndArray() -> writeEndArray
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.io.SerializedString) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.SerializableString) -> writeFieldName
    void writeNull() -> writeNull
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeObject(java.lang.Object) -> writeObject
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    void writeStartArray() -> writeStartArray
    void writeStartObject() -> writeStartObject
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(org.codehaus.jackson.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeTree(org.codehaus.jackson.JsonNode) -> writeTree
org.codehaus.jackson.util.JsonParserDelegate -> org.codehaus.jackson.util.JsonParserDelegate:
    org.codehaus.jackson.JsonParser delegate -> delegate
    void setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    org.codehaus.jackson.JsonParser enable(org.codehaus.jackson.JsonParser$Feature) -> enable
    org.codehaus.jackson.JsonParser disable(org.codehaus.jackson.JsonParser$Feature) -> disable
    boolean isEnabled(org.codehaus.jackson.JsonParser$Feature) -> isEnabled
    void setSchema(org.codehaus.jackson.FormatSchema) -> setSchema
    boolean canUseSchema(org.codehaus.jackson.FormatSchema) -> canUseSchema
    org.codehaus.jackson.Version version() -> version
    java.lang.Object getInputSource() -> getInputSource
    void close() -> close
    boolean isClosed() -> isClosed
    org.codehaus.jackson.JsonToken getCurrentToken() -> getCurrentToken
    boolean hasCurrentToken() -> hasCurrentToken
    void clearCurrentToken() -> clearCurrentToken
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonLocation getCurrentLocation() -> getCurrentLocation
    org.codehaus.jackson.JsonToken getLastClearedToken() -> getLastClearedToken
    org.codehaus.jackson.JsonStreamContext getParsingContext() -> getParsingContext
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    boolean getBooleanValue() -> getBooleanValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    byte getByteValue() -> getByteValue
    short getShortValue() -> getShortValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    double getDoubleValue() -> getDoubleValue
    float getFloatValue() -> getFloatValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.Number getNumberValue() -> getNumberValue
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    org.codehaus.jackson.JsonLocation getTokenLocation() -> getTokenLocation
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonParser skipChildren() -> skipChildren
org.codehaus.jackson.util.JsonParserSequence -> org.codehaus.jackson.util.JsonParserSequence:
    org.codehaus.jackson.JsonParser[] _parsers -> _parsers
    int _nextParser -> _nextParser
    org.codehaus.jackson.util.JsonParserSequence createFlattened(org.codehaus.jackson.JsonParser,org.codehaus.jackson.JsonParser) -> createFlattened
    void addFlattenedActiveParsers(java.util.List) -> addFlattenedActiveParsers
    void close() -> close
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    int containedParsersCount() -> containedParsersCount
    boolean switchToNext() -> switchToNext
org.codehaus.jackson.util.MinimalPrettyPrinter -> org.codehaus.jackson.util.MinimalPrettyPrinter:
    java.lang.String DEFAULT_ROOT_VALUE_SEPARATOR -> DEFAULT_ROOT_VALUE_SEPARATOR
    java.lang.String _rootValueSeparator -> _rootValueSeparator
    void setRootValueSeparator(java.lang.String) -> setRootValueSeparator
    void writeRootValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeRootValueSeparator
    void writeStartObject(org.codehaus.jackson.JsonGenerator) -> writeStartObject
    void beforeObjectEntries(org.codehaus.jackson.JsonGenerator) -> beforeObjectEntries
    void writeObjectFieldValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectFieldValueSeparator
    void writeObjectEntrySeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectEntrySeparator
    void writeEndObject(org.codehaus.jackson.JsonGenerator,int) -> writeEndObject
    void writeStartArray(org.codehaus.jackson.JsonGenerator) -> writeStartArray
    void beforeArrayValues(org.codehaus.jackson.JsonGenerator) -> beforeArrayValues
    void writeArrayValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeArrayValueSeparator
    void writeEndArray(org.codehaus.jackson.JsonGenerator,int) -> writeEndArray
org.codehaus.jackson.util.TextBuffer -> org.codehaus.jackson.util.TextBuffer:
    char[] NO_CHARS -> NO_CHARS
    int MIN_SEGMENT_LEN -> MIN_SEGMENT_LEN
    int MAX_SEGMENT_LEN -> MAX_SEGMENT_LEN
    org.codehaus.jackson.util.BufferRecycler _allocator -> _allocator
    char[] _inputBuffer -> _inputBuffer
    int _inputStart -> _inputStart
    int _inputLen -> _inputLen
    java.util.ArrayList _segments -> _segments
    boolean _hasSegments -> _hasSegments
    int _segmentSize -> _segmentSize
    char[] _currentSegment -> _currentSegment
    int _currentSize -> _currentSize
    java.lang.String _resultString -> _resultString
    char[] _resultArray -> _resultArray
    void releaseBuffers() -> releaseBuffers
    void resetWithEmpty() -> resetWithEmpty
    void resetWithShared(char[],int,int) -> resetWithShared
    void resetWithCopy(char[],int,int) -> resetWithCopy
    void resetWithString(java.lang.String) -> resetWithString
    char[] findBuffer(int) -> findBuffer
    void clearSegments() -> clearSegments
    int size() -> size
    int getTextOffset() -> getTextOffset
    boolean hasTextAsCharacters() -> hasTextAsCharacters
    char[] getTextBuffer() -> getTextBuffer
    java.lang.String contentsAsString() -> contentsAsString
    char[] contentsAsArray() -> contentsAsArray
    java.math.BigDecimal contentsAsDecimal() -> contentsAsDecimal
    double contentsAsDouble() -> contentsAsDouble
    void ensureNotShared() -> ensureNotShared
    void append(char) -> append
    void append(char[],int,int) -> append
    void append(java.lang.String,int,int) -> append
    char[] getCurrentSegment() -> getCurrentSegment
    char[] emptyAndGetCurrentSegment() -> emptyAndGetCurrentSegment
    int getCurrentSegmentSize() -> getCurrentSegmentSize
    void setCurrentLength(int) -> setCurrentLength
    char[] finishCurrentSegment() -> finishCurrentSegment
    char[] expandCurrentSegment() -> expandCurrentSegment
    java.lang.String toString() -> toString
    void unshare(int) -> unshare
    void expand(int) -> expand
    char[] buildResultArray() -> buildResultArray
    char[] _charArray(int) -> _charArray
org.codehaus.jackson.util.TokenBuffer -> org.codehaus.jackson.util.TokenBuffer:
    int DEFAULT_PARSER_FEATURES -> DEFAULT_PARSER_FEATURES
    org.codehaus.jackson.ObjectCodec _objectCodec -> _objectCodec
    int _generatorFeatures -> _generatorFeatures
    boolean _closed -> _closed
    org.codehaus.jackson.util.TokenBuffer$Segment _first -> _first
    org.codehaus.jackson.util.TokenBuffer$Segment _last -> _last
    int _appendOffset -> _appendOffset
    org.codehaus.jackson.impl.JsonWriteContext _writeContext -> _writeContext
    org.codehaus.jackson.JsonParser asParser() -> asParser
    org.codehaus.jackson.JsonParser asParser(org.codehaus.jackson.ObjectCodec) -> asParser
    org.codehaus.jackson.JsonParser asParser(org.codehaus.jackson.JsonParser) -> asParser
    void serialize(org.codehaus.jackson.JsonGenerator) -> serialize
    java.lang.String toString() -> toString
    org.codehaus.jackson.JsonGenerator enable(org.codehaus.jackson.JsonGenerator$Feature) -> enable
    org.codehaus.jackson.JsonGenerator disable(org.codehaus.jackson.JsonGenerator$Feature) -> disable
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    org.codehaus.jackson.JsonGenerator setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    org.codehaus.jackson.impl.JsonWriteContext getOutputContext() -> getOutputContext
    void flush() -> flush
    void close() -> close
    boolean isClosed() -> isClosed
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.SerializableString) -> writeFieldName
    void writeFieldName(org.codehaus.jackson.io.SerializedString) -> writeFieldName
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(org.codehaus.jackson.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void writeObject(java.lang.Object) -> writeObject
    void writeTree(org.codehaus.jackson.JsonNode) -> writeTree
    void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> writeBinary
    void copyCurrentEvent(org.codehaus.jackson.JsonParser) -> copyCurrentEvent
    void copyCurrentStructure(org.codehaus.jackson.JsonParser) -> copyCurrentStructure
    void _append(org.codehaus.jackson.JsonToken) -> _append
    void _append(org.codehaus.jackson.JsonToken,java.lang.Object) -> _append
    void _reportUnsupportedOperation() -> _reportUnsupportedOperation
    org.codehaus.jackson.JsonStreamContext getOutputContext() -> getOutputContext
org.codehaus.jackson.util.TokenBuffer$1 -> org.codehaus.jackson.util.TokenBuffer$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
    int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType -> $SwitchMap$org$codehaus$jackson$JsonParser$NumberType
org.codehaus.jackson.util.TokenBuffer$Parser -> org.codehaus.jackson.util.TokenBuffer$Parser:
    org.codehaus.jackson.ObjectCodec _codec -> _codec
    org.codehaus.jackson.util.TokenBuffer$Segment _segment -> _segment
    int _segmentPtr -> _segmentPtr
    org.codehaus.jackson.impl.JsonReadContext _parsingContext -> _parsingContext
    boolean _closed -> _closed
    org.codehaus.jackson.util.ByteArrayBuilder _byteBuilder -> _byteBuilder
    org.codehaus.jackson.JsonLocation _location -> _location
    void setLocation(org.codehaus.jackson.JsonLocation) -> setLocation
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    void setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.JsonToken peekNextToken() -> peekNextToken
    void close() -> close
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    boolean isClosed() -> isClosed
    org.codehaus.jackson.JsonStreamContext getParsingContext() -> getParsingContext
    org.codehaus.jackson.JsonLocation getTokenLocation() -> getTokenLocation
    org.codehaus.jackson.JsonLocation getCurrentLocation() -> getCurrentLocation
    java.lang.String getCurrentName() -> getCurrentName
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    boolean hasTextCharacters() -> hasTextCharacters
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    double getDoubleValue() -> getDoubleValue
    float getFloatValue() -> getFloatValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.Number getNumberValue() -> getNumberValue
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    java.lang.Object _currentObject() -> _currentObject
    void _checkIsNumber() -> _checkIsNumber
    void _handleEOF() -> _handleEOF
org.codehaus.jackson.util.TokenBuffer$Segment -> org.codehaus.jackson.util.TokenBuffer$Segment:
    int TOKENS_PER_SEGMENT -> TOKENS_PER_SEGMENT
    org.codehaus.jackson.JsonToken[] TOKEN_TYPES_BY_INDEX -> TOKEN_TYPES_BY_INDEX
    org.codehaus.jackson.util.TokenBuffer$Segment _next -> _next
    long _tokenTypes -> _tokenTypes
    java.lang.Object[] _tokens -> _tokens
    org.codehaus.jackson.JsonToken type(int) -> type
    java.lang.Object get(int) -> get
    org.codehaus.jackson.util.TokenBuffer$Segment next() -> next
    org.codehaus.jackson.util.TokenBuffer$Segment append(int,org.codehaus.jackson.JsonToken) -> append
    org.codehaus.jackson.util.TokenBuffer$Segment append(int,org.codehaus.jackson.JsonToken,java.lang.Object) -> append
    void set(int,org.codehaus.jackson.JsonToken) -> set
    void set(int,org.codehaus.jackson.JsonToken,java.lang.Object) -> set
org.codehaus.jackson.util.VersionUtil -> org.codehaus.jackson.util.VersionUtil:
    java.lang.String VERSION_FILE -> VERSION_FILE
    java.util.regex.Pattern VERSION_SEPARATOR -> VERSION_SEPARATOR
    org.codehaus.jackson.Version versionFor(java.lang.Class) -> versionFor
    org.codehaus.jackson.Version parseVersion(java.lang.String) -> parseVersion
    int parseVersionPart(java.lang.String) -> parseVersionPart

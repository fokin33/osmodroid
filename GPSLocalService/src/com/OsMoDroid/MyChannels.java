package com.OsMoDroid;import java.text.SimpleDateFormat;import java.util.ArrayList;import java.util.HashMap;import java.util.Arrays;import java.util.Iterator;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import com.OsMoDroid.GPSLocalServiceClient.RequestCommandTask;import android.app.Activity;import android.app.AlertDialog;import android.app.ListActivity;import android.content.Context;import android.content.DialogInterface;import android.content.Intent;import android.content.SharedPreferences;import android.net.Uri;import android.os.Bundle;import android.preference.PreferenceManager;import android.text.ClipboardManager;import android.text.format.Time;import android.text.util.Linkify;import android.util.Log;import android.view.ContextMenu;import android.view.Menu;import android.view.ContextMenu.ContextMenuInfo;import android.view.MenuItem;import android.view.View;import android.view.View.OnClickListener;import android.widget.AdapterView;import android.widget.CheckBox;import android.widget.CompoundButton;import android.widget.AdapterView.AdapterContextMenuInfo;import android.widget.AdapterView.OnItemClickListener;import android.widget.CompoundButton.OnCheckedChangeListener;import android.widget.ArrayAdapter;import android.widget.Button;import android.widget.EditText;import android.widget.LinearLayout;import android.widget.ListView;import android.widget.TextView;import android.widget.Toast;public class MyChannels extends Activity implements ResultsListener{	 ListView lv1;	 SharedPreferences settings;	protected String canalid;	private String u;	 final private static SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-mm-dd HH:mm:ss");	 //	public MyChannels() {		// TODO Auto-generated constructor stub	}	@Override	public boolean onCreateOptionsMenu(Menu menu) {		 MenuItem createchannel = menu.add(0, 1, 0, "Создать канал");		 MenuItem deletechannel = menu.add(0, 2, 0, "...");		 MenuItem enterchannel = menu.add(0, 3, 0, "Вступить в канал");		 		return super.onCreateOptionsMenu(menu);	}	@Override	public boolean onOptionsItemSelected(MenuItem item) {		if (item.getItemId() == 1) {						//json:{"name":"test","code":"test","private":"0"} http://apim.esya.ru/?key=H8&query=om_channel_add&format=jsonp			LinearLayout layout = new LinearLayout(this);			layout.setOrientation(LinearLayout.VERTICAL);			final TextView txv3 = new TextView(this);			txv3.setText("Имя канала:");			layout.addView(txv3);			final EditText input2 = new EditText(this);			layout.addView(input2);			final TextView txv1 = new TextView(this);			txv1.setText("Код канала:");			layout.addView(txv1);			final EditText input = new EditText(this);			layout.addView(input);			final CheckBox chb1 = new CheckBox(this);			chb1.setText("Приватный канал");			layout.addView(chb1);			final TextView txv2 = new TextView(this);			txv2.setText("Ключ канала:");			txv2.setEnabled(false);			layout.addView(txv2);			final EditText input1 = new EditText(this);			input1.setText("Ключ канала");			input1.setEnabled(false);			layout.addView(input1);			chb1.setOnCheckedChangeListener(new OnCheckedChangeListener()			{				public void onCheckedChanged(CompoundButton buttonView,						boolean isChecked) {				if (isChecked){					input1.setEnabled(true);}				if (!isChecked){					input1.setEnabled(false);}		}			});AlertDialog alertdialog4 = new AlertDialog.Builder(					MyChannels.this)					.setTitle("Cоздать канал")					.setView(layout)					.setPositiveButton(R.string.yes,							new DialogInterface.OnClickListener() {								public void onClick(DialogInterface dialog,										int whichButton) {									canalid = input.getText().toString();									String canalkey = input1.getText().toString();									String canalname = input2.getText().toString();									if ( !(canalid.equals("")) && !(canalname.equals("")) && ( chb1.isChecked()&&(!(canalkey.equals(""))) || !chb1.isChecked() )  )									{										try {										JSONObject postjson = new JSONObject();										postjson.put("name", input2.getText().toString());										postjson.put("code", input.getText().toString());										postjson.put("private", chb1.isChecked() ? "1":"0");										//http://apim.esya.ru/?key=H8&query=om_channel_chat_post&format=jsonp										//json={"channel":"51","device":"40","text":"789"}										netutil.newapicommand((Context)MyChannels.this, "om_channel_add","json="+postjson.toString());										}										catch (Exception e) {											e.printStackTrace();										}									} else {										Toast.makeText(												MyChannels.this,												"Указаны не все данные", 5).show();									}								}							})					.setNegativeButton(R.string.No,							new DialogInterface.OnClickListener() {								public void onClick(DialogInterface dialog,										int whichButton) {									/* User clicked cancel so do some stuff */								}							}).create();			alertdialog4.show();		}        if (item.getItemId() == 2) {        	Toast.makeText(	MyChannels.this,"Пока не реализовано :-(", 5).show();		}        if (item.getItemId() == 3) {			if (!(settings.getString("device", "").equals(""))) {			LinearLayout layout = new LinearLayout(this);			layout.setOrientation(LinearLayout.VERTICAL);//			final TextView txv3 = new TextView(this);//			txv3.setText("Ваше имя:");//			layout.addView(txv3);//			final EditText input2 = new EditText(this);//			//input2.setText("Ваше имя");//			layout.addView(input2);			final TextView txv1 = new TextView(this);			txv1.setText("Код канала:");			layout.addView(txv1);			final EditText input = new EditText(this);			//input.setText("Код канала");			layout.addView(input);			final CheckBox chb1 = new CheckBox(this);			chb1.setText("Приватный канал");			layout.addView(chb1);			final TextView txv2 = new TextView(this);			txv2.setText("Ключ канала:");			//txv2.setEnabled(false);			layout.addView(txv2);			final EditText input1 = new EditText(this);			//input1.setText("Ключ канала");			input1.setEnabled(false);			layout.addView(input1);			chb1.setOnCheckedChangeListener(new OnCheckedChangeListener()			{				public void onCheckedChanged(CompoundButton buttonView,						boolean isChecked) {				if (isChecked){					input1.setEnabled(true);}				if (!isChecked){					input1.setEnabled(false);}				}			});			AlertDialog alertdialog4 = new AlertDialog.Builder(					MyChannels.this)					.setTitle("Подключение в канал")					.setView(layout)					.setPositiveButton(R.string.yes,							new DialogInterface.OnClickListener() {								public void onClick(DialogInterface dialog,										int whichButton) {									 canalid = input.getText().toString();									String canalkey = input1.getText().toString();																		if ( !(canalid.equals(""))  && ( chb1.isChecked()&&(!(canalkey.equals(""))) || !chb1.isChecked() )  )									{																					netutil.newapicommand((Context)MyChannels.this, "om_channel_find:"+canalid);									} else {										Toast.makeText(												MyChannels.this,												"Указаны не все данные", 5).show();									}								}							})					.setNegativeButton(R.string.No,							new DialogInterface.OnClickListener() {								public void onClick(DialogInterface dialog,										int whichButton) {									/* User clicked cancel so do some stuff */								}							}).create();			alertdialog4.show();			// 6564 2638 7281 2680		}else {Toast.makeText(				MyChannels.this,				"Предварительно запросите устройство", 5).show();}		}                		return super.onOptionsItemSelected(item);	}	/** Called when the activity is first created. */	@Override	public void onCreate(Bundle savedInstanceState) {	    super.onCreate(savedInstanceState);	    setContentView(R.layout.mychannels);	    settings  = PreferenceManager.getDefaultSharedPreferences(this);	    LocalService.channelsAdapter.context=MyChannels.this;	    lv1 = (ListView) findViewById(R.id.mychannelslistView);	       lv1.setAdapter(LocalService.channelsAdapter);	       if (LocalService.channelsAdapter!=null) {LocalService.channelsAdapter.notifyDataSetChanged();}	       registerForContextMenu(lv1);	  lv1.setOnItemClickListener(new OnItemClickListener() {		public void onItemClick(AdapterView<?> arg0, View arg1, int arg2,				long arg3) {						arg0.showContextMenuForChild(arg1);						}	});	    Button refsimlinkbutton = (Button) findViewById(R.id.refreshchannelsbutton);	    refsimlinkbutton.setOnClickListener(new OnClickListener() {			public void onClick(View v) {				netutil.newapicommand((ResultsListener)LocalService.serContext, (Context)MyChannels.this, "om_device_channel_adaptive:"+settings.getString("device", ""));			}});	netutil.newapicommand((ResultsListener)LocalService.serContext,(Context)MyChannels.this, "om_device_channel_adaptive:"+settings.getString("device", ""));	}	 @Override	  public void onCreateContextMenu(ContextMenu menu, View v,	      ContextMenuInfo menuInfo) {	    super.onCreateContextMenu(menu, v, menuInfo);	    menu.add(0, 2, 1, "Список устройств").setIcon(android.R.drawable.ic_menu_delete);	    menu.add(0, 1, 2, "Cообщение в канал").setIcon(android.R.drawable.ic_menu_share);	    menu.add(0, 3, 3, "Скопировать ссылку").setIcon(android.R.drawable.ic_menu_edit);	    menu.add(0, 4, 4, "Поделиться ссылкой").setIcon(android.R.drawable.ic_menu_edit);	    menu.add(0, 5, 5, "Открыть в браузере").setIcon(android.R.drawable.ic_menu_edit);	    menu.add(0, 6, 6, "Выйти из канала").setIcon(android.R.drawable.ic_menu_edit);	  }	  @Override	  public boolean onContextItemSelected(MenuItem item) {		  final AdapterContextMenuInfo acmi = (AdapterContextMenuInfo) item.getMenuInfo();		  if (item.getItemId() == 1) {								//LocalService.channelsAdapter.getItem(acmi.position);                                LinearLayout layout = new LinearLayout(this);				layout.setOrientation(LinearLayout.VERTICAL);				final TextView txv = new TextView(this);				txv.setText("Ваше сообщение:");				layout.addView(txv);				final EditText input = new EditText(this);				layout.addView(input);				AlertDialog alertdialog3 = new AlertDialog.Builder(						this)						.setTitle("Отправка сообщения")						.setView(layout)						.setPositiveButton(R.string.send,								new DialogInterface.OnClickListener() {									public void onClick(DialogInterface dialog,											int whichButton) {										if (!(input.getText().toString().equals(""))) {											JSONObject postjson = new JSONObject();											try {											postjson.put("text", input.getText().toString());											postjson.put("channel", LocalService.channelList.get((int) acmi.id).u);											postjson.put("device", settings.getString("device", ""));											//http://apim.esya.ru/?key=H8&query=om_channel_chat_post&format=jsonp											//json={"channel":"51","device":"40","text":"789"}											netutil.newapicommand((Context)MyChannels.this, "om_channel_chat_post","json="+postjson.toString());											} catch (JSONException e) {												// TODO Auto-generated catch block												e.printStackTrace();											}										}									}								})						.setNegativeButton(R.string.cancel,								new DialogInterface.OnClickListener() {									public void onClick(DialogInterface dialog,											int whichButton) {									}								}).create();				alertdialog3.show();		      return true;		    }		  if (item.getItemId() == 2) {			  startActivity(new Intent(this, MyChannelsDevices.class).putExtra("CHANNELPOS",  (int)acmi.id));			  return true;		  }		  if (item.getItemId() == 3) {			  			  ClipboardManager clipboard = (ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);              if (LocalService.channelList.get((int) acmi.id).url != null)              clipboard.setText(LocalService.channelList.get((int) acmi.id).url);			  			  return true;		  }		  		  if (item.getItemId() == 4) {			  			  Intent sendIntent = new Intent(Intent.ACTION_SEND);              sendIntent.setType("text/plain");              sendIntent.putExtra(android.content.Intent.EXTRA_TEXT, LocalService.channelList.get((int) acmi.id).url != null);              startActivity(Intent.createChooser(sendIntent, "Поделиться ссылкой"));			  			  return true;		  }		   if (item.getItemId() == 5) {			  	 Intent browseIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(LocalService.channelList.get((int) acmi.id).url));	 startActivity(browseIntent);             			  			  return true;		  } if (item.getItemId() == 6) {	  	 Intent browseIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(LocalService.channelList.get((int) acmi.id).url));	 netutil.newapicommand((Context)MyChannels.this, "om_channel_out:"+settings.getString("device", "")+","+LocalService.channelList.get((int) acmi.id).u);	 u=Integer.toString(LocalService.channelList.get((int) acmi.id).u);             			  			  return true;		  }		  				  	    return super.onContextItemSelected(item);	  }	public void onResultsSucceeded(APIComResult result) {				Log.d(getClass().getSimpleName(),"OnResultListener Command:"+result.Command+",Jo="+result.Jo);		if (!(result.Jo==null)  ) {			Toast.makeText(this,result.Jo.optString("state")+" "+ result.Jo.optString("error_description"),5).show();					if (result.Jo.has("om_channel_add")){			try {				JSONObject js = new JSONObject(result.post.replace("json=", ""));				netutil.newapicommand((Context)MyChannels.this, "om_channel_find:"+js.getString("code"));			} catch (JSONException e) {				e.printStackTrace();			}								}		if (result.Jo.has("om_channel_find:"+canalid))			{			netutil.newapicommand((Context)MyChannels.this, "om_channel_enter:"+settings.getString("device", "")+","+result.Jo.optJSONObject("om_channel_find:"+canalid).opt("u"));			u=(String) result.Jo.optJSONObject("om_channel_find:"+canalid).opt("u");			}		if (result.Jo.has("om_channel_enter:"+settings.getString("device", "")+","+u))		{			netutil.newapicommand((ResultsListener)LocalService.serContext,(Context)MyChannels.this, "om_device_channel_adaptive:"+settings.getString("device", ""));		}		if (result.Jo.has("om_channel_out:"+settings.getString("device", "")+","+u))		{			netutil.newapicommand((ResultsListener)LocalService.serContext,(Context)MyChannels.this, "om_device_channel_adaptive:"+settings.getString("device", ""));		}								}	}	}